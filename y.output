Useless nonterminals

   function_call


Terminals which are not used

   NAME
   NUMBER
   STRING_TYPE
   INCREMENT_OP
   DECREMENT_OP
   DOT_OP
   COMMENT


Useless rules

  224 function_call: IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS


State 332 conflicts: 1 shift/reduce
State 367 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_header program_body

    2 program_header: import program_header
    3               | /* empty */

    4 import: IMPORT STRING

    5 program_body: variable_section subprogram_section

    6 @1: /* empty */

    7 variable_section: VARIABLES_SECTION COLON @1 variable_declarations
    8                 | /* empty */

    9 @2: /* empty */

   10 variable_declarations: variable_declaration SEMICOLON @2 variable_declarations_tail

   11 variable_declaration: simple_variable_declaration
   12                     | compost_variable_declaration

   13 variable_declarations_tail: variable_declarations
   14                           | /* empty */

   15 @3: /* empty */

   16 subprogram_section: SUBPROGRAMS_SECTION COLON @3 subprogram_declarations
   17                   | /* empty */

   18 subprogram_declarations: subprogram_declaration subprogram_declarations_tail

   19 subprogram_declarations_tail: subprogram_declarations
   20                             | /* empty */

   21 @4: /* empty */

   22 simple_variable_declaration: type IDENTIFIER @4 simple_variable_declaration_value

   23 @5: /* empty */

   24 @6: /* empty */

   25 @7: /* empty */

   26 simple_variable_declaration: CONST @5 type IDENTIFIER @6 ASSIGN_OP @7 expression

   27 @8: /* empty */

   28 @9: /* empty */

   29 simple_variable_declaration: REF @8 type IDENTIFIER @9 simple_variable_declaration_value

   30 @10: /* empty */

   31 simple_variable_declaration_value: ASSIGN_OP @10 expression
   32                                  | /* empty */

   33 type: INT
   34     | DOUBLE REAL
   35     | REAL
   36     | COMPLEX
   37     | BOOLEAN
   38     | STRING

   39 @11: /* empty */

   40 @12: /* empty */

   41 @13: /* empty */

   42 @14: /* empty */

   43 compost_variable_declaration: MATRIX_OF @11 type OPEN_BRACKETS @12 dimensions CLOSE_BRACKETS @13 IDENTIFIER @14 matrix_assignment

   44 @15: /* empty */

   45 @16: /* empty */

   46 compost_variable_declaration: SET_OF @15 type IDENTIFIER @16 set_assignment

   47 @17: /* empty */

   48 @18: /* empty */

   49 @19: /* empty */

   50 @20: /* empty */

   51 compost_variable_declaration: ENUM @17 IDENTIFIER @18 COLON @19 IDENTIFIER @20 identifier_list END_ENUM

   52 @21: /* empty */

   53 @22: /* empty */

   54 @23: /* empty */

   55 compost_variable_declaration: STRUCT @21 IDENTIFIER @22 COLON @23 variable_declarations END_STRUCT

   56 matrix_assignment: matrix_assignment_aux
   57                  | /* empty */

   58 @24: /* empty */

   59 matrix_assignment_aux: ASSIGN_OP @24 OPEN_BRACES matrix_assignment_aux_aux

   60 matrix_assignment_aux_aux: set_assignment_aux_aux CLOSE_BRACES

   61 @25: /* empty */

   62 @26: /* empty */

   63 matrix_assignment_aux_aux: OPEN_BRACES @25 set_assignment_aux_aux CLOSE_BRACES @26 matrix_assignment_aux_aux_aux

   64 @27: /* empty */

   65 @28: /* empty */

   66 matrix_assignment_aux_aux_aux: COMMA OPEN_BRACES @27 set_assignment_aux_aux CLOSE_BRACES @28 matrix_assignment_aux_aux_aux
   67                              | /* empty */

   68 set_assignment: set_assignment_aux
   69               | /* empty */

   70 @29: /* empty */

   71 @30: /* empty */

   72 set_assignment_aux: ASSIGN_OP @29 OPEN_BRACES @30 set_assignment_aux_aux CLOSE_BRACES

   73 set_assignment_aux_aux: expression values_list

   74 @31: /* empty */

   75 values_list: COMMA @31 set_assignment_aux_aux
   76            | /* empty */

   77 @32: /* empty */

   78 @33: /* empty */

   79 identifier_list: COMMA @32 IDENTIFIER @33 identifier_list
   80                | /* empty */

   81 dimensions: range dimensions_tail
   82           | /* empty */

   83 @34: /* empty */

   84 range: INT_NUMBER @34 range_tail

   85 @35: /* empty */

   86 range_tail: RANGE @35 INT_NUMBER
   87           | /* empty */

   88 @36: /* empty */

   89 dimensions_tail: COMMA @36 range dimensions_tail
   90                | /* empty */

   91 subprogram_declaration: procedure_declaration
   92                       | function_declaration

   93 @37: /* empty */

   94 @38: /* empty */

   95 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS @37 parameter_list CLOSE_PARENTHESIS COLON @38 statement_list END_PROCEDURE SEMICOLON

   96 @39: /* empty */

   97 @40: /* empty */

   98 @41: /* empty */

   99 @42: /* empty */

  100 function_declaration: FUNCTION @39 type IDENTIFIER @40 OPEN_PARENTHESIS @41 parameter_list CLOSE_PARENTHESIS COLON @42 statement_list END_FUNCTION SEMICOLON

  101 parameter_list: variable_declaration parameter_list_tail
  102               | /* empty */

  103 @43: /* empty */

  104 parameter_list_tail: COMMA @43 variable_declaration parameter_list_tail
  105                    | /* empty */

  106 statement_list: statement statement_list
  107               | /* empty */

  108 statement: assignment_statement
  109          | if_statement
  110          | switch_statement
  111          | while_statement
  112          | for_statement
  113          | subprogram_call
  114          | return_statement
  115          | variable_declaration SEMICOLON

  116 @44: /* empty */

  117 return_statement: RETURN @44 expression SEMICOLON

  118 assignment_statement: destination assignment_statement_tail SEMICOLON

  119 @45: /* empty */

  120 assignment_statement_tail: ASSIGN_OP @45 expression

  121 @46: /* empty */

  122 assignment_statement_tail: ADD_ASSIGN_OP @46 expression

  123 @47: /* empty */

  124 assignment_statement_tail: SUB_ASSIGN_OP @47 expression

  125 @48: /* empty */

  126 assignment_statement_tail: MULT_ASSIGN_OP @48 expression

  127 @49: /* empty */

  128 assignment_statement_tail: DIV_ASSIGN_OP @49 expression

  129 @50: /* empty */

  130 assignment_statement_tail: MOD_ASSIGN_OP @50 expression

  131 @51: /* empty */

  132 destination: IDENTIFIER @51 identifier_tail

  133 @52: /* empty */

  134 identifier_tail: OPEN_BRACKETS @52 dimensions CLOSE_BRACKETS
  135                | /* empty */

  136 @53: /* empty */

  137 @54: /* empty */

  138 if_statement: IF OPEN_PARENTHESIS @53 expression CLOSE_PARENTHESIS COLON @54 statement_list else_clausule END_IF SEMICOLON

  139 @55: /* empty */

  140 else_clausule: ELSE COLON @55 statement_list
  141              | /* empty */

  142 @56: /* empty */

  143 @57: /* empty */

  144 @58: /* empty */

  145 switch_statement: SWITCH OPEN_PARENTHESIS @56 IDENTIFIER @57 CLOSE_PARENTHESIS COLON @58 case_clasule other_clasule END_SWITCH SEMICOLON

  146 @59: /* empty */

  147 @60: /* empty */

  148 @61: /* empty */

  149 case_clasule: CASE OPEN_PARENTHESIS @59 expression CLOSE_PARENTHESIS COLON @60 statement_list BREAK SEMICOLON @61 case_clasule
  150             | /* empty */

  151 @62: /* empty */

  152 other_clasule: OTHER COLON @62 statement_list
  153              | /* empty */

  154 @63: /* empty */

  155 @64: /* empty */

  156 while_statement: WHILE OPEN_PARENTHESIS @63 expression CLOSE_PARENTHESIS COLON @64 statement_list END_WHILE SEMICOLON

  157 @65: /* empty */

  158 @66: /* empty */

  159 @67: /* empty */

  160 @68: /* empty */

  161 @69: /* empty */

  162 for_statement: FOR @65 IDENTIFIER @66 IN @67 IDENTIFIER @68 COLON @69 statement_list END_FOR SEMICOLON

  163 @70: /* empty */

  164 @71: /* empty */

  165 subprogram_call: IDENTIFIER @70 OPEN_PARENTHESIS @71 argument_list CLOSE_PARENTHESIS

  166 argument_list: argument_list_aux
  167              | /* empty */

  168 argument_list_aux: expression argument_list_tail

  169 @72: /* empty */

  170 argument_list_tail: COMMA @72 argument_list_aux
  171                   | /* empty */

  172 expression: term_or term_or_tail

  173 @73: /* empty */

  174 term_or_tail: OR_OP @73 term_or term_or_tail
  175             | /* empty */

  176 term_or: term_and term_and_tail

  177 @74: /* empty */

  178 term_and_tail: AND_OP @74 term_and term_and_tail
  179              | /* empty */

  180 term_and: term_bool_comparison term_bool_comparison_tail

  181 @75: /* empty */

  182 term_bool_comparison_tail: EQ_OP @75 term_bool_comparison term_bool_comparison_tail

  183 @76: /* empty */

  184 term_bool_comparison_tail: NEQ_OP @76 term_bool_comparison term_bool_comparison_tail
  185                          | /* empty */

  186 term_bool_comparison: term_arit_comparison term_arit_comparison_tail

  187 @77: /* empty */

  188 term_arit_comparison_tail: LEQ_OP @77 term_arit_comparison term_arit_comparison_tail

  189 @78: /* empty */

  190 term_arit_comparison_tail: BEQ_OP @78 term_arit_comparison term_arit_comparison_tail

  191 @79: /* empty */

  192 term_arit_comparison_tail: LT_OP @79 term_arit_comparison term_arit_comparison_tail

  193 @80: /* empty */

  194 term_arit_comparison_tail: BT_OP @80 term_arit_comparison term_arit_comparison_tail
  195                          | /* empty */

  196 term_arit_comparison: term term_tail

  197 @81: /* empty */

  198 term_tail: ADD_OP @81 term term_tail

  199 @82: /* empty */

  200 term_tail: SUB_OP @82 term term_tail
  201          | /* empty */

  202 term: factor factor_tail

  203 @83: /* empty */

  204 factor_tail: MULT_OP @83 factor factor_tail

  205 @84: /* empty */

  206 factor_tail: DIV_OP @84 factor factor_tail

  207 @85: /* empty */

  208 factor_tail: MOD_OP @85 factor factor_tail
  209            | /* empty */

  210 factor: expo expo_tail

  211 @86: /* empty */

  212 expo_tail: EXPO_OP @86 expo expo_tail
  213          | /* empty */

  214 expo: negation_unsub negation_unsub_tail

  215 @87: /* empty */

  216 negation_unsub_tail: NEG_OP @87 negation_unsub
  217                    | /* empty */

  218 negation_unsub: INT_NUMBER
  219               | REAL_NUMBER
  220               | IMAGINARY_PART
  221               | STRING
  222               | IDENTIFIER
  223               | subprogram_call


Terminals, with rules where they appear

$end (0) 0
error (256)
NAME (258)
IDENTIFIER (259) 22 26 29 43 46 51 55 79 95 100 132 145 162 165 222
STRING (260) 4 38 221
NUMBER (261)
IMAGINARY_PART (262) 220
INT_NUMBER (263) 84 86 218
REAL_NUMBER (264) 219
IMPORT (265) 4
VARIABLES_SECTION (266) 7
SUBPROGRAMS_SECTION (267) 16
PROCEDURE (268) 95
FUNCTION (269) 100
END_PROCEDURE (270) 95
END_FUNCTION (271) 100
RETURN (272) 117
INT (273) 33
REAL (274) 34 35
COMPLEX (275) 36
STRING_TYPE (276)
DOUBLE (277) 34
BOOLEAN (278) 37
ENUM (279) 51
STRUCT (280) 55
SET_OF (281) 46
MATRIX_OF (282) 43
END_STRUCT (283) 55
END_ENUM (284) 51
CONST (285) 26
REF (286) 29
IF (287) 138
ELSE (288) 140
FOR (289) 162
IN (290) 162
WHILE (291) 156
SWITCH (292) 145
CASE (293) 149
BREAK (294) 149
OTHER (295) 152
END_IF (296) 138
END_FOR (297) 162
END_WHILE (298) 156
END_SWITCH (299) 145
SEMICOLON (300) 10 95 100 115 117 118 138 145 149 156 162
COMMA (301) 66 75 79 89 104 170
COLON (302) 7 16 51 55 95 100 138 140 145 149 152 156 162
OPEN_PARENTHESIS (303) 95 100 138 145 149 156 165
CLOSE_PARENTHESIS (304) 95 100 138 145 149 156 165
OPEN_BRACKETS (305) 43 134
CLOSE_BRACKETS (306) 43 134
OPEN_BRACES (307) 59 63 66 72
CLOSE_BRACES (308) 60 63 66 72
RANGE (309) 86
ASSIGN_OP (310) 26 31 59 72 120
ADD_ASSIGN_OP (311) 122
SUB_ASSIGN_OP (312) 124
MULT_ASSIGN_OP (313) 126
DIV_ASSIGN_OP (314) 128
MOD_ASSIGN_OP (315) 130
INCREMENT_OP (316)
DECREMENT_OP (317)
NEG_OP (318) 216
AND_OP (319) 178
OR_OP (320) 174
LEQ_OP (321) 188
BEQ_OP (322) 190
EQ_OP (323) 182
NEQ_OP (324) 184
SUB_OP (325) 200
ADD_OP (326) 198
MULT_OP (327) 204
DIV_OP (328) 206
MOD_OP (329) 208
LT_OP (330) 192
BT_OP (331) 194
EXPO_OP (332) 212
DOT_OP (333)
COMMENT (334)


Nonterminals, with rules where they appear

$accept (80)
    on left: 0
program (81)
    on left: 1, on right: 0
program_header (82)
    on left: 2 3, on right: 1 2
import (83)
    on left: 4, on right: 2
program_body (84)
    on left: 5, on right: 1
variable_section (85)
    on left: 7 8, on right: 5
@1 (86)
    on left: 6, on right: 7
variable_declarations (87)
    on left: 10, on right: 7 13 55
@2 (88)
    on left: 9, on right: 10
variable_declaration (89)
    on left: 11 12, on right: 10 101 104 115
variable_declarations_tail (90)
    on left: 13 14, on right: 10
subprogram_section (91)
    on left: 16 17, on right: 5
@3 (92)
    on left: 15, on right: 16
subprogram_declarations (93)
    on left: 18, on right: 16 19
subprogram_declarations_tail (94)
    on left: 19 20, on right: 18
simple_variable_declaration (95)
    on left: 22 26 29, on right: 11
@4 (96)
    on left: 21, on right: 22
@5 (97)
    on left: 23, on right: 26
@6 (98)
    on left: 24, on right: 26
@7 (99)
    on left: 25, on right: 26
@8 (100)
    on left: 27, on right: 29
@9 (101)
    on left: 28, on right: 29
simple_variable_declaration_value (102)
    on left: 31 32, on right: 22 29
@10 (103)
    on left: 30, on right: 31
type (104)
    on left: 33 34 35 36 37 38, on right: 22 26 29 43 46 100
compost_variable_declaration (105)
    on left: 43 46 51 55, on right: 12
@11 (106)
    on left: 39, on right: 43
@12 (107)
    on left: 40, on right: 43
@13 (108)
    on left: 41, on right: 43
@14 (109)
    on left: 42, on right: 43
@15 (110)
    on left: 44, on right: 46
@16 (111)
    on left: 45, on right: 46
@17 (112)
    on left: 47, on right: 51
@18 (113)
    on left: 48, on right: 51
@19 (114)
    on left: 49, on right: 51
@20 (115)
    on left: 50, on right: 51
@21 (116)
    on left: 52, on right: 55
@22 (117)
    on left: 53, on right: 55
@23 (118)
    on left: 54, on right: 55
matrix_assignment (119)
    on left: 56 57, on right: 43
matrix_assignment_aux (120)
    on left: 59, on right: 56
@24 (121)
    on left: 58, on right: 59
matrix_assignment_aux_aux (122)
    on left: 60 63, on right: 59
@25 (123)
    on left: 61, on right: 63
@26 (124)
    on left: 62, on right: 63
matrix_assignment_aux_aux_aux (125)
    on left: 66 67, on right: 63 66
@27 (126)
    on left: 64, on right: 66
@28 (127)
    on left: 65, on right: 66
set_assignment (128)
    on left: 68 69, on right: 46
set_assignment_aux (129)
    on left: 72, on right: 68
@29 (130)
    on left: 70, on right: 72
@30 (131)
    on left: 71, on right: 72
set_assignment_aux_aux (132)
    on left: 73, on right: 60 63 66 72 75
values_list (133)
    on left: 75 76, on right: 73
@31 (134)
    on left: 74, on right: 75
identifier_list (135)
    on left: 79 80, on right: 51 79
@32 (136)
    on left: 77, on right: 79
@33 (137)
    on left: 78, on right: 79
dimensions (138)
    on left: 81 82, on right: 43 134
range (139)
    on left: 84, on right: 81 89
@34 (140)
    on left: 83, on right: 84
range_tail (141)
    on left: 86 87, on right: 84
@35 (142)
    on left: 85, on right: 86
dimensions_tail (143)
    on left: 89 90, on right: 81 89
@36 (144)
    on left: 88, on right: 89
subprogram_declaration (145)
    on left: 91 92, on right: 18
procedure_declaration (146)
    on left: 95, on right: 91
@37 (147)
    on left: 93, on right: 95
@38 (148)
    on left: 94, on right: 95
function_declaration (149)
    on left: 100, on right: 92
@39 (150)
    on left: 96, on right: 100
@40 (151)
    on left: 97, on right: 100
@41 (152)
    on left: 98, on right: 100
@42 (153)
    on left: 99, on right: 100
parameter_list (154)
    on left: 101 102, on right: 95 100
parameter_list_tail (155)
    on left: 104 105, on right: 101 104
@43 (156)
    on left: 103, on right: 104
statement_list (157)
    on left: 106 107, on right: 95 100 106 138 140 149 152 156 162
statement (158)
    on left: 108 109 110 111 112 113 114 115, on right: 106
return_statement (159)
    on left: 117, on right: 114
@44 (160)
    on left: 116, on right: 117
assignment_statement (161)
    on left: 118, on right: 108
assignment_statement_tail (162)
    on left: 120 122 124 126 128 130, on right: 118
@45 (163)
    on left: 119, on right: 120
@46 (164)
    on left: 121, on right: 122
@47 (165)
    on left: 123, on right: 124
@48 (166)
    on left: 125, on right: 126
@49 (167)
    on left: 127, on right: 128
@50 (168)
    on left: 129, on right: 130
destination (169)
    on left: 132, on right: 118
@51 (170)
    on left: 131, on right: 132
identifier_tail (171)
    on left: 134 135, on right: 132
@52 (172)
    on left: 133, on right: 134
if_statement (173)
    on left: 138, on right: 109
@53 (174)
    on left: 136, on right: 138
@54 (175)
    on left: 137, on right: 138
else_clausule (176)
    on left: 140 141, on right: 138
@55 (177)
    on left: 139, on right: 140
switch_statement (178)
    on left: 145, on right: 110
@56 (179)
    on left: 142, on right: 145
@57 (180)
    on left: 143, on right: 145
@58 (181)
    on left: 144, on right: 145
case_clasule (182)
    on left: 149 150, on right: 145 149
@59 (183)
    on left: 146, on right: 149
@60 (184)
    on left: 147, on right: 149
@61 (185)
    on left: 148, on right: 149
other_clasule (186)
    on left: 152 153, on right: 145
@62 (187)
    on left: 151, on right: 152
while_statement (188)
    on left: 156, on right: 111
@63 (189)
    on left: 154, on right: 156
@64 (190)
    on left: 155, on right: 156
for_statement (191)
    on left: 162, on right: 112
@65 (192)
    on left: 157, on right: 162
@66 (193)
    on left: 158, on right: 162
@67 (194)
    on left: 159, on right: 162
@68 (195)
    on left: 160, on right: 162
@69 (196)
    on left: 161, on right: 162
subprogram_call (197)
    on left: 165, on right: 113 223
@70 (198)
    on left: 163, on right: 165
@71 (199)
    on left: 164, on right: 165
argument_list (200)
    on left: 166 167, on right: 165
argument_list_aux (201)
    on left: 168, on right: 166 170
argument_list_tail (202)
    on left: 170 171, on right: 168
@72 (203)
    on left: 169, on right: 170
expression (204)
    on left: 172, on right: 26 31 73 117 120 122 124 126 128 130 138
    149 156 168
term_or_tail (205)
    on left: 174 175, on right: 172 174
@73 (206)
    on left: 173, on right: 174
term_or (207)
    on left: 176, on right: 172 174
term_and_tail (208)
    on left: 178 179, on right: 176 178
@74 (209)
    on left: 177, on right: 178
term_and (210)
    on left: 180, on right: 176 178
term_bool_comparison_tail (211)
    on left: 182 184 185, on right: 180 182 184
@75 (212)
    on left: 181, on right: 182
@76 (213)
    on left: 183, on right: 184
term_bool_comparison (214)
    on left: 186, on right: 180 182 184
term_arit_comparison_tail (215)
    on left: 188 190 192 194 195, on right: 186 188 190 192 194
@77 (216)
    on left: 187, on right: 188
@78 (217)
    on left: 189, on right: 190
@79 (218)
    on left: 191, on right: 192
@80 (219)
    on left: 193, on right: 194
term_arit_comparison (220)
    on left: 196, on right: 186 188 190 192 194
term_tail (221)
    on left: 198 200 201, on right: 196 198 200
@81 (222)
    on left: 197, on right: 198
@82 (223)
    on left: 199, on right: 200
term (224)
    on left: 202, on right: 196 198 200
factor_tail (225)
    on left: 204 206 208 209, on right: 202 204 206 208
@83 (226)
    on left: 203, on right: 204
@84 (227)
    on left: 205, on right: 206
@85 (228)
    on left: 207, on right: 208
factor (229)
    on left: 210, on right: 202 204 206 208
expo_tail (230)
    on left: 212 213, on right: 210 212
@86 (231)
    on left: 211, on right: 212
expo (232)
    on left: 214, on right: 210 212
negation_unsub_tail (233)
    on left: 216 217, on right: 214
@87 (234)
    on left: 215, on right: 216
negation_unsub (235)
    on left: 218 219 220 221 222 223, on right: 214 216


state 0

    0 $accept: . program $end

    IMPORT  shift, and go to state 1

    $default  reduce using rule 3 (program_header)

    program         go to state 2
    program_header  go to state 3
    import          go to state 4


state 1

    4 import: IMPORT . STRING

    STRING  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: program_header . program_body

    VARIABLES_SECTION  shift, and go to state 7

    $default  reduce using rule 8 (variable_section)

    program_body      go to state 8
    variable_section  go to state 9


state 4

    2 program_header: import . program_header

    IMPORT  shift, and go to state 1

    $default  reduce using rule 3 (program_header)

    program_header  go to state 10
    import          go to state 4


state 5

    4 import: IMPORT STRING .

    $default  reduce using rule 4 (import)


state 6

    0 $accept: program $end .

    $default  accept


state 7

    7 variable_section: VARIABLES_SECTION . COLON @1 variable_declarations

    COLON  shift, and go to state 11


state 8

    1 program: program_header program_body .

    $default  reduce using rule 1 (program)


state 9

    5 program_body: variable_section . subprogram_section

    SUBPROGRAMS_SECTION  shift, and go to state 12

    $default  reduce using rule 17 (subprogram_section)

    subprogram_section  go to state 13


state 10

    2 program_header: import program_header .

    $default  reduce using rule 2 (program_header)


state 11

    7 variable_section: VARIABLES_SECTION COLON . @1 variable_declarations

    $default  reduce using rule 6 (@1)

    @1  go to state 14


state 12

   16 subprogram_section: SUBPROGRAMS_SECTION . COLON @3 subprogram_declarations

    COLON  shift, and go to state 15


state 13

    5 program_body: variable_section subprogram_section .

    $default  reduce using rule 5 (program_body)


state 14

    7 variable_section: VARIABLES_SECTION COLON @1 . variable_declarations

    STRING     shift, and go to state 16
    INT        shift, and go to state 17
    REAL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOLEAN    shift, and go to state 21
    ENUM       shift, and go to state 22
    STRUCT     shift, and go to state 23
    SET_OF     shift, and go to state 24
    MATRIX_OF  shift, and go to state 25
    CONST      shift, and go to state 26
    REF        shift, and go to state 27

    variable_declarations         go to state 28
    variable_declaration          go to state 29
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32


state 15

   16 subprogram_section: SUBPROGRAMS_SECTION COLON . @3 subprogram_declarations

    $default  reduce using rule 15 (@3)

    @3  go to state 33


state 16

   38 type: STRING .

    $default  reduce using rule 38 (type)


state 17

   33 type: INT .

    $default  reduce using rule 33 (type)


state 18

   35 type: REAL .

    $default  reduce using rule 35 (type)


state 19

   36 type: COMPLEX .

    $default  reduce using rule 36 (type)


state 20

   34 type: DOUBLE . REAL

    REAL  shift, and go to state 34


state 21

   37 type: BOOLEAN .

    $default  reduce using rule 37 (type)


state 22

   51 compost_variable_declaration: ENUM . @17 IDENTIFIER @18 COLON @19 IDENTIFIER @20 identifier_list END_ENUM

    $default  reduce using rule 47 (@17)

    @17  go to state 35


state 23

   55 compost_variable_declaration: STRUCT . @21 IDENTIFIER @22 COLON @23 variable_declarations END_STRUCT

    $default  reduce using rule 52 (@21)

    @21  go to state 36


state 24

   46 compost_variable_declaration: SET_OF . @15 type IDENTIFIER @16 set_assignment

    $default  reduce using rule 44 (@15)

    @15  go to state 37


state 25

   43 compost_variable_declaration: MATRIX_OF . @11 type OPEN_BRACKETS @12 dimensions CLOSE_BRACKETS @13 IDENTIFIER @14 matrix_assignment

    $default  reduce using rule 39 (@11)

    @11  go to state 38


state 26

   26 simple_variable_declaration: CONST . @5 type IDENTIFIER @6 ASSIGN_OP @7 expression

    $default  reduce using rule 23 (@5)

    @5  go to state 39


state 27

   29 simple_variable_declaration: REF . @8 type IDENTIFIER @9 simple_variable_declaration_value

    $default  reduce using rule 27 (@8)

    @8  go to state 40


state 28

    7 variable_section: VARIABLES_SECTION COLON @1 variable_declarations .

    $default  reduce using rule 7 (variable_section)


state 29

   10 variable_declarations: variable_declaration . SEMICOLON @2 variable_declarations_tail

    SEMICOLON  shift, and go to state 41


state 30

   11 variable_declaration: simple_variable_declaration .

    $default  reduce using rule 11 (variable_declaration)


state 31

   22 simple_variable_declaration: type . IDENTIFIER @4 simple_variable_declaration_value

    IDENTIFIER  shift, and go to state 42


state 32

   12 variable_declaration: compost_variable_declaration .

    $default  reduce using rule 12 (variable_declaration)


state 33

   16 subprogram_section: SUBPROGRAMS_SECTION COLON @3 . subprogram_declarations

    PROCEDURE  shift, and go to state 43
    FUNCTION   shift, and go to state 44

    subprogram_declarations  go to state 45
    subprogram_declaration   go to state 46
    procedure_declaration    go to state 47
    function_declaration     go to state 48


state 34

   34 type: DOUBLE REAL .

    $default  reduce using rule 34 (type)


state 35

   51 compost_variable_declaration: ENUM @17 . IDENTIFIER @18 COLON @19 IDENTIFIER @20 identifier_list END_ENUM

    IDENTIFIER  shift, and go to state 49


state 36

   55 compost_variable_declaration: STRUCT @21 . IDENTIFIER @22 COLON @23 variable_declarations END_STRUCT

    IDENTIFIER  shift, and go to state 50


state 37

   46 compost_variable_declaration: SET_OF @15 . type IDENTIFIER @16 set_assignment

    STRING   shift, and go to state 16
    INT      shift, and go to state 17
    REAL     shift, and go to state 18
    COMPLEX  shift, and go to state 19
    DOUBLE   shift, and go to state 20
    BOOLEAN  shift, and go to state 21

    type  go to state 51


state 38

   43 compost_variable_declaration: MATRIX_OF @11 . type OPEN_BRACKETS @12 dimensions CLOSE_BRACKETS @13 IDENTIFIER @14 matrix_assignment

    STRING   shift, and go to state 16
    INT      shift, and go to state 17
    REAL     shift, and go to state 18
    COMPLEX  shift, and go to state 19
    DOUBLE   shift, and go to state 20
    BOOLEAN  shift, and go to state 21

    type  go to state 52


state 39

   26 simple_variable_declaration: CONST @5 . type IDENTIFIER @6 ASSIGN_OP @7 expression

    STRING   shift, and go to state 16
    INT      shift, and go to state 17
    REAL     shift, and go to state 18
    COMPLEX  shift, and go to state 19
    DOUBLE   shift, and go to state 20
    BOOLEAN  shift, and go to state 21

    type  go to state 53


state 40

   29 simple_variable_declaration: REF @8 . type IDENTIFIER @9 simple_variable_declaration_value

    STRING   shift, and go to state 16
    INT      shift, and go to state 17
    REAL     shift, and go to state 18
    COMPLEX  shift, and go to state 19
    DOUBLE   shift, and go to state 20
    BOOLEAN  shift, and go to state 21

    type  go to state 54


state 41

   10 variable_declarations: variable_declaration SEMICOLON . @2 variable_declarations_tail

    $default  reduce using rule 9 (@2)

    @2  go to state 55


state 42

   22 simple_variable_declaration: type IDENTIFIER . @4 simple_variable_declaration_value

    $default  reduce using rule 21 (@4)

    @4  go to state 56


state 43

   95 procedure_declaration: PROCEDURE . IDENTIFIER OPEN_PARENTHESIS @37 parameter_list CLOSE_PARENTHESIS COLON @38 statement_list END_PROCEDURE SEMICOLON

    IDENTIFIER  shift, and go to state 57


state 44

  100 function_declaration: FUNCTION . @39 type IDENTIFIER @40 OPEN_PARENTHESIS @41 parameter_list CLOSE_PARENTHESIS COLON @42 statement_list END_FUNCTION SEMICOLON

    $default  reduce using rule 96 (@39)

    @39  go to state 58


state 45

   16 subprogram_section: SUBPROGRAMS_SECTION COLON @3 subprogram_declarations .

    $default  reduce using rule 16 (subprogram_section)


state 46

   18 subprogram_declarations: subprogram_declaration . subprogram_declarations_tail

    PROCEDURE  shift, and go to state 43
    FUNCTION   shift, and go to state 44

    $default  reduce using rule 20 (subprogram_declarations_tail)

    subprogram_declarations       go to state 59
    subprogram_declarations_tail  go to state 60
    subprogram_declaration        go to state 46
    procedure_declaration         go to state 47
    function_declaration          go to state 48


state 47

   91 subprogram_declaration: procedure_declaration .

    $default  reduce using rule 91 (subprogram_declaration)


state 48

   92 subprogram_declaration: function_declaration .

    $default  reduce using rule 92 (subprogram_declaration)


state 49

   51 compost_variable_declaration: ENUM @17 IDENTIFIER . @18 COLON @19 IDENTIFIER @20 identifier_list END_ENUM

    $default  reduce using rule 48 (@18)

    @18  go to state 61


state 50

   55 compost_variable_declaration: STRUCT @21 IDENTIFIER . @22 COLON @23 variable_declarations END_STRUCT

    $default  reduce using rule 53 (@22)

    @22  go to state 62


state 51

   46 compost_variable_declaration: SET_OF @15 type . IDENTIFIER @16 set_assignment

    IDENTIFIER  shift, and go to state 63


state 52

   43 compost_variable_declaration: MATRIX_OF @11 type . OPEN_BRACKETS @12 dimensions CLOSE_BRACKETS @13 IDENTIFIER @14 matrix_assignment

    OPEN_BRACKETS  shift, and go to state 64


state 53

   26 simple_variable_declaration: CONST @5 type . IDENTIFIER @6 ASSIGN_OP @7 expression

    IDENTIFIER  shift, and go to state 65


state 54

   29 simple_variable_declaration: REF @8 type . IDENTIFIER @9 simple_variable_declaration_value

    IDENTIFIER  shift, and go to state 66


state 55

   10 variable_declarations: variable_declaration SEMICOLON @2 . variable_declarations_tail

    STRING     shift, and go to state 16
    INT        shift, and go to state 17
    REAL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOLEAN    shift, and go to state 21
    ENUM       shift, and go to state 22
    STRUCT     shift, and go to state 23
    SET_OF     shift, and go to state 24
    MATRIX_OF  shift, and go to state 25
    CONST      shift, and go to state 26
    REF        shift, and go to state 27

    $default  reduce using rule 14 (variable_declarations_tail)

    variable_declarations         go to state 67
    variable_declaration          go to state 29
    variable_declarations_tail    go to state 68
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32


state 56

   22 simple_variable_declaration: type IDENTIFIER @4 . simple_variable_declaration_value

    ASSIGN_OP  shift, and go to state 69

    $default  reduce using rule 32 (simple_variable_declaration_value)

    simple_variable_declaration_value  go to state 70


state 57

   95 procedure_declaration: PROCEDURE IDENTIFIER . OPEN_PARENTHESIS @37 parameter_list CLOSE_PARENTHESIS COLON @38 statement_list END_PROCEDURE SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 71


state 58

  100 function_declaration: FUNCTION @39 . type IDENTIFIER @40 OPEN_PARENTHESIS @41 parameter_list CLOSE_PARENTHESIS COLON @42 statement_list END_FUNCTION SEMICOLON

    STRING   shift, and go to state 16
    INT      shift, and go to state 17
    REAL     shift, and go to state 18
    COMPLEX  shift, and go to state 19
    DOUBLE   shift, and go to state 20
    BOOLEAN  shift, and go to state 21

    type  go to state 72


state 59

   19 subprogram_declarations_tail: subprogram_declarations .

    $default  reduce using rule 19 (subprogram_declarations_tail)


state 60

   18 subprogram_declarations: subprogram_declaration subprogram_declarations_tail .

    $default  reduce using rule 18 (subprogram_declarations)


state 61

   51 compost_variable_declaration: ENUM @17 IDENTIFIER @18 . COLON @19 IDENTIFIER @20 identifier_list END_ENUM

    COLON  shift, and go to state 73


state 62

   55 compost_variable_declaration: STRUCT @21 IDENTIFIER @22 . COLON @23 variable_declarations END_STRUCT

    COLON  shift, and go to state 74


state 63

   46 compost_variable_declaration: SET_OF @15 type IDENTIFIER . @16 set_assignment

    $default  reduce using rule 45 (@16)

    @16  go to state 75


state 64

   43 compost_variable_declaration: MATRIX_OF @11 type OPEN_BRACKETS . @12 dimensions CLOSE_BRACKETS @13 IDENTIFIER @14 matrix_assignment

    $default  reduce using rule 40 (@12)

    @12  go to state 76


state 65

   26 simple_variable_declaration: CONST @5 type IDENTIFIER . @6 ASSIGN_OP @7 expression

    $default  reduce using rule 24 (@6)

    @6  go to state 77


state 66

   29 simple_variable_declaration: REF @8 type IDENTIFIER . @9 simple_variable_declaration_value

    $default  reduce using rule 28 (@9)

    @9  go to state 78


state 67

   13 variable_declarations_tail: variable_declarations .

    $default  reduce using rule 13 (variable_declarations_tail)


state 68

   10 variable_declarations: variable_declaration SEMICOLON @2 variable_declarations_tail .

    $default  reduce using rule 10 (variable_declarations)


state 69

   31 simple_variable_declaration_value: ASSIGN_OP . @10 expression

    $default  reduce using rule 30 (@10)

    @10  go to state 79


state 70

   22 simple_variable_declaration: type IDENTIFIER @4 simple_variable_declaration_value .

    $default  reduce using rule 22 (simple_variable_declaration)


state 71

   95 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS . @37 parameter_list CLOSE_PARENTHESIS COLON @38 statement_list END_PROCEDURE SEMICOLON

    $default  reduce using rule 93 (@37)

    @37  go to state 80


state 72

  100 function_declaration: FUNCTION @39 type . IDENTIFIER @40 OPEN_PARENTHESIS @41 parameter_list CLOSE_PARENTHESIS COLON @42 statement_list END_FUNCTION SEMICOLON

    IDENTIFIER  shift, and go to state 81


state 73

   51 compost_variable_declaration: ENUM @17 IDENTIFIER @18 COLON . @19 IDENTIFIER @20 identifier_list END_ENUM

    $default  reduce using rule 49 (@19)

    @19  go to state 82


state 74

   55 compost_variable_declaration: STRUCT @21 IDENTIFIER @22 COLON . @23 variable_declarations END_STRUCT

    $default  reduce using rule 54 (@23)

    @23  go to state 83


state 75

   46 compost_variable_declaration: SET_OF @15 type IDENTIFIER @16 . set_assignment

    ASSIGN_OP  shift, and go to state 84

    $default  reduce using rule 69 (set_assignment)

    set_assignment      go to state 85
    set_assignment_aux  go to state 86


state 76

   43 compost_variable_declaration: MATRIX_OF @11 type OPEN_BRACKETS @12 . dimensions CLOSE_BRACKETS @13 IDENTIFIER @14 matrix_assignment

    INT_NUMBER  shift, and go to state 87

    $default  reduce using rule 82 (dimensions)

    dimensions  go to state 88
    range       go to state 89


state 77

   26 simple_variable_declaration: CONST @5 type IDENTIFIER @6 . ASSIGN_OP @7 expression

    ASSIGN_OP  shift, and go to state 90


state 78

   29 simple_variable_declaration: REF @8 type IDENTIFIER @9 . simple_variable_declaration_value

    ASSIGN_OP  shift, and go to state 69

    $default  reduce using rule 32 (simple_variable_declaration_value)

    simple_variable_declaration_value  go to state 91


state 79

   31 simple_variable_declaration_value: ASSIGN_OP @10 . expression

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    expression            go to state 98
    term_or               go to state 99
    term_and              go to state 100
    term_bool_comparison  go to state 101
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 80

   95 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS @37 . parameter_list CLOSE_PARENTHESIS COLON @38 statement_list END_PROCEDURE SEMICOLON

    STRING     shift, and go to state 16
    INT        shift, and go to state 17
    REAL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOLEAN    shift, and go to state 21
    ENUM       shift, and go to state 22
    STRUCT     shift, and go to state 23
    SET_OF     shift, and go to state 24
    MATRIX_OF  shift, and go to state 25
    CONST      shift, and go to state 26
    REF        shift, and go to state 27

    $default  reduce using rule 102 (parameter_list)

    variable_declaration          go to state 107
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    parameter_list                go to state 108


state 81

  100 function_declaration: FUNCTION @39 type IDENTIFIER . @40 OPEN_PARENTHESIS @41 parameter_list CLOSE_PARENTHESIS COLON @42 statement_list END_FUNCTION SEMICOLON

    $default  reduce using rule 97 (@40)

    @40  go to state 109


state 82

   51 compost_variable_declaration: ENUM @17 IDENTIFIER @18 COLON @19 . IDENTIFIER @20 identifier_list END_ENUM

    IDENTIFIER  shift, and go to state 110


state 83

   55 compost_variable_declaration: STRUCT @21 IDENTIFIER @22 COLON @23 . variable_declarations END_STRUCT

    STRING     shift, and go to state 16
    INT        shift, and go to state 17
    REAL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOLEAN    shift, and go to state 21
    ENUM       shift, and go to state 22
    STRUCT     shift, and go to state 23
    SET_OF     shift, and go to state 24
    MATRIX_OF  shift, and go to state 25
    CONST      shift, and go to state 26
    REF        shift, and go to state 27

    variable_declarations         go to state 111
    variable_declaration          go to state 29
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32


state 84

   72 set_assignment_aux: ASSIGN_OP . @29 OPEN_BRACES @30 set_assignment_aux_aux CLOSE_BRACES

    $default  reduce using rule 70 (@29)

    @29  go to state 112


state 85

   46 compost_variable_declaration: SET_OF @15 type IDENTIFIER @16 set_assignment .

    $default  reduce using rule 46 (compost_variable_declaration)


state 86

   68 set_assignment: set_assignment_aux .

    $default  reduce using rule 68 (set_assignment)


state 87

   84 range: INT_NUMBER . @34 range_tail

    $default  reduce using rule 83 (@34)

    @34  go to state 113


state 88

   43 compost_variable_declaration: MATRIX_OF @11 type OPEN_BRACKETS @12 dimensions . CLOSE_BRACKETS @13 IDENTIFIER @14 matrix_assignment

    CLOSE_BRACKETS  shift, and go to state 114


state 89

   81 dimensions: range . dimensions_tail

    COMMA  shift, and go to state 115

    $default  reduce using rule 90 (dimensions_tail)

    dimensions_tail  go to state 116


state 90

   26 simple_variable_declaration: CONST @5 type IDENTIFIER @6 ASSIGN_OP . @7 expression

    $default  reduce using rule 25 (@7)

    @7  go to state 117


state 91

   29 simple_variable_declaration: REF @8 type IDENTIFIER @9 simple_variable_declaration_value .

    $default  reduce using rule 29 (simple_variable_declaration)


state 92

  165 subprogram_call: IDENTIFIER . @70 OPEN_PARENTHESIS @71 argument_list CLOSE_PARENTHESIS
  222 negation_unsub: IDENTIFIER .

    OPEN_PARENTHESIS  reduce using rule 163 (@70)
    $default          reduce using rule 222 (negation_unsub)

    @70  go to state 118


state 93

  221 negation_unsub: STRING .

    $default  reduce using rule 221 (negation_unsub)


state 94

  220 negation_unsub: IMAGINARY_PART .

    $default  reduce using rule 220 (negation_unsub)


state 95

  218 negation_unsub: INT_NUMBER .

    $default  reduce using rule 218 (negation_unsub)


state 96

  219 negation_unsub: REAL_NUMBER .

    $default  reduce using rule 219 (negation_unsub)


state 97

  223 negation_unsub: subprogram_call .

    $default  reduce using rule 223 (negation_unsub)


state 98

   31 simple_variable_declaration_value: ASSIGN_OP @10 expression .

    $default  reduce using rule 31 (simple_variable_declaration_value)


state 99

  172 expression: term_or . term_or_tail

    OR_OP  shift, and go to state 119

    $default  reduce using rule 175 (term_or_tail)

    term_or_tail  go to state 120


state 100

  176 term_or: term_and . term_and_tail

    AND_OP  shift, and go to state 121

    $default  reduce using rule 179 (term_and_tail)

    term_and_tail  go to state 122


state 101

  180 term_and: term_bool_comparison . term_bool_comparison_tail

    EQ_OP   shift, and go to state 123
    NEQ_OP  shift, and go to state 124

    $default  reduce using rule 185 (term_bool_comparison_tail)

    term_bool_comparison_tail  go to state 125


state 102

  186 term_bool_comparison: term_arit_comparison . term_arit_comparison_tail

    LEQ_OP  shift, and go to state 126
    BEQ_OP  shift, and go to state 127
    LT_OP   shift, and go to state 128
    BT_OP   shift, and go to state 129

    $default  reduce using rule 195 (term_arit_comparison_tail)

    term_arit_comparison_tail  go to state 130


state 103

  196 term_arit_comparison: term . term_tail

    SUB_OP  shift, and go to state 131
    ADD_OP  shift, and go to state 132

    $default  reduce using rule 201 (term_tail)

    term_tail  go to state 133


state 104

  202 term: factor . factor_tail

    MULT_OP  shift, and go to state 134
    DIV_OP   shift, and go to state 135
    MOD_OP   shift, and go to state 136

    $default  reduce using rule 209 (factor_tail)

    factor_tail  go to state 137


state 105

  210 factor: expo . expo_tail

    EXPO_OP  shift, and go to state 138

    $default  reduce using rule 213 (expo_tail)

    expo_tail  go to state 139


state 106

  214 expo: negation_unsub . negation_unsub_tail

    NEG_OP  shift, and go to state 140

    $default  reduce using rule 217 (negation_unsub_tail)

    negation_unsub_tail  go to state 141


state 107

  101 parameter_list: variable_declaration . parameter_list_tail

    COMMA  shift, and go to state 142

    $default  reduce using rule 105 (parameter_list_tail)

    parameter_list_tail  go to state 143


state 108

   95 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS @37 parameter_list . CLOSE_PARENTHESIS COLON @38 statement_list END_PROCEDURE SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 144


state 109

  100 function_declaration: FUNCTION @39 type IDENTIFIER @40 . OPEN_PARENTHESIS @41 parameter_list CLOSE_PARENTHESIS COLON @42 statement_list END_FUNCTION SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 145


state 110

   51 compost_variable_declaration: ENUM @17 IDENTIFIER @18 COLON @19 IDENTIFIER . @20 identifier_list END_ENUM

    $default  reduce using rule 50 (@20)

    @20  go to state 146


state 111

   55 compost_variable_declaration: STRUCT @21 IDENTIFIER @22 COLON @23 variable_declarations . END_STRUCT

    END_STRUCT  shift, and go to state 147


state 112

   72 set_assignment_aux: ASSIGN_OP @29 . OPEN_BRACES @30 set_assignment_aux_aux CLOSE_BRACES

    OPEN_BRACES  shift, and go to state 148


state 113

   84 range: INT_NUMBER @34 . range_tail

    RANGE  shift, and go to state 149

    $default  reduce using rule 87 (range_tail)

    range_tail  go to state 150


state 114

   43 compost_variable_declaration: MATRIX_OF @11 type OPEN_BRACKETS @12 dimensions CLOSE_BRACKETS . @13 IDENTIFIER @14 matrix_assignment

    $default  reduce using rule 41 (@13)

    @13  go to state 151


state 115

   89 dimensions_tail: COMMA . @36 range dimensions_tail

    $default  reduce using rule 88 (@36)

    @36  go to state 152


state 116

   81 dimensions: range dimensions_tail .

    $default  reduce using rule 81 (dimensions)


state 117

   26 simple_variable_declaration: CONST @5 type IDENTIFIER @6 ASSIGN_OP @7 . expression

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    expression            go to state 153
    term_or               go to state 99
    term_and              go to state 100
    term_bool_comparison  go to state 101
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 118

  165 subprogram_call: IDENTIFIER @70 . OPEN_PARENTHESIS @71 argument_list CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 154


state 119

  174 term_or_tail: OR_OP . @73 term_or term_or_tail

    $default  reduce using rule 173 (@73)

    @73  go to state 155


state 120

  172 expression: term_or term_or_tail .

    $default  reduce using rule 172 (expression)


state 121

  178 term_and_tail: AND_OP . @74 term_and term_and_tail

    $default  reduce using rule 177 (@74)

    @74  go to state 156


state 122

  176 term_or: term_and term_and_tail .

    $default  reduce using rule 176 (term_or)


state 123

  182 term_bool_comparison_tail: EQ_OP . @75 term_bool_comparison term_bool_comparison_tail

    $default  reduce using rule 181 (@75)

    @75  go to state 157


state 124

  184 term_bool_comparison_tail: NEQ_OP . @76 term_bool_comparison term_bool_comparison_tail

    $default  reduce using rule 183 (@76)

    @76  go to state 158


state 125

  180 term_and: term_bool_comparison term_bool_comparison_tail .

    $default  reduce using rule 180 (term_and)


state 126

  188 term_arit_comparison_tail: LEQ_OP . @77 term_arit_comparison term_arit_comparison_tail

    $default  reduce using rule 187 (@77)

    @77  go to state 159


state 127

  190 term_arit_comparison_tail: BEQ_OP . @78 term_arit_comparison term_arit_comparison_tail

    $default  reduce using rule 189 (@78)

    @78  go to state 160


state 128

  192 term_arit_comparison_tail: LT_OP . @79 term_arit_comparison term_arit_comparison_tail

    $default  reduce using rule 191 (@79)

    @79  go to state 161


state 129

  194 term_arit_comparison_tail: BT_OP . @80 term_arit_comparison term_arit_comparison_tail

    $default  reduce using rule 193 (@80)

    @80  go to state 162


state 130

  186 term_bool_comparison: term_arit_comparison term_arit_comparison_tail .

    $default  reduce using rule 186 (term_bool_comparison)


state 131

  200 term_tail: SUB_OP . @82 term term_tail

    $default  reduce using rule 199 (@82)

    @82  go to state 163


state 132

  198 term_tail: ADD_OP . @81 term term_tail

    $default  reduce using rule 197 (@81)

    @81  go to state 164


state 133

  196 term_arit_comparison: term term_tail .

    $default  reduce using rule 196 (term_arit_comparison)


state 134

  204 factor_tail: MULT_OP . @83 factor factor_tail

    $default  reduce using rule 203 (@83)

    @83  go to state 165


state 135

  206 factor_tail: DIV_OP . @84 factor factor_tail

    $default  reduce using rule 205 (@84)

    @84  go to state 166


state 136

  208 factor_tail: MOD_OP . @85 factor factor_tail

    $default  reduce using rule 207 (@85)

    @85  go to state 167


state 137

  202 term: factor factor_tail .

    $default  reduce using rule 202 (term)


state 138

  212 expo_tail: EXPO_OP . @86 expo expo_tail

    $default  reduce using rule 211 (@86)

    @86  go to state 168


state 139

  210 factor: expo expo_tail .

    $default  reduce using rule 210 (factor)


state 140

  216 negation_unsub_tail: NEG_OP . @87 negation_unsub

    $default  reduce using rule 215 (@87)

    @87  go to state 169


state 141

  214 expo: negation_unsub negation_unsub_tail .

    $default  reduce using rule 214 (expo)


state 142

  104 parameter_list_tail: COMMA . @43 variable_declaration parameter_list_tail

    $default  reduce using rule 103 (@43)

    @43  go to state 170


state 143

  101 parameter_list: variable_declaration parameter_list_tail .

    $default  reduce using rule 101 (parameter_list)


state 144

   95 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS @37 parameter_list CLOSE_PARENTHESIS . COLON @38 statement_list END_PROCEDURE SEMICOLON

    COLON  shift, and go to state 171


state 145

  100 function_declaration: FUNCTION @39 type IDENTIFIER @40 OPEN_PARENTHESIS . @41 parameter_list CLOSE_PARENTHESIS COLON @42 statement_list END_FUNCTION SEMICOLON

    $default  reduce using rule 98 (@41)

    @41  go to state 172


state 146

   51 compost_variable_declaration: ENUM @17 IDENTIFIER @18 COLON @19 IDENTIFIER @20 . identifier_list END_ENUM

    COMMA  shift, and go to state 173

    $default  reduce using rule 80 (identifier_list)

    identifier_list  go to state 174


state 147

   55 compost_variable_declaration: STRUCT @21 IDENTIFIER @22 COLON @23 variable_declarations END_STRUCT .

    $default  reduce using rule 55 (compost_variable_declaration)


state 148

   72 set_assignment_aux: ASSIGN_OP @29 OPEN_BRACES . @30 set_assignment_aux_aux CLOSE_BRACES

    $default  reduce using rule 71 (@30)

    @30  go to state 175


state 149

   86 range_tail: RANGE . @35 INT_NUMBER

    $default  reduce using rule 85 (@35)

    @35  go to state 176


state 150

   84 range: INT_NUMBER @34 range_tail .

    $default  reduce using rule 84 (range)


state 151

   43 compost_variable_declaration: MATRIX_OF @11 type OPEN_BRACKETS @12 dimensions CLOSE_BRACKETS @13 . IDENTIFIER @14 matrix_assignment

    IDENTIFIER  shift, and go to state 177


state 152

   89 dimensions_tail: COMMA @36 . range dimensions_tail

    INT_NUMBER  shift, and go to state 87

    range  go to state 178


state 153

   26 simple_variable_declaration: CONST @5 type IDENTIFIER @6 ASSIGN_OP @7 expression .

    $default  reduce using rule 26 (simple_variable_declaration)


state 154

  165 subprogram_call: IDENTIFIER @70 OPEN_PARENTHESIS . @71 argument_list CLOSE_PARENTHESIS

    $default  reduce using rule 164 (@71)

    @71  go to state 179


state 155

  174 term_or_tail: OR_OP @73 . term_or term_or_tail

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    term_or               go to state 180
    term_and              go to state 100
    term_bool_comparison  go to state 101
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 156

  178 term_and_tail: AND_OP @74 . term_and term_and_tail

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    term_and              go to state 181
    term_bool_comparison  go to state 101
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 157

  182 term_bool_comparison_tail: EQ_OP @75 . term_bool_comparison term_bool_comparison_tail

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    term_bool_comparison  go to state 182
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 158

  184 term_bool_comparison_tail: NEQ_OP @76 . term_bool_comparison term_bool_comparison_tail

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    term_bool_comparison  go to state 183
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 159

  188 term_arit_comparison_tail: LEQ_OP @77 . term_arit_comparison term_arit_comparison_tail

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    term_arit_comparison  go to state 184
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 160

  190 term_arit_comparison_tail: BEQ_OP @78 . term_arit_comparison term_arit_comparison_tail

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    term_arit_comparison  go to state 185
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 161

  192 term_arit_comparison_tail: LT_OP @79 . term_arit_comparison term_arit_comparison_tail

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    term_arit_comparison  go to state 186
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 162

  194 term_arit_comparison_tail: BT_OP @80 . term_arit_comparison term_arit_comparison_tail

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    term_arit_comparison  go to state 187
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 163

  200 term_tail: SUB_OP @82 . term term_tail

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call  go to state 97
    term             go to state 188
    factor           go to state 104
    expo             go to state 105
    negation_unsub   go to state 106


state 164

  198 term_tail: ADD_OP @81 . term term_tail

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call  go to state 97
    term             go to state 189
    factor           go to state 104
    expo             go to state 105
    negation_unsub   go to state 106


state 165

  204 factor_tail: MULT_OP @83 . factor factor_tail

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call  go to state 97
    factor           go to state 190
    expo             go to state 105
    negation_unsub   go to state 106


state 166

  206 factor_tail: DIV_OP @84 . factor factor_tail

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call  go to state 97
    factor           go to state 191
    expo             go to state 105
    negation_unsub   go to state 106


state 167

  208 factor_tail: MOD_OP @85 . factor factor_tail

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call  go to state 97
    factor           go to state 192
    expo             go to state 105
    negation_unsub   go to state 106


state 168

  212 expo_tail: EXPO_OP @86 . expo expo_tail

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call  go to state 97
    expo             go to state 193
    negation_unsub   go to state 106


state 169

  216 negation_unsub_tail: NEG_OP @87 . negation_unsub

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call  go to state 97
    negation_unsub   go to state 194


state 170

  104 parameter_list_tail: COMMA @43 . variable_declaration parameter_list_tail

    STRING     shift, and go to state 16
    INT        shift, and go to state 17
    REAL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOLEAN    shift, and go to state 21
    ENUM       shift, and go to state 22
    STRUCT     shift, and go to state 23
    SET_OF     shift, and go to state 24
    MATRIX_OF  shift, and go to state 25
    CONST      shift, and go to state 26
    REF        shift, and go to state 27

    variable_declaration          go to state 195
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32


state 171

   95 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS @37 parameter_list CLOSE_PARENTHESIS COLON . @38 statement_list END_PROCEDURE SEMICOLON

    $default  reduce using rule 94 (@38)

    @38  go to state 196


state 172

  100 function_declaration: FUNCTION @39 type IDENTIFIER @40 OPEN_PARENTHESIS @41 . parameter_list CLOSE_PARENTHESIS COLON @42 statement_list END_FUNCTION SEMICOLON

    STRING     shift, and go to state 16
    INT        shift, and go to state 17
    REAL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOLEAN    shift, and go to state 21
    ENUM       shift, and go to state 22
    STRUCT     shift, and go to state 23
    SET_OF     shift, and go to state 24
    MATRIX_OF  shift, and go to state 25
    CONST      shift, and go to state 26
    REF        shift, and go to state 27

    $default  reduce using rule 102 (parameter_list)

    variable_declaration          go to state 107
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    parameter_list                go to state 197


state 173

   79 identifier_list: COMMA . @32 IDENTIFIER @33 identifier_list

    $default  reduce using rule 77 (@32)

    @32  go to state 198


state 174

   51 compost_variable_declaration: ENUM @17 IDENTIFIER @18 COLON @19 IDENTIFIER @20 identifier_list . END_ENUM

    END_ENUM  shift, and go to state 199


state 175

   72 set_assignment_aux: ASSIGN_OP @29 OPEN_BRACES @30 . set_assignment_aux_aux CLOSE_BRACES

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    set_assignment_aux_aux  go to state 200
    subprogram_call         go to state 97
    expression              go to state 201
    term_or                 go to state 99
    term_and                go to state 100
    term_bool_comparison    go to state 101
    term_arit_comparison    go to state 102
    term                    go to state 103
    factor                  go to state 104
    expo                    go to state 105
    negation_unsub          go to state 106


state 176

   86 range_tail: RANGE @35 . INT_NUMBER

    INT_NUMBER  shift, and go to state 202


state 177

   43 compost_variable_declaration: MATRIX_OF @11 type OPEN_BRACKETS @12 dimensions CLOSE_BRACKETS @13 IDENTIFIER . @14 matrix_assignment

    $default  reduce using rule 42 (@14)

    @14  go to state 203


state 178

   89 dimensions_tail: COMMA @36 range . dimensions_tail

    COMMA  shift, and go to state 115

    $default  reduce using rule 90 (dimensions_tail)

    dimensions_tail  go to state 204


state 179

  165 subprogram_call: IDENTIFIER @70 OPEN_PARENTHESIS @71 . argument_list CLOSE_PARENTHESIS

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    $default  reduce using rule 167 (argument_list)

    subprogram_call       go to state 97
    argument_list         go to state 205
    argument_list_aux     go to state 206
    expression            go to state 207
    term_or               go to state 99
    term_and              go to state 100
    term_bool_comparison  go to state 101
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 180

  174 term_or_tail: OR_OP @73 term_or . term_or_tail

    OR_OP  shift, and go to state 119

    $default  reduce using rule 175 (term_or_tail)

    term_or_tail  go to state 208


state 181

  178 term_and_tail: AND_OP @74 term_and . term_and_tail

    AND_OP  shift, and go to state 121

    $default  reduce using rule 179 (term_and_tail)

    term_and_tail  go to state 209


state 182

  182 term_bool_comparison_tail: EQ_OP @75 term_bool_comparison . term_bool_comparison_tail

    EQ_OP   shift, and go to state 123
    NEQ_OP  shift, and go to state 124

    $default  reduce using rule 185 (term_bool_comparison_tail)

    term_bool_comparison_tail  go to state 210


state 183

  184 term_bool_comparison_tail: NEQ_OP @76 term_bool_comparison . term_bool_comparison_tail

    EQ_OP   shift, and go to state 123
    NEQ_OP  shift, and go to state 124

    $default  reduce using rule 185 (term_bool_comparison_tail)

    term_bool_comparison_tail  go to state 211


state 184

  188 term_arit_comparison_tail: LEQ_OP @77 term_arit_comparison . term_arit_comparison_tail

    LEQ_OP  shift, and go to state 126
    BEQ_OP  shift, and go to state 127
    LT_OP   shift, and go to state 128
    BT_OP   shift, and go to state 129

    $default  reduce using rule 195 (term_arit_comparison_tail)

    term_arit_comparison_tail  go to state 212


state 185

  190 term_arit_comparison_tail: BEQ_OP @78 term_arit_comparison . term_arit_comparison_tail

    LEQ_OP  shift, and go to state 126
    BEQ_OP  shift, and go to state 127
    LT_OP   shift, and go to state 128
    BT_OP   shift, and go to state 129

    $default  reduce using rule 195 (term_arit_comparison_tail)

    term_arit_comparison_tail  go to state 213


state 186

  192 term_arit_comparison_tail: LT_OP @79 term_arit_comparison . term_arit_comparison_tail

    LEQ_OP  shift, and go to state 126
    BEQ_OP  shift, and go to state 127
    LT_OP   shift, and go to state 128
    BT_OP   shift, and go to state 129

    $default  reduce using rule 195 (term_arit_comparison_tail)

    term_arit_comparison_tail  go to state 214


state 187

  194 term_arit_comparison_tail: BT_OP @80 term_arit_comparison . term_arit_comparison_tail

    LEQ_OP  shift, and go to state 126
    BEQ_OP  shift, and go to state 127
    LT_OP   shift, and go to state 128
    BT_OP   shift, and go to state 129

    $default  reduce using rule 195 (term_arit_comparison_tail)

    term_arit_comparison_tail  go to state 215


state 188

  200 term_tail: SUB_OP @82 term . term_tail

    SUB_OP  shift, and go to state 131
    ADD_OP  shift, and go to state 132

    $default  reduce using rule 201 (term_tail)

    term_tail  go to state 216


state 189

  198 term_tail: ADD_OP @81 term . term_tail

    SUB_OP  shift, and go to state 131
    ADD_OP  shift, and go to state 132

    $default  reduce using rule 201 (term_tail)

    term_tail  go to state 217


state 190

  204 factor_tail: MULT_OP @83 factor . factor_tail

    MULT_OP  shift, and go to state 134
    DIV_OP   shift, and go to state 135
    MOD_OP   shift, and go to state 136

    $default  reduce using rule 209 (factor_tail)

    factor_tail  go to state 218


state 191

  206 factor_tail: DIV_OP @84 factor . factor_tail

    MULT_OP  shift, and go to state 134
    DIV_OP   shift, and go to state 135
    MOD_OP   shift, and go to state 136

    $default  reduce using rule 209 (factor_tail)

    factor_tail  go to state 219


state 192

  208 factor_tail: MOD_OP @85 factor . factor_tail

    MULT_OP  shift, and go to state 134
    DIV_OP   shift, and go to state 135
    MOD_OP   shift, and go to state 136

    $default  reduce using rule 209 (factor_tail)

    factor_tail  go to state 220


state 193

  212 expo_tail: EXPO_OP @86 expo . expo_tail

    EXPO_OP  shift, and go to state 138

    $default  reduce using rule 213 (expo_tail)

    expo_tail  go to state 221


state 194

  216 negation_unsub_tail: NEG_OP @87 negation_unsub .

    $default  reduce using rule 216 (negation_unsub_tail)


state 195

  104 parameter_list_tail: COMMA @43 variable_declaration . parameter_list_tail

    COMMA  shift, and go to state 142

    $default  reduce using rule 105 (parameter_list_tail)

    parameter_list_tail  go to state 222


state 196

   95 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS @37 parameter_list CLOSE_PARENTHESIS COLON @38 . statement_list END_PROCEDURE SEMICOLON

    IDENTIFIER  shift, and go to state 223
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 224
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 225
    FOR         shift, and go to state 226
    WHILE       shift, and go to state 227
    SWITCH      shift, and go to state 228

    $default  reduce using rule 107 (statement_list)

    variable_declaration          go to state 229
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 230
    statement                     go to state 231
    return_statement              go to state 232
    assignment_statement          go to state 233
    destination                   go to state 234
    if_statement                  go to state 235
    switch_statement              go to state 236
    while_statement               go to state 237
    for_statement                 go to state 238
    subprogram_call               go to state 239


state 197

  100 function_declaration: FUNCTION @39 type IDENTIFIER @40 OPEN_PARENTHESIS @41 parameter_list . CLOSE_PARENTHESIS COLON @42 statement_list END_FUNCTION SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 240


state 198

   79 identifier_list: COMMA @32 . IDENTIFIER @33 identifier_list

    IDENTIFIER  shift, and go to state 241


state 199

   51 compost_variable_declaration: ENUM @17 IDENTIFIER @18 COLON @19 IDENTIFIER @20 identifier_list END_ENUM .

    $default  reduce using rule 51 (compost_variable_declaration)


state 200

   72 set_assignment_aux: ASSIGN_OP @29 OPEN_BRACES @30 set_assignment_aux_aux . CLOSE_BRACES

    CLOSE_BRACES  shift, and go to state 242


state 201

   73 set_assignment_aux_aux: expression . values_list

    COMMA  shift, and go to state 243

    $default  reduce using rule 76 (values_list)

    values_list  go to state 244


state 202

   86 range_tail: RANGE @35 INT_NUMBER .

    $default  reduce using rule 86 (range_tail)


state 203

   43 compost_variable_declaration: MATRIX_OF @11 type OPEN_BRACKETS @12 dimensions CLOSE_BRACKETS @13 IDENTIFIER @14 . matrix_assignment

    ASSIGN_OP  shift, and go to state 245

    $default  reduce using rule 57 (matrix_assignment)

    matrix_assignment      go to state 246
    matrix_assignment_aux  go to state 247


state 204

   89 dimensions_tail: COMMA @36 range dimensions_tail .

    $default  reduce using rule 89 (dimensions_tail)


state 205

  165 subprogram_call: IDENTIFIER @70 OPEN_PARENTHESIS @71 argument_list . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 248


state 206

  166 argument_list: argument_list_aux .

    $default  reduce using rule 166 (argument_list)


state 207

  168 argument_list_aux: expression . argument_list_tail

    COMMA  shift, and go to state 249

    $default  reduce using rule 171 (argument_list_tail)

    argument_list_tail  go to state 250


state 208

  174 term_or_tail: OR_OP @73 term_or term_or_tail .

    $default  reduce using rule 174 (term_or_tail)


state 209

  178 term_and_tail: AND_OP @74 term_and term_and_tail .

    $default  reduce using rule 178 (term_and_tail)


state 210

  182 term_bool_comparison_tail: EQ_OP @75 term_bool_comparison term_bool_comparison_tail .

    $default  reduce using rule 182 (term_bool_comparison_tail)


state 211

  184 term_bool_comparison_tail: NEQ_OP @76 term_bool_comparison term_bool_comparison_tail .

    $default  reduce using rule 184 (term_bool_comparison_tail)


state 212

  188 term_arit_comparison_tail: LEQ_OP @77 term_arit_comparison term_arit_comparison_tail .

    $default  reduce using rule 188 (term_arit_comparison_tail)


state 213

  190 term_arit_comparison_tail: BEQ_OP @78 term_arit_comparison term_arit_comparison_tail .

    $default  reduce using rule 190 (term_arit_comparison_tail)


state 214

  192 term_arit_comparison_tail: LT_OP @79 term_arit_comparison term_arit_comparison_tail .

    $default  reduce using rule 192 (term_arit_comparison_tail)


state 215

  194 term_arit_comparison_tail: BT_OP @80 term_arit_comparison term_arit_comparison_tail .

    $default  reduce using rule 194 (term_arit_comparison_tail)


state 216

  200 term_tail: SUB_OP @82 term term_tail .

    $default  reduce using rule 200 (term_tail)


state 217

  198 term_tail: ADD_OP @81 term term_tail .

    $default  reduce using rule 198 (term_tail)


state 218

  204 factor_tail: MULT_OP @83 factor factor_tail .

    $default  reduce using rule 204 (factor_tail)


state 219

  206 factor_tail: DIV_OP @84 factor factor_tail .

    $default  reduce using rule 206 (factor_tail)


state 220

  208 factor_tail: MOD_OP @85 factor factor_tail .

    $default  reduce using rule 208 (factor_tail)


state 221

  212 expo_tail: EXPO_OP @86 expo expo_tail .

    $default  reduce using rule 212 (expo_tail)


state 222

  104 parameter_list_tail: COMMA @43 variable_declaration parameter_list_tail .

    $default  reduce using rule 104 (parameter_list_tail)


state 223

  132 destination: IDENTIFIER . @51 identifier_tail
  165 subprogram_call: IDENTIFIER . @70 OPEN_PARENTHESIS @71 argument_list CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  reduce using rule 163 (@70)
    $default          reduce using rule 131 (@51)

    @51  go to state 251
    @70  go to state 118


state 224

  117 return_statement: RETURN . @44 expression SEMICOLON

    $default  reduce using rule 116 (@44)

    @44  go to state 252


state 225

  138 if_statement: IF . OPEN_PARENTHESIS @53 expression CLOSE_PARENTHESIS COLON @54 statement_list else_clausule END_IF SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 253


state 226

  162 for_statement: FOR . @65 IDENTIFIER @66 IN @67 IDENTIFIER @68 COLON @69 statement_list END_FOR SEMICOLON

    $default  reduce using rule 157 (@65)

    @65  go to state 254


state 227

  156 while_statement: WHILE . OPEN_PARENTHESIS @63 expression CLOSE_PARENTHESIS COLON @64 statement_list END_WHILE SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 255


state 228

  145 switch_statement: SWITCH . OPEN_PARENTHESIS @56 IDENTIFIER @57 CLOSE_PARENTHESIS COLON @58 case_clasule other_clasule END_SWITCH SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 256


state 229

  115 statement: variable_declaration . SEMICOLON

    SEMICOLON  shift, and go to state 257


state 230

   95 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS @37 parameter_list CLOSE_PARENTHESIS COLON @38 statement_list . END_PROCEDURE SEMICOLON

    END_PROCEDURE  shift, and go to state 258


state 231

  106 statement_list: statement . statement_list

    IDENTIFIER  shift, and go to state 223
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 224
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 225
    FOR         shift, and go to state 226
    WHILE       shift, and go to state 227
    SWITCH      shift, and go to state 228

    $default  reduce using rule 107 (statement_list)

    variable_declaration          go to state 229
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 259
    statement                     go to state 231
    return_statement              go to state 232
    assignment_statement          go to state 233
    destination                   go to state 234
    if_statement                  go to state 235
    switch_statement              go to state 236
    while_statement               go to state 237
    for_statement                 go to state 238
    subprogram_call               go to state 239


state 232

  114 statement: return_statement .

    $default  reduce using rule 114 (statement)


state 233

  108 statement: assignment_statement .

    $default  reduce using rule 108 (statement)


state 234

  118 assignment_statement: destination . assignment_statement_tail SEMICOLON

    ASSIGN_OP       shift, and go to state 260
    ADD_ASSIGN_OP   shift, and go to state 261
    SUB_ASSIGN_OP   shift, and go to state 262
    MULT_ASSIGN_OP  shift, and go to state 263
    DIV_ASSIGN_OP   shift, and go to state 264
    MOD_ASSIGN_OP   shift, and go to state 265

    assignment_statement_tail  go to state 266


state 235

  109 statement: if_statement .

    $default  reduce using rule 109 (statement)


state 236

  110 statement: switch_statement .

    $default  reduce using rule 110 (statement)


state 237

  111 statement: while_statement .

    $default  reduce using rule 111 (statement)


state 238

  112 statement: for_statement .

    $default  reduce using rule 112 (statement)


state 239

  113 statement: subprogram_call .

    $default  reduce using rule 113 (statement)


state 240

  100 function_declaration: FUNCTION @39 type IDENTIFIER @40 OPEN_PARENTHESIS @41 parameter_list CLOSE_PARENTHESIS . COLON @42 statement_list END_FUNCTION SEMICOLON

    COLON  shift, and go to state 267


state 241

   79 identifier_list: COMMA @32 IDENTIFIER . @33 identifier_list

    $default  reduce using rule 78 (@33)

    @33  go to state 268


state 242

   72 set_assignment_aux: ASSIGN_OP @29 OPEN_BRACES @30 set_assignment_aux_aux CLOSE_BRACES .

    $default  reduce using rule 72 (set_assignment_aux)


state 243

   75 values_list: COMMA . @31 set_assignment_aux_aux

    $default  reduce using rule 74 (@31)

    @31  go to state 269


state 244

   73 set_assignment_aux_aux: expression values_list .

    $default  reduce using rule 73 (set_assignment_aux_aux)


state 245

   59 matrix_assignment_aux: ASSIGN_OP . @24 OPEN_BRACES matrix_assignment_aux_aux

    $default  reduce using rule 58 (@24)

    @24  go to state 270


state 246

   43 compost_variable_declaration: MATRIX_OF @11 type OPEN_BRACKETS @12 dimensions CLOSE_BRACKETS @13 IDENTIFIER @14 matrix_assignment .

    $default  reduce using rule 43 (compost_variable_declaration)


state 247

   56 matrix_assignment: matrix_assignment_aux .

    $default  reduce using rule 56 (matrix_assignment)


state 248

  165 subprogram_call: IDENTIFIER @70 OPEN_PARENTHESIS @71 argument_list CLOSE_PARENTHESIS .

    $default  reduce using rule 165 (subprogram_call)


state 249

  170 argument_list_tail: COMMA . @72 argument_list_aux

    $default  reduce using rule 169 (@72)

    @72  go to state 271


state 250

  168 argument_list_aux: expression argument_list_tail .

    $default  reduce using rule 168 (argument_list_aux)


state 251

  132 destination: IDENTIFIER @51 . identifier_tail

    OPEN_BRACKETS  shift, and go to state 272

    $default  reduce using rule 135 (identifier_tail)

    identifier_tail  go to state 273


state 252

  117 return_statement: RETURN @44 . expression SEMICOLON

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    expression            go to state 274
    term_or               go to state 99
    term_and              go to state 100
    term_bool_comparison  go to state 101
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 253

  138 if_statement: IF OPEN_PARENTHESIS . @53 expression CLOSE_PARENTHESIS COLON @54 statement_list else_clausule END_IF SEMICOLON

    $default  reduce using rule 136 (@53)

    @53  go to state 275


state 254

  162 for_statement: FOR @65 . IDENTIFIER @66 IN @67 IDENTIFIER @68 COLON @69 statement_list END_FOR SEMICOLON

    IDENTIFIER  shift, and go to state 276


state 255

  156 while_statement: WHILE OPEN_PARENTHESIS . @63 expression CLOSE_PARENTHESIS COLON @64 statement_list END_WHILE SEMICOLON

    $default  reduce using rule 154 (@63)

    @63  go to state 277


state 256

  145 switch_statement: SWITCH OPEN_PARENTHESIS . @56 IDENTIFIER @57 CLOSE_PARENTHESIS COLON @58 case_clasule other_clasule END_SWITCH SEMICOLON

    $default  reduce using rule 142 (@56)

    @56  go to state 278


state 257

  115 statement: variable_declaration SEMICOLON .

    $default  reduce using rule 115 (statement)


state 258

   95 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS @37 parameter_list CLOSE_PARENTHESIS COLON @38 statement_list END_PROCEDURE . SEMICOLON

    SEMICOLON  shift, and go to state 279


state 259

  106 statement_list: statement statement_list .

    $default  reduce using rule 106 (statement_list)


state 260

  120 assignment_statement_tail: ASSIGN_OP . @45 expression

    $default  reduce using rule 119 (@45)

    @45  go to state 280


state 261

  122 assignment_statement_tail: ADD_ASSIGN_OP . @46 expression

    $default  reduce using rule 121 (@46)

    @46  go to state 281


state 262

  124 assignment_statement_tail: SUB_ASSIGN_OP . @47 expression

    $default  reduce using rule 123 (@47)

    @47  go to state 282


state 263

  126 assignment_statement_tail: MULT_ASSIGN_OP . @48 expression

    $default  reduce using rule 125 (@48)

    @48  go to state 283


state 264

  128 assignment_statement_tail: DIV_ASSIGN_OP . @49 expression

    $default  reduce using rule 127 (@49)

    @49  go to state 284


state 265

  130 assignment_statement_tail: MOD_ASSIGN_OP . @50 expression

    $default  reduce using rule 129 (@50)

    @50  go to state 285


state 266

  118 assignment_statement: destination assignment_statement_tail . SEMICOLON

    SEMICOLON  shift, and go to state 286


state 267

  100 function_declaration: FUNCTION @39 type IDENTIFIER @40 OPEN_PARENTHESIS @41 parameter_list CLOSE_PARENTHESIS COLON . @42 statement_list END_FUNCTION SEMICOLON

    $default  reduce using rule 99 (@42)

    @42  go to state 287


state 268

   79 identifier_list: COMMA @32 IDENTIFIER @33 . identifier_list

    COMMA  shift, and go to state 173

    $default  reduce using rule 80 (identifier_list)

    identifier_list  go to state 288


state 269

   75 values_list: COMMA @31 . set_assignment_aux_aux

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    set_assignment_aux_aux  go to state 289
    subprogram_call         go to state 97
    expression              go to state 201
    term_or                 go to state 99
    term_and                go to state 100
    term_bool_comparison    go to state 101
    term_arit_comparison    go to state 102
    term                    go to state 103
    factor                  go to state 104
    expo                    go to state 105
    negation_unsub          go to state 106


state 270

   59 matrix_assignment_aux: ASSIGN_OP @24 . OPEN_BRACES matrix_assignment_aux_aux

    OPEN_BRACES  shift, and go to state 290


state 271

  170 argument_list_tail: COMMA @72 . argument_list_aux

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    argument_list_aux     go to state 291
    expression            go to state 207
    term_or               go to state 99
    term_and              go to state 100
    term_bool_comparison  go to state 101
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 272

  134 identifier_tail: OPEN_BRACKETS . @52 dimensions CLOSE_BRACKETS

    $default  reduce using rule 133 (@52)

    @52  go to state 292


state 273

  132 destination: IDENTIFIER @51 identifier_tail .

    $default  reduce using rule 132 (destination)


state 274

  117 return_statement: RETURN @44 expression . SEMICOLON

    SEMICOLON  shift, and go to state 293


state 275

  138 if_statement: IF OPEN_PARENTHESIS @53 . expression CLOSE_PARENTHESIS COLON @54 statement_list else_clausule END_IF SEMICOLON

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    expression            go to state 294
    term_or               go to state 99
    term_and              go to state 100
    term_bool_comparison  go to state 101
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 276

  162 for_statement: FOR @65 IDENTIFIER . @66 IN @67 IDENTIFIER @68 COLON @69 statement_list END_FOR SEMICOLON

    $default  reduce using rule 158 (@66)

    @66  go to state 295


state 277

  156 while_statement: WHILE OPEN_PARENTHESIS @63 . expression CLOSE_PARENTHESIS COLON @64 statement_list END_WHILE SEMICOLON

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    expression            go to state 296
    term_or               go to state 99
    term_and              go to state 100
    term_bool_comparison  go to state 101
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 278

  145 switch_statement: SWITCH OPEN_PARENTHESIS @56 . IDENTIFIER @57 CLOSE_PARENTHESIS COLON @58 case_clasule other_clasule END_SWITCH SEMICOLON

    IDENTIFIER  shift, and go to state 297


state 279

   95 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS @37 parameter_list CLOSE_PARENTHESIS COLON @38 statement_list END_PROCEDURE SEMICOLON .

    $default  reduce using rule 95 (procedure_declaration)


state 280

  120 assignment_statement_tail: ASSIGN_OP @45 . expression

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    expression            go to state 298
    term_or               go to state 99
    term_and              go to state 100
    term_bool_comparison  go to state 101
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 281

  122 assignment_statement_tail: ADD_ASSIGN_OP @46 . expression

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    expression            go to state 299
    term_or               go to state 99
    term_and              go to state 100
    term_bool_comparison  go to state 101
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 282

  124 assignment_statement_tail: SUB_ASSIGN_OP @47 . expression

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    expression            go to state 300
    term_or               go to state 99
    term_and              go to state 100
    term_bool_comparison  go to state 101
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 283

  126 assignment_statement_tail: MULT_ASSIGN_OP @48 . expression

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    expression            go to state 301
    term_or               go to state 99
    term_and              go to state 100
    term_bool_comparison  go to state 101
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 284

  128 assignment_statement_tail: DIV_ASSIGN_OP @49 . expression

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    expression            go to state 302
    term_or               go to state 99
    term_and              go to state 100
    term_bool_comparison  go to state 101
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 285

  130 assignment_statement_tail: MOD_ASSIGN_OP @50 . expression

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    expression            go to state 303
    term_or               go to state 99
    term_and              go to state 100
    term_bool_comparison  go to state 101
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 286

  118 assignment_statement: destination assignment_statement_tail SEMICOLON .

    $default  reduce using rule 118 (assignment_statement)


state 287

  100 function_declaration: FUNCTION @39 type IDENTIFIER @40 OPEN_PARENTHESIS @41 parameter_list CLOSE_PARENTHESIS COLON @42 . statement_list END_FUNCTION SEMICOLON

    IDENTIFIER  shift, and go to state 223
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 224
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 225
    FOR         shift, and go to state 226
    WHILE       shift, and go to state 227
    SWITCH      shift, and go to state 228

    $default  reduce using rule 107 (statement_list)

    variable_declaration          go to state 229
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 304
    statement                     go to state 231
    return_statement              go to state 232
    assignment_statement          go to state 233
    destination                   go to state 234
    if_statement                  go to state 235
    switch_statement              go to state 236
    while_statement               go to state 237
    for_statement                 go to state 238
    subprogram_call               go to state 239


state 288

   79 identifier_list: COMMA @32 IDENTIFIER @33 identifier_list .

    $default  reduce using rule 79 (identifier_list)


state 289

   75 values_list: COMMA @31 set_assignment_aux_aux .

    $default  reduce using rule 75 (values_list)


state 290

   59 matrix_assignment_aux: ASSIGN_OP @24 OPEN_BRACES . matrix_assignment_aux_aux

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96
    OPEN_BRACES     shift, and go to state 305

    matrix_assignment_aux_aux  go to state 306
    set_assignment_aux_aux     go to state 307
    subprogram_call            go to state 97
    expression                 go to state 201
    term_or                    go to state 99
    term_and                   go to state 100
    term_bool_comparison       go to state 101
    term_arit_comparison       go to state 102
    term                       go to state 103
    factor                     go to state 104
    expo                       go to state 105
    negation_unsub             go to state 106


state 291

  170 argument_list_tail: COMMA @72 argument_list_aux .

    $default  reduce using rule 170 (argument_list_tail)


state 292

  134 identifier_tail: OPEN_BRACKETS @52 . dimensions CLOSE_BRACKETS

    INT_NUMBER  shift, and go to state 87

    $default  reduce using rule 82 (dimensions)

    dimensions  go to state 308
    range       go to state 89


state 293

  117 return_statement: RETURN @44 expression SEMICOLON .

    $default  reduce using rule 117 (return_statement)


state 294

  138 if_statement: IF OPEN_PARENTHESIS @53 expression . CLOSE_PARENTHESIS COLON @54 statement_list else_clausule END_IF SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 309


state 295

  162 for_statement: FOR @65 IDENTIFIER @66 . IN @67 IDENTIFIER @68 COLON @69 statement_list END_FOR SEMICOLON

    IN  shift, and go to state 310


state 296

  156 while_statement: WHILE OPEN_PARENTHESIS @63 expression . CLOSE_PARENTHESIS COLON @64 statement_list END_WHILE SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 311


state 297

  145 switch_statement: SWITCH OPEN_PARENTHESIS @56 IDENTIFIER . @57 CLOSE_PARENTHESIS COLON @58 case_clasule other_clasule END_SWITCH SEMICOLON

    $default  reduce using rule 143 (@57)

    @57  go to state 312


state 298

  120 assignment_statement_tail: ASSIGN_OP @45 expression .

    $default  reduce using rule 120 (assignment_statement_tail)


state 299

  122 assignment_statement_tail: ADD_ASSIGN_OP @46 expression .

    $default  reduce using rule 122 (assignment_statement_tail)


state 300

  124 assignment_statement_tail: SUB_ASSIGN_OP @47 expression .

    $default  reduce using rule 124 (assignment_statement_tail)


state 301

  126 assignment_statement_tail: MULT_ASSIGN_OP @48 expression .

    $default  reduce using rule 126 (assignment_statement_tail)


state 302

  128 assignment_statement_tail: DIV_ASSIGN_OP @49 expression .

    $default  reduce using rule 128 (assignment_statement_tail)


state 303

  130 assignment_statement_tail: MOD_ASSIGN_OP @50 expression .

    $default  reduce using rule 130 (assignment_statement_tail)


state 304

  100 function_declaration: FUNCTION @39 type IDENTIFIER @40 OPEN_PARENTHESIS @41 parameter_list CLOSE_PARENTHESIS COLON @42 statement_list . END_FUNCTION SEMICOLON

    END_FUNCTION  shift, and go to state 313


state 305

   63 matrix_assignment_aux_aux: OPEN_BRACES . @25 set_assignment_aux_aux CLOSE_BRACES @26 matrix_assignment_aux_aux_aux

    $default  reduce using rule 61 (@25)

    @25  go to state 314


state 306

   59 matrix_assignment_aux: ASSIGN_OP @24 OPEN_BRACES matrix_assignment_aux_aux .

    $default  reduce using rule 59 (matrix_assignment_aux)


state 307

   60 matrix_assignment_aux_aux: set_assignment_aux_aux . CLOSE_BRACES

    CLOSE_BRACES  shift, and go to state 315


state 308

  134 identifier_tail: OPEN_BRACKETS @52 dimensions . CLOSE_BRACKETS

    CLOSE_BRACKETS  shift, and go to state 316


state 309

  138 if_statement: IF OPEN_PARENTHESIS @53 expression CLOSE_PARENTHESIS . COLON @54 statement_list else_clausule END_IF SEMICOLON

    COLON  shift, and go to state 317


state 310

  162 for_statement: FOR @65 IDENTIFIER @66 IN . @67 IDENTIFIER @68 COLON @69 statement_list END_FOR SEMICOLON

    $default  reduce using rule 159 (@67)

    @67  go to state 318


state 311

  156 while_statement: WHILE OPEN_PARENTHESIS @63 expression CLOSE_PARENTHESIS . COLON @64 statement_list END_WHILE SEMICOLON

    COLON  shift, and go to state 319


state 312

  145 switch_statement: SWITCH OPEN_PARENTHESIS @56 IDENTIFIER @57 . CLOSE_PARENTHESIS COLON @58 case_clasule other_clasule END_SWITCH SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 320


state 313

  100 function_declaration: FUNCTION @39 type IDENTIFIER @40 OPEN_PARENTHESIS @41 parameter_list CLOSE_PARENTHESIS COLON @42 statement_list END_FUNCTION . SEMICOLON

    SEMICOLON  shift, and go to state 321


state 314

   63 matrix_assignment_aux_aux: OPEN_BRACES @25 . set_assignment_aux_aux CLOSE_BRACES @26 matrix_assignment_aux_aux_aux

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    set_assignment_aux_aux  go to state 322
    subprogram_call         go to state 97
    expression              go to state 201
    term_or                 go to state 99
    term_and                go to state 100
    term_bool_comparison    go to state 101
    term_arit_comparison    go to state 102
    term                    go to state 103
    factor                  go to state 104
    expo                    go to state 105
    negation_unsub          go to state 106


state 315

   60 matrix_assignment_aux_aux: set_assignment_aux_aux CLOSE_BRACES .

    $default  reduce using rule 60 (matrix_assignment_aux_aux)


state 316

  134 identifier_tail: OPEN_BRACKETS @52 dimensions CLOSE_BRACKETS .

    $default  reduce using rule 134 (identifier_tail)


state 317

  138 if_statement: IF OPEN_PARENTHESIS @53 expression CLOSE_PARENTHESIS COLON . @54 statement_list else_clausule END_IF SEMICOLON

    $default  reduce using rule 137 (@54)

    @54  go to state 323


state 318

  162 for_statement: FOR @65 IDENTIFIER @66 IN @67 . IDENTIFIER @68 COLON @69 statement_list END_FOR SEMICOLON

    IDENTIFIER  shift, and go to state 324


state 319

  156 while_statement: WHILE OPEN_PARENTHESIS @63 expression CLOSE_PARENTHESIS COLON . @64 statement_list END_WHILE SEMICOLON

    $default  reduce using rule 155 (@64)

    @64  go to state 325


state 320

  145 switch_statement: SWITCH OPEN_PARENTHESIS @56 IDENTIFIER @57 CLOSE_PARENTHESIS . COLON @58 case_clasule other_clasule END_SWITCH SEMICOLON

    COLON  shift, and go to state 326


state 321

  100 function_declaration: FUNCTION @39 type IDENTIFIER @40 OPEN_PARENTHESIS @41 parameter_list CLOSE_PARENTHESIS COLON @42 statement_list END_FUNCTION SEMICOLON .

    $default  reduce using rule 100 (function_declaration)


state 322

   63 matrix_assignment_aux_aux: OPEN_BRACES @25 set_assignment_aux_aux . CLOSE_BRACES @26 matrix_assignment_aux_aux_aux

    CLOSE_BRACES  shift, and go to state 327


state 323

  138 if_statement: IF OPEN_PARENTHESIS @53 expression CLOSE_PARENTHESIS COLON @54 . statement_list else_clausule END_IF SEMICOLON

    IDENTIFIER  shift, and go to state 223
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 224
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 225
    FOR         shift, and go to state 226
    WHILE       shift, and go to state 227
    SWITCH      shift, and go to state 228

    $default  reduce using rule 107 (statement_list)

    variable_declaration          go to state 229
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 328
    statement                     go to state 231
    return_statement              go to state 232
    assignment_statement          go to state 233
    destination                   go to state 234
    if_statement                  go to state 235
    switch_statement              go to state 236
    while_statement               go to state 237
    for_statement                 go to state 238
    subprogram_call               go to state 239


state 324

  162 for_statement: FOR @65 IDENTIFIER @66 IN @67 IDENTIFIER . @68 COLON @69 statement_list END_FOR SEMICOLON

    $default  reduce using rule 160 (@68)

    @68  go to state 329


state 325

  156 while_statement: WHILE OPEN_PARENTHESIS @63 expression CLOSE_PARENTHESIS COLON @64 . statement_list END_WHILE SEMICOLON

    IDENTIFIER  shift, and go to state 223
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 224
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 225
    FOR         shift, and go to state 226
    WHILE       shift, and go to state 227
    SWITCH      shift, and go to state 228

    $default  reduce using rule 107 (statement_list)

    variable_declaration          go to state 229
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 330
    statement                     go to state 231
    return_statement              go to state 232
    assignment_statement          go to state 233
    destination                   go to state 234
    if_statement                  go to state 235
    switch_statement              go to state 236
    while_statement               go to state 237
    for_statement                 go to state 238
    subprogram_call               go to state 239


state 326

  145 switch_statement: SWITCH OPEN_PARENTHESIS @56 IDENTIFIER @57 CLOSE_PARENTHESIS COLON . @58 case_clasule other_clasule END_SWITCH SEMICOLON

    $default  reduce using rule 144 (@58)

    @58  go to state 331


state 327

   63 matrix_assignment_aux_aux: OPEN_BRACES @25 set_assignment_aux_aux CLOSE_BRACES . @26 matrix_assignment_aux_aux_aux

    $default  reduce using rule 62 (@26)

    @26  go to state 332


state 328

  138 if_statement: IF OPEN_PARENTHESIS @53 expression CLOSE_PARENTHESIS COLON @54 statement_list . else_clausule END_IF SEMICOLON

    ELSE  shift, and go to state 333

    $default  reduce using rule 141 (else_clausule)

    else_clausule  go to state 334


state 329

  162 for_statement: FOR @65 IDENTIFIER @66 IN @67 IDENTIFIER @68 . COLON @69 statement_list END_FOR SEMICOLON

    COLON  shift, and go to state 335


state 330

  156 while_statement: WHILE OPEN_PARENTHESIS @63 expression CLOSE_PARENTHESIS COLON @64 statement_list . END_WHILE SEMICOLON

    END_WHILE  shift, and go to state 336


state 331

  145 switch_statement: SWITCH OPEN_PARENTHESIS @56 IDENTIFIER @57 CLOSE_PARENTHESIS COLON @58 . case_clasule other_clasule END_SWITCH SEMICOLON

    CASE  shift, and go to state 337

    $default  reduce using rule 150 (case_clasule)

    case_clasule  go to state 338


state 332

   63 matrix_assignment_aux_aux: OPEN_BRACES @25 set_assignment_aux_aux CLOSE_BRACES @26 . matrix_assignment_aux_aux_aux

    COMMA  shift, and go to state 339

    COMMA     [reduce using rule 67 (matrix_assignment_aux_aux_aux)]
    $default  reduce using rule 67 (matrix_assignment_aux_aux_aux)

    matrix_assignment_aux_aux_aux  go to state 340


state 333

  140 else_clausule: ELSE . COLON @55 statement_list

    COLON  shift, and go to state 341


state 334

  138 if_statement: IF OPEN_PARENTHESIS @53 expression CLOSE_PARENTHESIS COLON @54 statement_list else_clausule . END_IF SEMICOLON

    END_IF  shift, and go to state 342


state 335

  162 for_statement: FOR @65 IDENTIFIER @66 IN @67 IDENTIFIER @68 COLON . @69 statement_list END_FOR SEMICOLON

    $default  reduce using rule 161 (@69)

    @69  go to state 343


state 336

  156 while_statement: WHILE OPEN_PARENTHESIS @63 expression CLOSE_PARENTHESIS COLON @64 statement_list END_WHILE . SEMICOLON

    SEMICOLON  shift, and go to state 344


state 337

  149 case_clasule: CASE . OPEN_PARENTHESIS @59 expression CLOSE_PARENTHESIS COLON @60 statement_list BREAK SEMICOLON @61 case_clasule

    OPEN_PARENTHESIS  shift, and go to state 345


state 338

  145 switch_statement: SWITCH OPEN_PARENTHESIS @56 IDENTIFIER @57 CLOSE_PARENTHESIS COLON @58 case_clasule . other_clasule END_SWITCH SEMICOLON

    OTHER  shift, and go to state 346

    $default  reduce using rule 153 (other_clasule)

    other_clasule  go to state 347


state 339

   66 matrix_assignment_aux_aux_aux: COMMA . OPEN_BRACES @27 set_assignment_aux_aux CLOSE_BRACES @28 matrix_assignment_aux_aux_aux

    OPEN_BRACES  shift, and go to state 348


state 340

   63 matrix_assignment_aux_aux: OPEN_BRACES @25 set_assignment_aux_aux CLOSE_BRACES @26 matrix_assignment_aux_aux_aux .

    $default  reduce using rule 63 (matrix_assignment_aux_aux)


state 341

  140 else_clausule: ELSE COLON . @55 statement_list

    $default  reduce using rule 139 (@55)

    @55  go to state 349


state 342

  138 if_statement: IF OPEN_PARENTHESIS @53 expression CLOSE_PARENTHESIS COLON @54 statement_list else_clausule END_IF . SEMICOLON

    SEMICOLON  shift, and go to state 350


state 343

  162 for_statement: FOR @65 IDENTIFIER @66 IN @67 IDENTIFIER @68 COLON @69 . statement_list END_FOR SEMICOLON

    IDENTIFIER  shift, and go to state 223
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 224
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 225
    FOR         shift, and go to state 226
    WHILE       shift, and go to state 227
    SWITCH      shift, and go to state 228

    $default  reduce using rule 107 (statement_list)

    variable_declaration          go to state 229
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 351
    statement                     go to state 231
    return_statement              go to state 232
    assignment_statement          go to state 233
    destination                   go to state 234
    if_statement                  go to state 235
    switch_statement              go to state 236
    while_statement               go to state 237
    for_statement                 go to state 238
    subprogram_call               go to state 239


state 344

  156 while_statement: WHILE OPEN_PARENTHESIS @63 expression CLOSE_PARENTHESIS COLON @64 statement_list END_WHILE SEMICOLON .

    $default  reduce using rule 156 (while_statement)


state 345

  149 case_clasule: CASE OPEN_PARENTHESIS . @59 expression CLOSE_PARENTHESIS COLON @60 statement_list BREAK SEMICOLON @61 case_clasule

    $default  reduce using rule 146 (@59)

    @59  go to state 352


state 346

  152 other_clasule: OTHER . COLON @62 statement_list

    COLON  shift, and go to state 353


state 347

  145 switch_statement: SWITCH OPEN_PARENTHESIS @56 IDENTIFIER @57 CLOSE_PARENTHESIS COLON @58 case_clasule other_clasule . END_SWITCH SEMICOLON

    END_SWITCH  shift, and go to state 354


state 348

   66 matrix_assignment_aux_aux_aux: COMMA OPEN_BRACES . @27 set_assignment_aux_aux CLOSE_BRACES @28 matrix_assignment_aux_aux_aux

    $default  reduce using rule 64 (@27)

    @27  go to state 355


state 349

  140 else_clausule: ELSE COLON @55 . statement_list

    IDENTIFIER  shift, and go to state 223
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 224
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 225
    FOR         shift, and go to state 226
    WHILE       shift, and go to state 227
    SWITCH      shift, and go to state 228

    $default  reduce using rule 107 (statement_list)

    variable_declaration          go to state 229
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 356
    statement                     go to state 231
    return_statement              go to state 232
    assignment_statement          go to state 233
    destination                   go to state 234
    if_statement                  go to state 235
    switch_statement              go to state 236
    while_statement               go to state 237
    for_statement                 go to state 238
    subprogram_call               go to state 239


state 350

  138 if_statement: IF OPEN_PARENTHESIS @53 expression CLOSE_PARENTHESIS COLON @54 statement_list else_clausule END_IF SEMICOLON .

    $default  reduce using rule 138 (if_statement)


state 351

  162 for_statement: FOR @65 IDENTIFIER @66 IN @67 IDENTIFIER @68 COLON @69 statement_list . END_FOR SEMICOLON

    END_FOR  shift, and go to state 357


state 352

  149 case_clasule: CASE OPEN_PARENTHESIS @59 . expression CLOSE_PARENTHESIS COLON @60 statement_list BREAK SEMICOLON @61 case_clasule

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    subprogram_call       go to state 97
    expression            go to state 358
    term_or               go to state 99
    term_and              go to state 100
    term_bool_comparison  go to state 101
    term_arit_comparison  go to state 102
    term                  go to state 103
    factor                go to state 104
    expo                  go to state 105
    negation_unsub        go to state 106


state 353

  152 other_clasule: OTHER COLON . @62 statement_list

    $default  reduce using rule 151 (@62)

    @62  go to state 359


state 354

  145 switch_statement: SWITCH OPEN_PARENTHESIS @56 IDENTIFIER @57 CLOSE_PARENTHESIS COLON @58 case_clasule other_clasule END_SWITCH . SEMICOLON

    SEMICOLON  shift, and go to state 360


state 355

   66 matrix_assignment_aux_aux_aux: COMMA OPEN_BRACES @27 . set_assignment_aux_aux CLOSE_BRACES @28 matrix_assignment_aux_aux_aux

    IDENTIFIER      shift, and go to state 92
    STRING          shift, and go to state 93
    IMAGINARY_PART  shift, and go to state 94
    INT_NUMBER      shift, and go to state 95
    REAL_NUMBER     shift, and go to state 96

    set_assignment_aux_aux  go to state 361
    subprogram_call         go to state 97
    expression              go to state 201
    term_or                 go to state 99
    term_and                go to state 100
    term_bool_comparison    go to state 101
    term_arit_comparison    go to state 102
    term                    go to state 103
    factor                  go to state 104
    expo                    go to state 105
    negation_unsub          go to state 106


state 356

  140 else_clausule: ELSE COLON @55 statement_list .

    $default  reduce using rule 140 (else_clausule)


state 357

  162 for_statement: FOR @65 IDENTIFIER @66 IN @67 IDENTIFIER @68 COLON @69 statement_list END_FOR . SEMICOLON

    SEMICOLON  shift, and go to state 362


state 358

  149 case_clasule: CASE OPEN_PARENTHESIS @59 expression . CLOSE_PARENTHESIS COLON @60 statement_list BREAK SEMICOLON @61 case_clasule

    CLOSE_PARENTHESIS  shift, and go to state 363


state 359

  152 other_clasule: OTHER COLON @62 . statement_list

    IDENTIFIER  shift, and go to state 223
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 224
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 225
    FOR         shift, and go to state 226
    WHILE       shift, and go to state 227
    SWITCH      shift, and go to state 228

    $default  reduce using rule 107 (statement_list)

    variable_declaration          go to state 229
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 364
    statement                     go to state 231
    return_statement              go to state 232
    assignment_statement          go to state 233
    destination                   go to state 234
    if_statement                  go to state 235
    switch_statement              go to state 236
    while_statement               go to state 237
    for_statement                 go to state 238
    subprogram_call               go to state 239


state 360

  145 switch_statement: SWITCH OPEN_PARENTHESIS @56 IDENTIFIER @57 CLOSE_PARENTHESIS COLON @58 case_clasule other_clasule END_SWITCH SEMICOLON .

    $default  reduce using rule 145 (switch_statement)


state 361

   66 matrix_assignment_aux_aux_aux: COMMA OPEN_BRACES @27 set_assignment_aux_aux . CLOSE_BRACES @28 matrix_assignment_aux_aux_aux

    CLOSE_BRACES  shift, and go to state 365


state 362

  162 for_statement: FOR @65 IDENTIFIER @66 IN @67 IDENTIFIER @68 COLON @69 statement_list END_FOR SEMICOLON .

    $default  reduce using rule 162 (for_statement)


state 363

  149 case_clasule: CASE OPEN_PARENTHESIS @59 expression CLOSE_PARENTHESIS . COLON @60 statement_list BREAK SEMICOLON @61 case_clasule

    COLON  shift, and go to state 366


state 364

  152 other_clasule: OTHER COLON @62 statement_list .

    $default  reduce using rule 152 (other_clasule)


state 365

   66 matrix_assignment_aux_aux_aux: COMMA OPEN_BRACES @27 set_assignment_aux_aux CLOSE_BRACES . @28 matrix_assignment_aux_aux_aux

    $default  reduce using rule 65 (@28)

    @28  go to state 367


state 366

  149 case_clasule: CASE OPEN_PARENTHESIS @59 expression CLOSE_PARENTHESIS COLON . @60 statement_list BREAK SEMICOLON @61 case_clasule

    $default  reduce using rule 147 (@60)

    @60  go to state 368


state 367

   66 matrix_assignment_aux_aux_aux: COMMA OPEN_BRACES @27 set_assignment_aux_aux CLOSE_BRACES @28 . matrix_assignment_aux_aux_aux

    COMMA  shift, and go to state 339

    COMMA     [reduce using rule 67 (matrix_assignment_aux_aux_aux)]
    $default  reduce using rule 67 (matrix_assignment_aux_aux_aux)

    matrix_assignment_aux_aux_aux  go to state 369


state 368

  149 case_clasule: CASE OPEN_PARENTHESIS @59 expression CLOSE_PARENTHESIS COLON @60 . statement_list BREAK SEMICOLON @61 case_clasule

    IDENTIFIER  shift, and go to state 223
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 224
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 225
    FOR         shift, and go to state 226
    WHILE       shift, and go to state 227
    SWITCH      shift, and go to state 228

    $default  reduce using rule 107 (statement_list)

    variable_declaration          go to state 229
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 370
    statement                     go to state 231
    return_statement              go to state 232
    assignment_statement          go to state 233
    destination                   go to state 234
    if_statement                  go to state 235
    switch_statement              go to state 236
    while_statement               go to state 237
    for_statement                 go to state 238
    subprogram_call               go to state 239


state 369

   66 matrix_assignment_aux_aux_aux: COMMA OPEN_BRACES @27 set_assignment_aux_aux CLOSE_BRACES @28 matrix_assignment_aux_aux_aux .

    $default  reduce using rule 66 (matrix_assignment_aux_aux_aux)


state 370

  149 case_clasule: CASE OPEN_PARENTHESIS @59 expression CLOSE_PARENTHESIS COLON @60 statement_list . BREAK SEMICOLON @61 case_clasule

    BREAK  shift, and go to state 371


state 371

  149 case_clasule: CASE OPEN_PARENTHESIS @59 expression CLOSE_PARENTHESIS COLON @60 statement_list BREAK . SEMICOLON @61 case_clasule

    SEMICOLON  shift, and go to state 372


state 372

  149 case_clasule: CASE OPEN_PARENTHESIS @59 expression CLOSE_PARENTHESIS COLON @60 statement_list BREAK SEMICOLON . @61 case_clasule

    $default  reduce using rule 148 (@61)

    @61  go to state 373


state 373

  149 case_clasule: CASE OPEN_PARENTHESIS @59 expression CLOSE_PARENTHESIS COLON @60 statement_list BREAK SEMICOLON @61 . case_clasule

    CASE  shift, and go to state 337

    $default  reduce using rule 150 (case_clasule)

    case_clasule  go to state 374


state 374

  149 case_clasule: CASE OPEN_PARENTHESIS @59 expression CLOSE_PARENTHESIS COLON @60 statement_list BREAK SEMICOLON @61 case_clasule .

    $default  reduce using rule 149 (case_clasule)
