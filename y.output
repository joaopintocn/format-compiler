Terminals which are not used

   ID
   COMPLEX_NUMBER
   REAL_NUMBER
   INT_NUMBER
   INCREMENT_OP
   DECREMENT_OP
   DOT_OP
   COMMENT


State 222 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_header program_body

    2 program_header: import program_header
    3               | /* empty */

    4 import: IMPORT NAME

    5 program_body: variable_section subprogram_section

    6 variable_section: VARIABLES_SECTION COLON variable_declarations
    7                 | /* empty */

    8 variable_declarations: variable_declaration SEMICOLON variable_declarations_tail

    9 variable_declarations_tail: variable_declarations
   10                           | /* empty */

   11 subprogram_section: SUBPROGRAMS_SECTION COLON subprogram_declarations
   12                   | /* empty */

   13 subprogram_declarations: subprogram_declaration subprogram_declarations_tail

   14 subprogram_declarations_tail: subprogram_declarations
   15                             | /* empty */

   16 variable_declaration: simple_variable_declaration
   17                     | compost_variable_declaration

   18 simple_variable_declaration: type identifier simple_variable_declaration_value
   19                            | CONST type identifier ASSIGN_OP expression
   20                            | REF type identifier simple_variable_declaration_value

   21 simple_variable_declaration_value: ASSIGN_OP expression
   22                                  | /* empty */

   23 type: INT
   24     | DOUBLE REAL
   25     | REAL
   26     | COMPLEX
   27     | BOOLEAN
   28     | STRING

   29 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS dimensions CLOSE_BRACKETS identifier matrix_assignment
   30                             | SET_OF type identifier set_assignment
   31                             | ENUM identifier COLON identifier identifier_list END_ENUM
   32                             | STRUCT identifier COLON variable_declarations END_STRUCT

   33 matrix_assignment: matrix_assignment_aux
   34                  | /* empty */

   35 matrix_assignment_aux: ASSIGN_OP matrix_assignment_aux_aux

   36 matrix_assignment_aux_aux: OPEN_BRACES expression CLOSE_BRACES values_group_list

   37 values_group_list: COMMA matrix_assignment_aux_aux
   38                  | /* empty */

   39 set_assignment: set_assignment_aux
   40               | /* empty */

   41 set_assignment_aux: ASSIGN_OP OPEN_BRACES set_assignment_aux_aux CLOSE_BRACES

   42 set_assignment_aux_aux: expression values_list

   43 values_list: COMMA set_assignment_aux_aux
   44            | /* empty */

   45 identifier_list: COMMA identifier identifier_list
   46                | /* empty */

   47 dimensions: range dimensions_tail

   48 range: NUMBER range_tail

   49 range_tail: RANGE NUMBER
   50           | /* empty */

   51 dimensions_tail: COMMA range dimensions_tail
   52                | /* empty */

   53 subprogram_declaration: procedure_declaration
   54                       | function_declaration

   55 procedure_declaration: PROCEDURE identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_PROCEDURE SEMICOLON

   56 function_declaration: FUNCTION type identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_FUNCTION SEMICOLON

   57 parameter_list: variable_declaration parameter_list_tail
   58               | /* empty */

   59 parameter_list_tail: COMMA variable_declaration parameter_list_tail
   60                    | /* empty */

   61 statement_list: statement statement_list
   62               | /* empty */

   63 statement: assignment_statement
   64          | if_statement
   65          | switch_statement
   66          | while_statement
   67          | for_statement
   68          | subprogram_call
   69          | return_statement
   70          | variable_declaration

   71 return_statement: RETURN expression SEMICOLON

   72 assignment_statement: destination assignment_statement_tail SEMICOLON

   73 assignment_statement_tail: ASSIGN_OP expression
   74                          | ADD_ASSIGN_OP expression
   75                          | SUB_ASSIGN_OP expression
   76                          | MULT_ASSIGN_OP expression
   77                          | DIV_ASSIGN_OP expression
   78                          | MOD_ASSIGN_OP expression

   79 destination: identifier identifier_tail

   80 identifier_tail: OPEN_BRACKETS dimensions CLOSE_BRACKETS
   81                | /* empty */

   82 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF SEMICOLON

   83 else_clausule: ELSE statement_list
   84              | /* empty */

   85 switch_statement: SWITCH OPEN_PARENTHESIS identifier CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH SEMICOLON

   86 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON case_clasule
   87             | /* empty */

   88 other_clasule: OTHER COLON statement_list
   89              | /* empty */

   90 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list END_WHILE SEMICOLON

   91 for_statement: FOR identifier IN identifier COLON statement_list END_FOR SEMICOLON

   92 subprogram_call: identifier OPEN_PARENTHESIS argument_list CLOSE_PARENTHESIS

   93 argument_list: argument_list_aux
   94              | /* empty */

   95 argument_list_aux: expression argument_list_tail

   96 argument_list_tail: COMMA argument_list_aux
   97                   | /* empty */

   98 expression: term_or term_or_tail

   99 term_or_tail: OR_OP term_or term_or_tail
  100             | /* empty */

  101 term_or: term_and term_and_tail

  102 term_and_tail: AND_OP term_and term_and_tail
  103              | /* empty */

  104 term_and: term_bool_comparison term_bool_comparison_tail

  105 term_bool_comparison_tail: EQ_OP term_bool_comparison term_bool_comparison_tail
  106                          | NEQ_OP term_bool_comparison term_bool_comparison_tail
  107                          | /* empty */

  108 term_bool_comparison: term_arit_comparison term_arit_comparison_tail

  109 term_arit_comparison_tail: LEQ_OP term_arit_comparison term_arit_comparison_tail
  110                          | BEQ_OP term_arit_comparison term_arit_comparison_tail
  111                          | LT_OP term_arit_comparison term_arit_comparison_tail
  112                          | BT_OP term_arit_comparison term_arit_comparison_tail
  113                          | /* empty */

  114 term_arit_comparison: term term_tail

  115 term_tail: ADD_OP term term_tail
  116          | SUB_OP term term_tail
  117          | /* empty */

  118 term: factor factor_tail

  119 factor_tail: MULT_OP factor factor_tail
  120            | DIV_OP factor factor_tail
  121            | MOD_OP factor factor_tail
  122            | /* empty */

  123 factor: expo expo_tail

  124 expo_tail: EXPO_OP expo expo_tail
  125          | /* empty */

  126 expo: negation negation_tail

  127 negation_tail: NEG_OP negation negation_tail
  128              | /* empty */

  129 negation: identifier
  130         | NUMBER
  131         | function_call
  132         | OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

  133 function_call: identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS

  134 identifier: STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
NAME (258) 4
ID (259)
NUMBER (260) 48 49 130
COMPLEX_NUMBER (261)
REAL_NUMBER (262)
INT_NUMBER (263)
IMPORT (264) 4
VARIABLES_SECTION (265) 6
SUBPROGRAMS_SECTION (266) 11
PROCEDURE (267) 55
FUNCTION (268) 56
END_PROCEDURE (269) 55
END_FUNCTION (270) 56
RETURN (271) 71
INT (272) 23
REAL (273) 24 25
COMPLEX (274) 26
STRING (275) 28 134
DOUBLE (276) 24
BOOLEAN (277) 27
ENUM (278) 31
STRUCT (279) 32
SET_OF (280) 30
MATRIX_OF (281) 29
END_STRUCT (282) 32
END_ENUM (283) 31
CONST (284) 19
REF (285) 20
IF (286) 82
ELSE (287) 83
FOR (288) 91
IN (289) 91
WHILE (290) 90
SWITCH (291) 85
CASE (292) 86
BREAK (293) 86
OTHER (294) 88
END_IF (295) 82
END_FOR (296) 91
END_WHILE (297) 90
END_SWITCH (298) 85
SEMICOLON (299) 8 55 56 71 72 82 85 86 90 91
COMMA (300) 37 43 45 51 59 96
COLON (301) 6 11 31 32 55 56 82 85 86 88 90 91
OPEN_PARENTHESIS (302) 55 56 82 85 86 90 92 132 133
CLOSE_PARENTHESIS (303) 55 56 82 85 86 90 92 132 133
OPEN_BRACKETS (304) 29 80
CLOSE_BRACKETS (305) 29 80
OPEN_BRACES (306) 36 41
CLOSE_BRACES (307) 36 41
RANGE (308) 49
ASSIGN_OP (309) 19 21 35 41 73
ADD_ASSIGN_OP (310) 74
SUB_ASSIGN_OP (311) 75
MULT_ASSIGN_OP (312) 76
DIV_ASSIGN_OP (313) 77
MOD_ASSIGN_OP (314) 78
INCREMENT_OP (315)
DECREMENT_OP (316)
NEG_OP (317) 127
AND_OP (318) 102
OR_OP (319) 99
LEQ_OP (320) 109
BEQ_OP (321) 110
EQ_OP (322) 105
NEQ_OP (323) 106
SUB_OP (324) 116
ADD_OP (325) 115
MULT_OP (326) 119
DIV_OP (327) 120
MOD_OP (328) 121
LT_OP (329) 111
BT_OP (330) 112
EXPO_OP (331) 124
DOT_OP (332)
COMMENT (333)


Nonterminals, with rules where they appear

$accept (79)
    on left: 0
program (80)
    on left: 1, on right: 0
program_header (81)
    on left: 2 3, on right: 1 2
import (82)
    on left: 4, on right: 2
program_body (83)
    on left: 5, on right: 1
variable_section (84)
    on left: 6 7, on right: 5
variable_declarations (85)
    on left: 8, on right: 6 9 32
variable_declarations_tail (86)
    on left: 9 10, on right: 8
subprogram_section (87)
    on left: 11 12, on right: 5
subprogram_declarations (88)
    on left: 13, on right: 11 14
subprogram_declarations_tail (89)
    on left: 14 15, on right: 13
variable_declaration (90)
    on left: 16 17, on right: 8 57 59 70
simple_variable_declaration (91)
    on left: 18 19 20, on right: 16
simple_variable_declaration_value (92)
    on left: 21 22, on right: 18 20
type (93)
    on left: 23 24 25 26 27 28, on right: 18 19 20 29 30 56
compost_variable_declaration (94)
    on left: 29 30 31 32, on right: 17
matrix_assignment (95)
    on left: 33 34, on right: 29
matrix_assignment_aux (96)
    on left: 35, on right: 33
matrix_assignment_aux_aux (97)
    on left: 36, on right: 35 37
values_group_list (98)
    on left: 37 38, on right: 36
set_assignment (99)
    on left: 39 40, on right: 30
set_assignment_aux (100)
    on left: 41, on right: 39
set_assignment_aux_aux (101)
    on left: 42, on right: 41 43
values_list (102)
    on left: 43 44, on right: 42
identifier_list (103)
    on left: 45 46, on right: 31 45
dimensions (104)
    on left: 47, on right: 29 80
range (105)
    on left: 48, on right: 47 51
range_tail (106)
    on left: 49 50, on right: 48
dimensions_tail (107)
    on left: 51 52, on right: 47 51
subprogram_declaration (108)
    on left: 53 54, on right: 13
procedure_declaration (109)
    on left: 55, on right: 53
function_declaration (110)
    on left: 56, on right: 54
parameter_list (111)
    on left: 57 58, on right: 55 56 133
parameter_list_tail (112)
    on left: 59 60, on right: 57 59
statement_list (113)
    on left: 61 62, on right: 55 56 61 82 83 86 88 90 91
statement (114)
    on left: 63 64 65 66 67 68 69 70, on right: 61
return_statement (115)
    on left: 71, on right: 69
assignment_statement (116)
    on left: 72, on right: 63
assignment_statement_tail (117)
    on left: 73 74 75 76 77 78, on right: 72
destination (118)
    on left: 79, on right: 72
identifier_tail (119)
    on left: 80 81, on right: 79
if_statement (120)
    on left: 82, on right: 64
else_clausule (121)
    on left: 83 84, on right: 82
switch_statement (122)
    on left: 85, on right: 65
case_clasule (123)
    on left: 86 87, on right: 85 86
other_clasule (124)
    on left: 88 89, on right: 85
while_statement (125)
    on left: 90, on right: 66
for_statement (126)
    on left: 91, on right: 67
subprogram_call (127)
    on left: 92, on right: 68
argument_list (128)
    on left: 93 94, on right: 92
argument_list_aux (129)
    on left: 95, on right: 93 96
argument_list_tail (130)
    on left: 96 97, on right: 95
expression (131)
    on left: 98, on right: 19 21 36 42 71 73 74 75 76 77 78 82 86 90
    95 132
term_or_tail (132)
    on left: 99 100, on right: 98 99
term_or (133)
    on left: 101, on right: 98 99
term_and_tail (134)
    on left: 102 103, on right: 101 102
term_and (135)
    on left: 104, on right: 101 102
term_bool_comparison_tail (136)
    on left: 105 106 107, on right: 104 105 106
term_bool_comparison (137)
    on left: 108, on right: 104 105 106
term_arit_comparison_tail (138)
    on left: 109 110 111 112 113, on right: 108 109 110 111 112
term_arit_comparison (139)
    on left: 114, on right: 108 109 110 111 112
term_tail (140)
    on left: 115 116 117, on right: 114 115 116
term (141)
    on left: 118, on right: 114 115 116
factor_tail (142)
    on left: 119 120 121 122, on right: 118 119 120 121
factor (143)
    on left: 123, on right: 118 119 120 121
expo_tail (144)
    on left: 124 125, on right: 123 124
expo (145)
    on left: 126, on right: 123 124
negation_tail (146)
    on left: 127 128, on right: 126 127
negation (147)
    on left: 129 130 131 132, on right: 126 127
function_call (148)
    on left: 133, on right: 131
identifier (149)
    on left: 134, on right: 18 19 20 29 30 31 32 45 55 56 79 85 91
    92 129 133


state 0

    0 $accept: . program $end

    IMPORT  shift, and go to state 1

    $default  reduce using rule 3 (program_header)

    program         go to state 2
    program_header  go to state 3
    import          go to state 4


state 1

    4 import: IMPORT . NAME

    NAME  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: program_header . program_body

    VARIABLES_SECTION  shift, and go to state 7

    $default  reduce using rule 7 (variable_section)

    program_body      go to state 8
    variable_section  go to state 9


state 4

    2 program_header: import . program_header

    IMPORT  shift, and go to state 1

    $default  reduce using rule 3 (program_header)

    program_header  go to state 10
    import          go to state 4


state 5

    4 import: IMPORT NAME .

    $default  reduce using rule 4 (import)


state 6

    0 $accept: program $end .

    $default  accept


state 7

    6 variable_section: VARIABLES_SECTION . COLON variable_declarations

    COLON  shift, and go to state 11


state 8

    1 program: program_header program_body .

    $default  reduce using rule 1 (program)


state 9

    5 program_body: variable_section . subprogram_section

    SUBPROGRAMS_SECTION  shift, and go to state 12

    $default  reduce using rule 12 (subprogram_section)

    subprogram_section  go to state 13


state 10

    2 program_header: import program_header .

    $default  reduce using rule 2 (program_header)


state 11

    6 variable_section: VARIABLES_SECTION COLON . variable_declarations

    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 17
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25

    variable_declarations         go to state 26
    variable_declaration          go to state 27
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30


state 12

   11 subprogram_section: SUBPROGRAMS_SECTION . COLON subprogram_declarations

    COLON  shift, and go to state 31


state 13

    5 program_body: variable_section subprogram_section .

    $default  reduce using rule 5 (program_body)


state 14

   23 type: INT .

    $default  reduce using rule 23 (type)


state 15

   25 type: REAL .

    $default  reduce using rule 25 (type)


state 16

   26 type: COMPLEX .

    $default  reduce using rule 26 (type)


state 17

   28 type: STRING .

    $default  reduce using rule 28 (type)


state 18

   24 type: DOUBLE . REAL

    REAL  shift, and go to state 32


state 19

   27 type: BOOLEAN .

    $default  reduce using rule 27 (type)


state 20

   31 compost_variable_declaration: ENUM . identifier COLON identifier identifier_list END_ENUM

    STRING  shift, and go to state 33

    identifier  go to state 34


state 21

   32 compost_variable_declaration: STRUCT . identifier COLON variable_declarations END_STRUCT

    STRING  shift, and go to state 33

    identifier  go to state 35


state 22

   30 compost_variable_declaration: SET_OF . type identifier set_assignment

    INT      shift, and go to state 14
    REAL     shift, and go to state 15
    COMPLEX  shift, and go to state 16
    STRING   shift, and go to state 17
    DOUBLE   shift, and go to state 18
    BOOLEAN  shift, and go to state 19

    type  go to state 36


state 23

   29 compost_variable_declaration: MATRIX_OF . type OPEN_BRACKETS dimensions CLOSE_BRACKETS identifier matrix_assignment

    INT      shift, and go to state 14
    REAL     shift, and go to state 15
    COMPLEX  shift, and go to state 16
    STRING   shift, and go to state 17
    DOUBLE   shift, and go to state 18
    BOOLEAN  shift, and go to state 19

    type  go to state 37


state 24

   19 simple_variable_declaration: CONST . type identifier ASSIGN_OP expression

    INT      shift, and go to state 14
    REAL     shift, and go to state 15
    COMPLEX  shift, and go to state 16
    STRING   shift, and go to state 17
    DOUBLE   shift, and go to state 18
    BOOLEAN  shift, and go to state 19

    type  go to state 38


state 25

   20 simple_variable_declaration: REF . type identifier simple_variable_declaration_value

    INT      shift, and go to state 14
    REAL     shift, and go to state 15
    COMPLEX  shift, and go to state 16
    STRING   shift, and go to state 17
    DOUBLE   shift, and go to state 18
    BOOLEAN  shift, and go to state 19

    type  go to state 39


state 26

    6 variable_section: VARIABLES_SECTION COLON variable_declarations .

    $default  reduce using rule 6 (variable_section)


state 27

    8 variable_declarations: variable_declaration . SEMICOLON variable_declarations_tail

    SEMICOLON  shift, and go to state 40


state 28

   16 variable_declaration: simple_variable_declaration .

    $default  reduce using rule 16 (variable_declaration)


state 29

   18 simple_variable_declaration: type . identifier simple_variable_declaration_value

    STRING  shift, and go to state 33

    identifier  go to state 41


state 30

   17 variable_declaration: compost_variable_declaration .

    $default  reduce using rule 17 (variable_declaration)


state 31

   11 subprogram_section: SUBPROGRAMS_SECTION COLON . subprogram_declarations

    PROCEDURE  shift, and go to state 42
    FUNCTION   shift, and go to state 43

    subprogram_declarations  go to state 44
    subprogram_declaration   go to state 45
    procedure_declaration    go to state 46
    function_declaration     go to state 47


state 32

   24 type: DOUBLE REAL .

    $default  reduce using rule 24 (type)


state 33

  134 identifier: STRING .

    $default  reduce using rule 134 (identifier)


state 34

   31 compost_variable_declaration: ENUM identifier . COLON identifier identifier_list END_ENUM

    COLON  shift, and go to state 48


state 35

   32 compost_variable_declaration: STRUCT identifier . COLON variable_declarations END_STRUCT

    COLON  shift, and go to state 49


state 36

   30 compost_variable_declaration: SET_OF type . identifier set_assignment

    STRING  shift, and go to state 33

    identifier  go to state 50


state 37

   29 compost_variable_declaration: MATRIX_OF type . OPEN_BRACKETS dimensions CLOSE_BRACKETS identifier matrix_assignment

    OPEN_BRACKETS  shift, and go to state 51


state 38

   19 simple_variable_declaration: CONST type . identifier ASSIGN_OP expression

    STRING  shift, and go to state 33

    identifier  go to state 52


state 39

   20 simple_variable_declaration: REF type . identifier simple_variable_declaration_value

    STRING  shift, and go to state 33

    identifier  go to state 53


state 40

    8 variable_declarations: variable_declaration SEMICOLON . variable_declarations_tail

    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 17
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25

    $default  reduce using rule 10 (variable_declarations_tail)

    variable_declarations         go to state 54
    variable_declarations_tail    go to state 55
    variable_declaration          go to state 27
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30


state 41

   18 simple_variable_declaration: type identifier . simple_variable_declaration_value

    ASSIGN_OP  shift, and go to state 56

    $default  reduce using rule 22 (simple_variable_declaration_value)

    simple_variable_declaration_value  go to state 57


state 42

   55 procedure_declaration: PROCEDURE . identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_PROCEDURE SEMICOLON

    STRING  shift, and go to state 33

    identifier  go to state 58


state 43

   56 function_declaration: FUNCTION . type identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_FUNCTION SEMICOLON

    INT      shift, and go to state 14
    REAL     shift, and go to state 15
    COMPLEX  shift, and go to state 16
    STRING   shift, and go to state 17
    DOUBLE   shift, and go to state 18
    BOOLEAN  shift, and go to state 19

    type  go to state 59


state 44

   11 subprogram_section: SUBPROGRAMS_SECTION COLON subprogram_declarations .

    $default  reduce using rule 11 (subprogram_section)


state 45

   13 subprogram_declarations: subprogram_declaration . subprogram_declarations_tail

    PROCEDURE  shift, and go to state 42
    FUNCTION   shift, and go to state 43

    $default  reduce using rule 15 (subprogram_declarations_tail)

    subprogram_declarations       go to state 60
    subprogram_declarations_tail  go to state 61
    subprogram_declaration        go to state 45
    procedure_declaration         go to state 46
    function_declaration          go to state 47


state 46

   53 subprogram_declaration: procedure_declaration .

    $default  reduce using rule 53 (subprogram_declaration)


state 47

   54 subprogram_declaration: function_declaration .

    $default  reduce using rule 54 (subprogram_declaration)


state 48

   31 compost_variable_declaration: ENUM identifier COLON . identifier identifier_list END_ENUM

    STRING  shift, and go to state 33

    identifier  go to state 62


state 49

   32 compost_variable_declaration: STRUCT identifier COLON . variable_declarations END_STRUCT

    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 17
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25

    variable_declarations         go to state 63
    variable_declaration          go to state 27
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30


state 50

   30 compost_variable_declaration: SET_OF type identifier . set_assignment

    ASSIGN_OP  shift, and go to state 64

    $default  reduce using rule 40 (set_assignment)

    set_assignment      go to state 65
    set_assignment_aux  go to state 66


state 51

   29 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS . dimensions CLOSE_BRACKETS identifier matrix_assignment

    NUMBER  shift, and go to state 67

    dimensions  go to state 68
    range       go to state 69


state 52

   19 simple_variable_declaration: CONST type identifier . ASSIGN_OP expression

    ASSIGN_OP  shift, and go to state 70


state 53

   20 simple_variable_declaration: REF type identifier . simple_variable_declaration_value

    ASSIGN_OP  shift, and go to state 56

    $default  reduce using rule 22 (simple_variable_declaration_value)

    simple_variable_declaration_value  go to state 71


state 54

    9 variable_declarations_tail: variable_declarations .

    $default  reduce using rule 9 (variable_declarations_tail)


state 55

    8 variable_declarations: variable_declaration SEMICOLON variable_declarations_tail .

    $default  reduce using rule 8 (variable_declarations)


state 56

   21 simple_variable_declaration_value: ASSIGN_OP . expression

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    expression            go to state 74
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 57

   18 simple_variable_declaration: type identifier simple_variable_declaration_value .

    $default  reduce using rule 18 (simple_variable_declaration)


state 58

   55 procedure_declaration: PROCEDURE identifier . OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_PROCEDURE SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 85


state 59

   56 function_declaration: FUNCTION type . identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_FUNCTION SEMICOLON

    STRING  shift, and go to state 33

    identifier  go to state 86


state 60

   14 subprogram_declarations_tail: subprogram_declarations .

    $default  reduce using rule 14 (subprogram_declarations_tail)


state 61

   13 subprogram_declarations: subprogram_declaration subprogram_declarations_tail .

    $default  reduce using rule 13 (subprogram_declarations)


state 62

   31 compost_variable_declaration: ENUM identifier COLON identifier . identifier_list END_ENUM

    COMMA  shift, and go to state 87

    $default  reduce using rule 46 (identifier_list)

    identifier_list  go to state 88


state 63

   32 compost_variable_declaration: STRUCT identifier COLON variable_declarations . END_STRUCT

    END_STRUCT  shift, and go to state 89


state 64

   41 set_assignment_aux: ASSIGN_OP . OPEN_BRACES set_assignment_aux_aux CLOSE_BRACES

    OPEN_BRACES  shift, and go to state 90


state 65

   30 compost_variable_declaration: SET_OF type identifier set_assignment .

    $default  reduce using rule 30 (compost_variable_declaration)


state 66

   39 set_assignment: set_assignment_aux .

    $default  reduce using rule 39 (set_assignment)


state 67

   48 range: NUMBER . range_tail

    RANGE  shift, and go to state 91

    $default  reduce using rule 50 (range_tail)

    range_tail  go to state 92


state 68

   29 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS dimensions . CLOSE_BRACKETS identifier matrix_assignment

    CLOSE_BRACKETS  shift, and go to state 93


state 69

   47 dimensions: range . dimensions_tail

    COMMA  shift, and go to state 94

    $default  reduce using rule 52 (dimensions_tail)

    dimensions_tail  go to state 95


state 70

   19 simple_variable_declaration: CONST type identifier ASSIGN_OP . expression

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    expression            go to state 96
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 71

   20 simple_variable_declaration: REF type identifier simple_variable_declaration_value .

    $default  reduce using rule 20 (simple_variable_declaration)


state 72

  130 negation: NUMBER .

    $default  reduce using rule 130 (negation)


state 73

  132 negation: OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    expression            go to state 97
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 74

   21 simple_variable_declaration_value: ASSIGN_OP expression .

    $default  reduce using rule 21 (simple_variable_declaration_value)


state 75

   98 expression: term_or . term_or_tail

    OR_OP  shift, and go to state 98

    $default  reduce using rule 100 (term_or_tail)

    term_or_tail  go to state 99


state 76

  101 term_or: term_and . term_and_tail

    AND_OP  shift, and go to state 100

    $default  reduce using rule 103 (term_and_tail)

    term_and_tail  go to state 101


state 77

  104 term_and: term_bool_comparison . term_bool_comparison_tail

    EQ_OP   shift, and go to state 102
    NEQ_OP  shift, and go to state 103

    $default  reduce using rule 107 (term_bool_comparison_tail)

    term_bool_comparison_tail  go to state 104


state 78

  108 term_bool_comparison: term_arit_comparison . term_arit_comparison_tail

    LEQ_OP  shift, and go to state 105
    BEQ_OP  shift, and go to state 106
    LT_OP   shift, and go to state 107
    BT_OP   shift, and go to state 108

    $default  reduce using rule 113 (term_arit_comparison_tail)

    term_arit_comparison_tail  go to state 109


state 79

  114 term_arit_comparison: term . term_tail

    SUB_OP  shift, and go to state 110
    ADD_OP  shift, and go to state 111

    $default  reduce using rule 117 (term_tail)

    term_tail  go to state 112


state 80

  118 term: factor . factor_tail

    MULT_OP  shift, and go to state 113
    DIV_OP   shift, and go to state 114
    MOD_OP   shift, and go to state 115

    $default  reduce using rule 122 (factor_tail)

    factor_tail  go to state 116


state 81

  123 factor: expo . expo_tail

    EXPO_OP  shift, and go to state 117

    $default  reduce using rule 125 (expo_tail)

    expo_tail  go to state 118


state 82

  126 expo: negation . negation_tail

    NEG_OP  shift, and go to state 119

    $default  reduce using rule 128 (negation_tail)

    negation_tail  go to state 120


state 83

  131 negation: function_call .

    $default  reduce using rule 131 (negation)


state 84

  129 negation: identifier .
  133 function_call: identifier . OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 121

    $default  reduce using rule 129 (negation)


state 85

   55 procedure_declaration: PROCEDURE identifier OPEN_PARENTHESIS . parameter_list CLOSE_PARENTHESIS COLON statement_list END_PROCEDURE SEMICOLON

    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 17
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25

    $default  reduce using rule 58 (parameter_list)

    variable_declaration          go to state 122
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    parameter_list                go to state 123


state 86

   56 function_declaration: FUNCTION type identifier . OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_FUNCTION SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 124


state 87

   45 identifier_list: COMMA . identifier identifier_list

    STRING  shift, and go to state 33

    identifier  go to state 125


state 88

   31 compost_variable_declaration: ENUM identifier COLON identifier identifier_list . END_ENUM

    END_ENUM  shift, and go to state 126


state 89

   32 compost_variable_declaration: STRUCT identifier COLON variable_declarations END_STRUCT .

    $default  reduce using rule 32 (compost_variable_declaration)


state 90

   41 set_assignment_aux: ASSIGN_OP OPEN_BRACES . set_assignment_aux_aux CLOSE_BRACES

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    set_assignment_aux_aux  go to state 127
    expression              go to state 128
    term_or                 go to state 75
    term_and                go to state 76
    term_bool_comparison    go to state 77
    term_arit_comparison    go to state 78
    term                    go to state 79
    factor                  go to state 80
    expo                    go to state 81
    negation                go to state 82
    function_call           go to state 83
    identifier              go to state 84


state 91

   49 range_tail: RANGE . NUMBER

    NUMBER  shift, and go to state 129


state 92

   48 range: NUMBER range_tail .

    $default  reduce using rule 48 (range)


state 93

   29 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS dimensions CLOSE_BRACKETS . identifier matrix_assignment

    STRING  shift, and go to state 33

    identifier  go to state 130


state 94

   51 dimensions_tail: COMMA . range dimensions_tail

    NUMBER  shift, and go to state 67

    range  go to state 131


state 95

   47 dimensions: range dimensions_tail .

    $default  reduce using rule 47 (dimensions)


state 96

   19 simple_variable_declaration: CONST type identifier ASSIGN_OP expression .

    $default  reduce using rule 19 (simple_variable_declaration)


state 97

  132 negation: OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 132


state 98

   99 term_or_tail: OR_OP . term_or term_or_tail

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    term_or               go to state 133
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 99

   98 expression: term_or term_or_tail .

    $default  reduce using rule 98 (expression)


state 100

  102 term_and_tail: AND_OP . term_and term_and_tail

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    term_and              go to state 134
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 101

  101 term_or: term_and term_and_tail .

    $default  reduce using rule 101 (term_or)


state 102

  105 term_bool_comparison_tail: EQ_OP . term_bool_comparison term_bool_comparison_tail

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    term_bool_comparison  go to state 135
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 103

  106 term_bool_comparison_tail: NEQ_OP . term_bool_comparison term_bool_comparison_tail

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    term_bool_comparison  go to state 136
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 104

  104 term_and: term_bool_comparison term_bool_comparison_tail .

    $default  reduce using rule 104 (term_and)


state 105

  109 term_arit_comparison_tail: LEQ_OP . term_arit_comparison term_arit_comparison_tail

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    term_arit_comparison  go to state 137
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 106

  110 term_arit_comparison_tail: BEQ_OP . term_arit_comparison term_arit_comparison_tail

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    term_arit_comparison  go to state 138
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 107

  111 term_arit_comparison_tail: LT_OP . term_arit_comparison term_arit_comparison_tail

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    term_arit_comparison  go to state 139
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 108

  112 term_arit_comparison_tail: BT_OP . term_arit_comparison term_arit_comparison_tail

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    term_arit_comparison  go to state 140
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 109

  108 term_bool_comparison: term_arit_comparison term_arit_comparison_tail .

    $default  reduce using rule 108 (term_bool_comparison)


state 110

  116 term_tail: SUB_OP . term term_tail

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    term           go to state 141
    factor         go to state 80
    expo           go to state 81
    negation       go to state 82
    function_call  go to state 83
    identifier     go to state 84


state 111

  115 term_tail: ADD_OP . term term_tail

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    term           go to state 142
    factor         go to state 80
    expo           go to state 81
    negation       go to state 82
    function_call  go to state 83
    identifier     go to state 84


state 112

  114 term_arit_comparison: term term_tail .

    $default  reduce using rule 114 (term_arit_comparison)


state 113

  119 factor_tail: MULT_OP . factor factor_tail

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    factor         go to state 143
    expo           go to state 81
    negation       go to state 82
    function_call  go to state 83
    identifier     go to state 84


state 114

  120 factor_tail: DIV_OP . factor factor_tail

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    factor         go to state 144
    expo           go to state 81
    negation       go to state 82
    function_call  go to state 83
    identifier     go to state 84


state 115

  121 factor_tail: MOD_OP . factor factor_tail

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    factor         go to state 145
    expo           go to state 81
    negation       go to state 82
    function_call  go to state 83
    identifier     go to state 84


state 116

  118 term: factor factor_tail .

    $default  reduce using rule 118 (term)


state 117

  124 expo_tail: EXPO_OP . expo expo_tail

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    expo           go to state 146
    negation       go to state 82
    function_call  go to state 83
    identifier     go to state 84


state 118

  123 factor: expo expo_tail .

    $default  reduce using rule 123 (factor)


state 119

  127 negation_tail: NEG_OP . negation negation_tail

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    negation       go to state 147
    function_call  go to state 83
    identifier     go to state 84


state 120

  126 expo: negation negation_tail .

    $default  reduce using rule 126 (expo)


state 121

  133 function_call: identifier OPEN_PARENTHESIS . parameter_list CLOSE_PARENTHESIS

    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 17
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25

    $default  reduce using rule 58 (parameter_list)

    variable_declaration          go to state 122
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    parameter_list                go to state 148


state 122

   57 parameter_list: variable_declaration . parameter_list_tail

    COMMA  shift, and go to state 149

    $default  reduce using rule 60 (parameter_list_tail)

    parameter_list_tail  go to state 150


state 123

   55 procedure_declaration: PROCEDURE identifier OPEN_PARENTHESIS parameter_list . CLOSE_PARENTHESIS COLON statement_list END_PROCEDURE SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 151


state 124

   56 function_declaration: FUNCTION type identifier OPEN_PARENTHESIS . parameter_list CLOSE_PARENTHESIS COLON statement_list END_FUNCTION SEMICOLON

    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 17
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25

    $default  reduce using rule 58 (parameter_list)

    variable_declaration          go to state 122
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    parameter_list                go to state 152


state 125

   45 identifier_list: COMMA identifier . identifier_list

    COMMA  shift, and go to state 87

    $default  reduce using rule 46 (identifier_list)

    identifier_list  go to state 153


state 126

   31 compost_variable_declaration: ENUM identifier COLON identifier identifier_list END_ENUM .

    $default  reduce using rule 31 (compost_variable_declaration)


state 127

   41 set_assignment_aux: ASSIGN_OP OPEN_BRACES set_assignment_aux_aux . CLOSE_BRACES

    CLOSE_BRACES  shift, and go to state 154


state 128

   42 set_assignment_aux_aux: expression . values_list

    COMMA  shift, and go to state 155

    $default  reduce using rule 44 (values_list)

    values_list  go to state 156


state 129

   49 range_tail: RANGE NUMBER .

    $default  reduce using rule 49 (range_tail)


state 130

   29 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS dimensions CLOSE_BRACKETS identifier . matrix_assignment

    ASSIGN_OP  shift, and go to state 157

    $default  reduce using rule 34 (matrix_assignment)

    matrix_assignment      go to state 158
    matrix_assignment_aux  go to state 159


state 131

   51 dimensions_tail: COMMA range . dimensions_tail

    COMMA  shift, and go to state 94

    $default  reduce using rule 52 (dimensions_tail)

    dimensions_tail  go to state 160


state 132

  132 negation: OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    $default  reduce using rule 132 (negation)


state 133

   99 term_or_tail: OR_OP term_or . term_or_tail

    OR_OP  shift, and go to state 98

    $default  reduce using rule 100 (term_or_tail)

    term_or_tail  go to state 161


state 134

  102 term_and_tail: AND_OP term_and . term_and_tail

    AND_OP  shift, and go to state 100

    $default  reduce using rule 103 (term_and_tail)

    term_and_tail  go to state 162


state 135

  105 term_bool_comparison_tail: EQ_OP term_bool_comparison . term_bool_comparison_tail

    EQ_OP   shift, and go to state 102
    NEQ_OP  shift, and go to state 103

    $default  reduce using rule 107 (term_bool_comparison_tail)

    term_bool_comparison_tail  go to state 163


state 136

  106 term_bool_comparison_tail: NEQ_OP term_bool_comparison . term_bool_comparison_tail

    EQ_OP   shift, and go to state 102
    NEQ_OP  shift, and go to state 103

    $default  reduce using rule 107 (term_bool_comparison_tail)

    term_bool_comparison_tail  go to state 164


state 137

  109 term_arit_comparison_tail: LEQ_OP term_arit_comparison . term_arit_comparison_tail

    LEQ_OP  shift, and go to state 105
    BEQ_OP  shift, and go to state 106
    LT_OP   shift, and go to state 107
    BT_OP   shift, and go to state 108

    $default  reduce using rule 113 (term_arit_comparison_tail)

    term_arit_comparison_tail  go to state 165


state 138

  110 term_arit_comparison_tail: BEQ_OP term_arit_comparison . term_arit_comparison_tail

    LEQ_OP  shift, and go to state 105
    BEQ_OP  shift, and go to state 106
    LT_OP   shift, and go to state 107
    BT_OP   shift, and go to state 108

    $default  reduce using rule 113 (term_arit_comparison_tail)

    term_arit_comparison_tail  go to state 166


state 139

  111 term_arit_comparison_tail: LT_OP term_arit_comparison . term_arit_comparison_tail

    LEQ_OP  shift, and go to state 105
    BEQ_OP  shift, and go to state 106
    LT_OP   shift, and go to state 107
    BT_OP   shift, and go to state 108

    $default  reduce using rule 113 (term_arit_comparison_tail)

    term_arit_comparison_tail  go to state 167


state 140

  112 term_arit_comparison_tail: BT_OP term_arit_comparison . term_arit_comparison_tail

    LEQ_OP  shift, and go to state 105
    BEQ_OP  shift, and go to state 106
    LT_OP   shift, and go to state 107
    BT_OP   shift, and go to state 108

    $default  reduce using rule 113 (term_arit_comparison_tail)

    term_arit_comparison_tail  go to state 168


state 141

  116 term_tail: SUB_OP term . term_tail

    SUB_OP  shift, and go to state 110
    ADD_OP  shift, and go to state 111

    $default  reduce using rule 117 (term_tail)

    term_tail  go to state 169


state 142

  115 term_tail: ADD_OP term . term_tail

    SUB_OP  shift, and go to state 110
    ADD_OP  shift, and go to state 111

    $default  reduce using rule 117 (term_tail)

    term_tail  go to state 170


state 143

  119 factor_tail: MULT_OP factor . factor_tail

    MULT_OP  shift, and go to state 113
    DIV_OP   shift, and go to state 114
    MOD_OP   shift, and go to state 115

    $default  reduce using rule 122 (factor_tail)

    factor_tail  go to state 171


state 144

  120 factor_tail: DIV_OP factor . factor_tail

    MULT_OP  shift, and go to state 113
    DIV_OP   shift, and go to state 114
    MOD_OP   shift, and go to state 115

    $default  reduce using rule 122 (factor_tail)

    factor_tail  go to state 172


state 145

  121 factor_tail: MOD_OP factor . factor_tail

    MULT_OP  shift, and go to state 113
    DIV_OP   shift, and go to state 114
    MOD_OP   shift, and go to state 115

    $default  reduce using rule 122 (factor_tail)

    factor_tail  go to state 173


state 146

  124 expo_tail: EXPO_OP expo . expo_tail

    EXPO_OP  shift, and go to state 117

    $default  reduce using rule 125 (expo_tail)

    expo_tail  go to state 174


state 147

  127 negation_tail: NEG_OP negation . negation_tail

    NEG_OP  shift, and go to state 119

    $default  reduce using rule 128 (negation_tail)

    negation_tail  go to state 175


state 148

  133 function_call: identifier OPEN_PARENTHESIS parameter_list . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 176


state 149

   59 parameter_list_tail: COMMA . variable_declaration parameter_list_tail

    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 17
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25

    variable_declaration          go to state 177
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30


state 150

   57 parameter_list: variable_declaration parameter_list_tail .

    $default  reduce using rule 57 (parameter_list)


state 151

   55 procedure_declaration: PROCEDURE identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS . COLON statement_list END_PROCEDURE SEMICOLON

    COLON  shift, and go to state 178


state 152

   56 function_declaration: FUNCTION type identifier OPEN_PARENTHESIS parameter_list . CLOSE_PARENTHESIS COLON statement_list END_FUNCTION SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 179


state 153

   45 identifier_list: COMMA identifier identifier_list .

    $default  reduce using rule 45 (identifier_list)


state 154

   41 set_assignment_aux: ASSIGN_OP OPEN_BRACES set_assignment_aux_aux CLOSE_BRACES .

    $default  reduce using rule 41 (set_assignment_aux)


state 155

   43 values_list: COMMA . set_assignment_aux_aux

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    set_assignment_aux_aux  go to state 180
    expression              go to state 128
    term_or                 go to state 75
    term_and                go to state 76
    term_bool_comparison    go to state 77
    term_arit_comparison    go to state 78
    term                    go to state 79
    factor                  go to state 80
    expo                    go to state 81
    negation                go to state 82
    function_call           go to state 83
    identifier              go to state 84


state 156

   42 set_assignment_aux_aux: expression values_list .

    $default  reduce using rule 42 (set_assignment_aux_aux)


state 157

   35 matrix_assignment_aux: ASSIGN_OP . matrix_assignment_aux_aux

    OPEN_BRACES  shift, and go to state 181

    matrix_assignment_aux_aux  go to state 182


state 158

   29 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS dimensions CLOSE_BRACKETS identifier matrix_assignment .

    $default  reduce using rule 29 (compost_variable_declaration)


state 159

   33 matrix_assignment: matrix_assignment_aux .

    $default  reduce using rule 33 (matrix_assignment)


state 160

   51 dimensions_tail: COMMA range dimensions_tail .

    $default  reduce using rule 51 (dimensions_tail)


state 161

   99 term_or_tail: OR_OP term_or term_or_tail .

    $default  reduce using rule 99 (term_or_tail)


state 162

  102 term_and_tail: AND_OP term_and term_and_tail .

    $default  reduce using rule 102 (term_and_tail)


state 163

  105 term_bool_comparison_tail: EQ_OP term_bool_comparison term_bool_comparison_tail .

    $default  reduce using rule 105 (term_bool_comparison_tail)


state 164

  106 term_bool_comparison_tail: NEQ_OP term_bool_comparison term_bool_comparison_tail .

    $default  reduce using rule 106 (term_bool_comparison_tail)


state 165

  109 term_arit_comparison_tail: LEQ_OP term_arit_comparison term_arit_comparison_tail .

    $default  reduce using rule 109 (term_arit_comparison_tail)


state 166

  110 term_arit_comparison_tail: BEQ_OP term_arit_comparison term_arit_comparison_tail .

    $default  reduce using rule 110 (term_arit_comparison_tail)


state 167

  111 term_arit_comparison_tail: LT_OP term_arit_comparison term_arit_comparison_tail .

    $default  reduce using rule 111 (term_arit_comparison_tail)


state 168

  112 term_arit_comparison_tail: BT_OP term_arit_comparison term_arit_comparison_tail .

    $default  reduce using rule 112 (term_arit_comparison_tail)


state 169

  116 term_tail: SUB_OP term term_tail .

    $default  reduce using rule 116 (term_tail)


state 170

  115 term_tail: ADD_OP term term_tail .

    $default  reduce using rule 115 (term_tail)


state 171

  119 factor_tail: MULT_OP factor factor_tail .

    $default  reduce using rule 119 (factor_tail)


state 172

  120 factor_tail: DIV_OP factor factor_tail .

    $default  reduce using rule 120 (factor_tail)


state 173

  121 factor_tail: MOD_OP factor factor_tail .

    $default  reduce using rule 121 (factor_tail)


state 174

  124 expo_tail: EXPO_OP expo expo_tail .

    $default  reduce using rule 124 (expo_tail)


state 175

  127 negation_tail: NEG_OP negation negation_tail .

    $default  reduce using rule 127 (negation_tail)


state 176

  133 function_call: identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS .

    $default  reduce using rule 133 (function_call)


state 177

   59 parameter_list_tail: COMMA variable_declaration . parameter_list_tail

    COMMA  shift, and go to state 149

    $default  reduce using rule 60 (parameter_list_tail)

    parameter_list_tail  go to state 183


state 178

   55 procedure_declaration: PROCEDURE identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON . statement_list END_PROCEDURE SEMICOLON

    RETURN     shift, and go to state 184
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 185
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 186
    FOR        shift, and go to state 187
    WHILE      shift, and go to state 188
    SWITCH     shift, and go to state 189

    $default  reduce using rule 62 (statement_list)

    variable_declaration          go to state 190
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 191
    statement                     go to state 192
    return_statement              go to state 193
    assignment_statement          go to state 194
    destination                   go to state 195
    if_statement                  go to state 196
    switch_statement              go to state 197
    while_statement               go to state 198
    for_statement                 go to state 199
    subprogram_call               go to state 200
    identifier                    go to state 201


state 179

   56 function_declaration: FUNCTION type identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS . COLON statement_list END_FUNCTION SEMICOLON

    COLON  shift, and go to state 202


state 180

   43 values_list: COMMA set_assignment_aux_aux .

    $default  reduce using rule 43 (values_list)


state 181

   36 matrix_assignment_aux_aux: OPEN_BRACES . expression CLOSE_BRACES values_group_list

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    expression            go to state 203
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 182

   35 matrix_assignment_aux: ASSIGN_OP matrix_assignment_aux_aux .

    $default  reduce using rule 35 (matrix_assignment_aux)


state 183

   59 parameter_list_tail: COMMA variable_declaration parameter_list_tail .

    $default  reduce using rule 59 (parameter_list_tail)


state 184

   71 return_statement: RETURN . expression SEMICOLON

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    expression            go to state 204
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 185

   28 type: STRING .
  134 identifier: STRING .

    STRING    reduce using rule 28 (type)
    $default  reduce using rule 134 (identifier)


state 186

   82 if_statement: IF . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 205


state 187

   91 for_statement: FOR . identifier IN identifier COLON statement_list END_FOR SEMICOLON

    STRING  shift, and go to state 33

    identifier  go to state 206


state 188

   90 while_statement: WHILE . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list END_WHILE SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 207


state 189

   85 switch_statement: SWITCH . OPEN_PARENTHESIS identifier CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 208


state 190

   70 statement: variable_declaration .

    $default  reduce using rule 70 (statement)


state 191

   55 procedure_declaration: PROCEDURE identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list . END_PROCEDURE SEMICOLON

    END_PROCEDURE  shift, and go to state 209


state 192

   61 statement_list: statement . statement_list

    RETURN     shift, and go to state 184
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 185
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 186
    FOR        shift, and go to state 187
    WHILE      shift, and go to state 188
    SWITCH     shift, and go to state 189

    $default  reduce using rule 62 (statement_list)

    variable_declaration          go to state 190
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 210
    statement                     go to state 192
    return_statement              go to state 193
    assignment_statement          go to state 194
    destination                   go to state 195
    if_statement                  go to state 196
    switch_statement              go to state 197
    while_statement               go to state 198
    for_statement                 go to state 199
    subprogram_call               go to state 200
    identifier                    go to state 201


state 193

   69 statement: return_statement .

    $default  reduce using rule 69 (statement)


state 194

   63 statement: assignment_statement .

    $default  reduce using rule 63 (statement)


state 195

   72 assignment_statement: destination . assignment_statement_tail SEMICOLON

    ASSIGN_OP       shift, and go to state 211
    ADD_ASSIGN_OP   shift, and go to state 212
    SUB_ASSIGN_OP   shift, and go to state 213
    MULT_ASSIGN_OP  shift, and go to state 214
    DIV_ASSIGN_OP   shift, and go to state 215
    MOD_ASSIGN_OP   shift, and go to state 216

    assignment_statement_tail  go to state 217


state 196

   64 statement: if_statement .

    $default  reduce using rule 64 (statement)


state 197

   65 statement: switch_statement .

    $default  reduce using rule 65 (statement)


state 198

   66 statement: while_statement .

    $default  reduce using rule 66 (statement)


state 199

   67 statement: for_statement .

    $default  reduce using rule 67 (statement)


state 200

   68 statement: subprogram_call .

    $default  reduce using rule 68 (statement)


state 201

   79 destination: identifier . identifier_tail
   92 subprogram_call: identifier . OPEN_PARENTHESIS argument_list CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 218
    OPEN_BRACKETS     shift, and go to state 219

    $default  reduce using rule 81 (identifier_tail)

    identifier_tail  go to state 220


state 202

   56 function_declaration: FUNCTION type identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON . statement_list END_FUNCTION SEMICOLON

    RETURN     shift, and go to state 184
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 185
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 186
    FOR        shift, and go to state 187
    WHILE      shift, and go to state 188
    SWITCH     shift, and go to state 189

    $default  reduce using rule 62 (statement_list)

    variable_declaration          go to state 190
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 221
    statement                     go to state 192
    return_statement              go to state 193
    assignment_statement          go to state 194
    destination                   go to state 195
    if_statement                  go to state 196
    switch_statement              go to state 197
    while_statement               go to state 198
    for_statement                 go to state 199
    subprogram_call               go to state 200
    identifier                    go to state 201


state 203

   36 matrix_assignment_aux_aux: OPEN_BRACES expression . CLOSE_BRACES values_group_list

    CLOSE_BRACES  shift, and go to state 222


state 204

   71 return_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 223


state 205

   82 if_statement: IF OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF SEMICOLON

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    expression            go to state 224
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 206

   91 for_statement: FOR identifier . IN identifier COLON statement_list END_FOR SEMICOLON

    IN  shift, and go to state 225


state 207

   90 while_statement: WHILE OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS COLON statement_list END_WHILE SEMICOLON

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    expression            go to state 226
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 208

   85 switch_statement: SWITCH OPEN_PARENTHESIS . identifier CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH SEMICOLON

    STRING  shift, and go to state 33

    identifier  go to state 227


state 209

   55 procedure_declaration: PROCEDURE identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_PROCEDURE . SEMICOLON

    SEMICOLON  shift, and go to state 228


state 210

   61 statement_list: statement statement_list .

    $default  reduce using rule 61 (statement_list)


state 211

   73 assignment_statement_tail: ASSIGN_OP . expression

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    expression            go to state 229
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 212

   74 assignment_statement_tail: ADD_ASSIGN_OP . expression

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    expression            go to state 230
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 213

   75 assignment_statement_tail: SUB_ASSIGN_OP . expression

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    expression            go to state 231
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 214

   76 assignment_statement_tail: MULT_ASSIGN_OP . expression

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    expression            go to state 232
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 215

   77 assignment_statement_tail: DIV_ASSIGN_OP . expression

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    expression            go to state 233
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 216

   78 assignment_statement_tail: MOD_ASSIGN_OP . expression

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    expression            go to state 234
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 217

   72 assignment_statement: destination assignment_statement_tail . SEMICOLON

    SEMICOLON  shift, and go to state 235


state 218

   92 subprogram_call: identifier OPEN_PARENTHESIS . argument_list CLOSE_PARENTHESIS

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    $default  reduce using rule 94 (argument_list)

    argument_list         go to state 236
    argument_list_aux     go to state 237
    expression            go to state 238
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 219

   80 identifier_tail: OPEN_BRACKETS . dimensions CLOSE_BRACKETS

    NUMBER  shift, and go to state 67

    dimensions  go to state 239
    range       go to state 69


state 220

   79 destination: identifier identifier_tail .

    $default  reduce using rule 79 (destination)


state 221

   56 function_declaration: FUNCTION type identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list . END_FUNCTION SEMICOLON

    END_FUNCTION  shift, and go to state 240


state 222

   36 matrix_assignment_aux_aux: OPEN_BRACES expression CLOSE_BRACES . values_group_list

    COMMA  shift, and go to state 241

    COMMA     [reduce using rule 38 (values_group_list)]
    $default  reduce using rule 38 (values_group_list)

    values_group_list  go to state 242


state 223

   71 return_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 71 (return_statement)


state 224

   82 if_statement: IF OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 243


state 225

   91 for_statement: FOR identifier IN . identifier COLON statement_list END_FOR SEMICOLON

    STRING  shift, and go to state 33

    identifier  go to state 244


state 226

   90 while_statement: WHILE OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS COLON statement_list END_WHILE SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 245


state 227

   85 switch_statement: SWITCH OPEN_PARENTHESIS identifier . CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 246


state 228

   55 procedure_declaration: PROCEDURE identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_PROCEDURE SEMICOLON .

    $default  reduce using rule 55 (procedure_declaration)


state 229

   73 assignment_statement_tail: ASSIGN_OP expression .

    $default  reduce using rule 73 (assignment_statement_tail)


state 230

   74 assignment_statement_tail: ADD_ASSIGN_OP expression .

    $default  reduce using rule 74 (assignment_statement_tail)


state 231

   75 assignment_statement_tail: SUB_ASSIGN_OP expression .

    $default  reduce using rule 75 (assignment_statement_tail)


state 232

   76 assignment_statement_tail: MULT_ASSIGN_OP expression .

    $default  reduce using rule 76 (assignment_statement_tail)


state 233

   77 assignment_statement_tail: DIV_ASSIGN_OP expression .

    $default  reduce using rule 77 (assignment_statement_tail)


state 234

   78 assignment_statement_tail: MOD_ASSIGN_OP expression .

    $default  reduce using rule 78 (assignment_statement_tail)


state 235

   72 assignment_statement: destination assignment_statement_tail SEMICOLON .

    $default  reduce using rule 72 (assignment_statement)


state 236

   92 subprogram_call: identifier OPEN_PARENTHESIS argument_list . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 247


state 237

   93 argument_list: argument_list_aux .

    $default  reduce using rule 93 (argument_list)


state 238

   95 argument_list_aux: expression . argument_list_tail

    COMMA  shift, and go to state 248

    $default  reduce using rule 97 (argument_list_tail)

    argument_list_tail  go to state 249


state 239

   80 identifier_tail: OPEN_BRACKETS dimensions . CLOSE_BRACKETS

    CLOSE_BRACKETS  shift, and go to state 250


state 240

   56 function_declaration: FUNCTION type identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_FUNCTION . SEMICOLON

    SEMICOLON  shift, and go to state 251


state 241

   37 values_group_list: COMMA . matrix_assignment_aux_aux

    OPEN_BRACES  shift, and go to state 181

    matrix_assignment_aux_aux  go to state 252


state 242

   36 matrix_assignment_aux_aux: OPEN_BRACES expression CLOSE_BRACES values_group_list .

    $default  reduce using rule 36 (matrix_assignment_aux_aux)


state 243

   82 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . COLON statement_list else_clausule END_IF SEMICOLON

    COLON  shift, and go to state 253


state 244

   91 for_statement: FOR identifier IN identifier . COLON statement_list END_FOR SEMICOLON

    COLON  shift, and go to state 254


state 245

   90 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . COLON statement_list END_WHILE SEMICOLON

    COLON  shift, and go to state 255


state 246

   85 switch_statement: SWITCH OPEN_PARENTHESIS identifier CLOSE_PARENTHESIS . COLON case_clasule other_clasule END_SWITCH SEMICOLON

    COLON  shift, and go to state 256


state 247

   92 subprogram_call: identifier OPEN_PARENTHESIS argument_list CLOSE_PARENTHESIS .

    $default  reduce using rule 92 (subprogram_call)


state 248

   96 argument_list_tail: COMMA . argument_list_aux

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    argument_list_aux     go to state 257
    expression            go to state 238
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 249

   95 argument_list_aux: expression argument_list_tail .

    $default  reduce using rule 95 (argument_list_aux)


state 250

   80 identifier_tail: OPEN_BRACKETS dimensions CLOSE_BRACKETS .

    $default  reduce using rule 80 (identifier_tail)


state 251

   56 function_declaration: FUNCTION type identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_FUNCTION SEMICOLON .

    $default  reduce using rule 56 (function_declaration)


state 252

   37 values_group_list: COMMA matrix_assignment_aux_aux .

    $default  reduce using rule 37 (values_group_list)


state 253

   82 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON . statement_list else_clausule END_IF SEMICOLON

    RETURN     shift, and go to state 184
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 185
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 186
    FOR        shift, and go to state 187
    WHILE      shift, and go to state 188
    SWITCH     shift, and go to state 189

    $default  reduce using rule 62 (statement_list)

    variable_declaration          go to state 190
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 258
    statement                     go to state 192
    return_statement              go to state 193
    assignment_statement          go to state 194
    destination                   go to state 195
    if_statement                  go to state 196
    switch_statement              go to state 197
    while_statement               go to state 198
    for_statement                 go to state 199
    subprogram_call               go to state 200
    identifier                    go to state 201


state 254

   91 for_statement: FOR identifier IN identifier COLON . statement_list END_FOR SEMICOLON

    RETURN     shift, and go to state 184
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 185
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 186
    FOR        shift, and go to state 187
    WHILE      shift, and go to state 188
    SWITCH     shift, and go to state 189

    $default  reduce using rule 62 (statement_list)

    variable_declaration          go to state 190
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 259
    statement                     go to state 192
    return_statement              go to state 193
    assignment_statement          go to state 194
    destination                   go to state 195
    if_statement                  go to state 196
    switch_statement              go to state 197
    while_statement               go to state 198
    for_statement                 go to state 199
    subprogram_call               go to state 200
    identifier                    go to state 201


state 255

   90 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON . statement_list END_WHILE SEMICOLON

    RETURN     shift, and go to state 184
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 185
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 186
    FOR        shift, and go to state 187
    WHILE      shift, and go to state 188
    SWITCH     shift, and go to state 189

    $default  reduce using rule 62 (statement_list)

    variable_declaration          go to state 190
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 260
    statement                     go to state 192
    return_statement              go to state 193
    assignment_statement          go to state 194
    destination                   go to state 195
    if_statement                  go to state 196
    switch_statement              go to state 197
    while_statement               go to state 198
    for_statement                 go to state 199
    subprogram_call               go to state 200
    identifier                    go to state 201


state 256

   85 switch_statement: SWITCH OPEN_PARENTHESIS identifier CLOSE_PARENTHESIS COLON . case_clasule other_clasule END_SWITCH SEMICOLON

    CASE  shift, and go to state 261

    $default  reduce using rule 87 (case_clasule)

    case_clasule  go to state 262


state 257

   96 argument_list_tail: COMMA argument_list_aux .

    $default  reduce using rule 96 (argument_list_tail)


state 258

   82 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list . else_clausule END_IF SEMICOLON

    ELSE  shift, and go to state 263

    $default  reduce using rule 84 (else_clausule)

    else_clausule  go to state 264


state 259

   91 for_statement: FOR identifier IN identifier COLON statement_list . END_FOR SEMICOLON

    END_FOR  shift, and go to state 265


state 260

   90 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list . END_WHILE SEMICOLON

    END_WHILE  shift, and go to state 266


state 261

   86 case_clasule: CASE . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON case_clasule

    OPEN_PARENTHESIS  shift, and go to state 267


state 262

   85 switch_statement: SWITCH OPEN_PARENTHESIS identifier CLOSE_PARENTHESIS COLON case_clasule . other_clasule END_SWITCH SEMICOLON

    OTHER  shift, and go to state 268

    $default  reduce using rule 89 (other_clasule)

    other_clasule  go to state 269


state 263

   83 else_clausule: ELSE . statement_list

    RETURN     shift, and go to state 184
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 185
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 186
    FOR        shift, and go to state 187
    WHILE      shift, and go to state 188
    SWITCH     shift, and go to state 189

    $default  reduce using rule 62 (statement_list)

    variable_declaration          go to state 190
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 270
    statement                     go to state 192
    return_statement              go to state 193
    assignment_statement          go to state 194
    destination                   go to state 195
    if_statement                  go to state 196
    switch_statement              go to state 197
    while_statement               go to state 198
    for_statement                 go to state 199
    subprogram_call               go to state 200
    identifier                    go to state 201


state 264

   82 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list else_clausule . END_IF SEMICOLON

    END_IF  shift, and go to state 271


state 265

   91 for_statement: FOR identifier IN identifier COLON statement_list END_FOR . SEMICOLON

    SEMICOLON  shift, and go to state 272


state 266

   90 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list END_WHILE . SEMICOLON

    SEMICOLON  shift, and go to state 273


state 267

   86 case_clasule: CASE OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON case_clasule

    NUMBER            shift, and go to state 72
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 73

    expression            go to state 274
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81
    negation              go to state 82
    function_call         go to state 83
    identifier            go to state 84


state 268

   88 other_clasule: OTHER . COLON statement_list

    COLON  shift, and go to state 275


state 269

   85 switch_statement: SWITCH OPEN_PARENTHESIS identifier CLOSE_PARENTHESIS COLON case_clasule other_clasule . END_SWITCH SEMICOLON

    END_SWITCH  shift, and go to state 276


state 270

   83 else_clausule: ELSE statement_list .

    $default  reduce using rule 83 (else_clausule)


state 271

   82 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF . SEMICOLON

    SEMICOLON  shift, and go to state 277


state 272

   91 for_statement: FOR identifier IN identifier COLON statement_list END_FOR SEMICOLON .

    $default  reduce using rule 91 (for_statement)


state 273

   90 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list END_WHILE SEMICOLON .

    $default  reduce using rule 90 (while_statement)


state 274

   86 case_clasule: CASE OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON case_clasule

    CLOSE_PARENTHESIS  shift, and go to state 278


state 275

   88 other_clasule: OTHER COLON . statement_list

    RETURN     shift, and go to state 184
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 185
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 186
    FOR        shift, and go to state 187
    WHILE      shift, and go to state 188
    SWITCH     shift, and go to state 189

    $default  reduce using rule 62 (statement_list)

    variable_declaration          go to state 190
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 279
    statement                     go to state 192
    return_statement              go to state 193
    assignment_statement          go to state 194
    destination                   go to state 195
    if_statement                  go to state 196
    switch_statement              go to state 197
    while_statement               go to state 198
    for_statement                 go to state 199
    subprogram_call               go to state 200
    identifier                    go to state 201


state 276

   85 switch_statement: SWITCH OPEN_PARENTHESIS identifier CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH . SEMICOLON

    SEMICOLON  shift, and go to state 280


state 277

   82 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF SEMICOLON .

    $default  reduce using rule 82 (if_statement)


state 278

   86 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . COLON statement_list BREAK SEMICOLON case_clasule

    COLON  shift, and go to state 281


state 279

   88 other_clasule: OTHER COLON statement_list .

    $default  reduce using rule 88 (other_clasule)


state 280

   85 switch_statement: SWITCH OPEN_PARENTHESIS identifier CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH SEMICOLON .

    $default  reduce using rule 85 (switch_statement)


state 281

   86 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON . statement_list BREAK SEMICOLON case_clasule

    RETURN     shift, and go to state 184
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 185
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 186
    FOR        shift, and go to state 187
    WHILE      shift, and go to state 188
    SWITCH     shift, and go to state 189

    $default  reduce using rule 62 (statement_list)

    variable_declaration          go to state 190
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 282
    statement                     go to state 192
    return_statement              go to state 193
    assignment_statement          go to state 194
    destination                   go to state 195
    if_statement                  go to state 196
    switch_statement              go to state 197
    while_statement               go to state 198
    for_statement                 go to state 199
    subprogram_call               go to state 200
    identifier                    go to state 201


state 282

   86 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list . BREAK SEMICOLON case_clasule

    BREAK  shift, and go to state 283


state 283

   86 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list BREAK . SEMICOLON case_clasule

    SEMICOLON  shift, and go to state 284


state 284

   86 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON . case_clasule

    CASE  shift, and go to state 261

    $default  reduce using rule 87 (case_clasule)

    case_clasule  go to state 285


state 285

   86 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON case_clasule .

    $default  reduce using rule 86 (case_clasule)
