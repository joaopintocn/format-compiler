Terminals which are not used

   NAME
   COMPLEX_NUMBER
   REAL_NUMBER
   INT_NUMBER
   STRING_TYPE
   INCREMENT_OP
   DECREMENT_OP
   DOT_OP
   COMMENT


State 167 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_header program_body

    2 program_header: import program_header
    3               | /* empty */

    4 import: IMPORT STRING

    5 program_body: variable_section subprogram_section

    6 @1: /* empty */

    7 variable_section: VARIABLES_SECTION COLON @1 variable_declarations
    8                 | /* empty */

    9 variable_declarations: variable_declaration SEMICOLON variable_declarations_tail

   10 variable_declaration: simple_variable_declaration
   11                     | compost_variable_declaration

   12 variable_declarations_tail: variable_declarations
   13                           | /* empty */

   14 @2: /* empty */

   15 subprogram_section: SUBPROGRAMS_SECTION @2 COLON subprogram_declarations
   16                   | /* empty */

   17 subprogram_declarations: subprogram_declaration subprogram_declarations_tail

   18 subprogram_declarations_tail: subprogram_declarations
   19                             | /* empty */

   20 @3: /* empty */

   21 simple_variable_declaration: type IDENTIFIER @3 simple_variable_declaration_value
   22                            | CONST type IDENTIFIER ASSIGN_OP expression
   23                            | REF type IDENTIFIER simple_variable_declaration_value

   24 @4: /* empty */

   25 simple_variable_declaration_value: ASSIGN_OP @4 expression
   26                                  | /* empty */

   27 type: INT
   28     | DOUBLE REAL
   29     | REAL
   30     | COMPLEX
   31     | BOOLEAN
   32     | STRING

   33 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS dimensions CLOSE_BRACKETS IDENTIFIER matrix_assignment
   34                             | SET_OF type IDENTIFIER set_assignment
   35                             | ENUM IDENTIFIER COLON IDENTIFIER identifier_list END_ENUM
   36                             | STRUCT IDENTIFIER COLON variable_declarations END_STRUCT

   37 matrix_assignment: matrix_assignment_aux
   38                  | /* empty */

   39 matrix_assignment_aux: ASSIGN_OP matrix_assignment_aux_aux

   40 matrix_assignment_aux_aux: OPEN_BRACES expression CLOSE_BRACES values_group_list

   41 values_group_list: values_group_list_aux
   42                  | /* empty */

   43 values_group_list_aux: COMMA matrix_assignment_aux_aux

   44 set_assignment: set_assignment_aux
   45               | /* empty */

   46 set_assignment_aux: ASSIGN_OP OPEN_BRACES set_assignment_aux_aux CLOSE_BRACES

   47 set_assignment_aux_aux: expression values_list

   48 values_list: COMMA set_assignment_aux_aux
   49            | /* empty */

   50 identifier_list: COMMA IDENTIFIER identifier_list
   51                | /* empty */

   52 dimensions: range dimensions_tail

   53 range: NUMBER range_tail

   54 range_tail: RANGE NUMBER
   55           | /* empty */

   56 dimensions_tail: COMMA range dimensions_tail
   57                | /* empty */

   58 subprogram_declaration: procedure_declaration
   59                       | function_declaration

   60 @5: /* empty */

   61 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON @5 statement_list END_PROCEDURE SEMICOLON

   62 @6: /* empty */

   63 function_declaration: FUNCTION type IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON @6 statement_list END_FUNCTION SEMICOLON

   64 parameter_list: variable_declaration parameter_list_tail
   65               | /* empty */

   66 parameter_list_tail: COMMA variable_declaration parameter_list_tail
   67                    | /* empty */

   68 statement_list: statement statement_list
   69               | /* empty */

   70 statement: assignment_statement
   71          | if_statement
   72          | switch_statement
   73          | while_statement
   74          | for_statement
   75          | subprogram_call
   76          | return_statement
   77          | variable_declaration

   78 return_statement: RETURN expression SEMICOLON

   79 assignment_statement: destination assignment_statement_tail SEMICOLON

   80 assignment_statement_tail: ASSIGN_OP expression
   81                          | ADD_ASSIGN_OP expression
   82                          | SUB_ASSIGN_OP expression
   83                          | MULT_ASSIGN_OP expression
   84                          | DIV_ASSIGN_OP expression
   85                          | MOD_ASSIGN_OP expression

   86 destination: IDENTIFIER identifier_tail

   87 identifier_tail: OPEN_BRACKETS dimensions CLOSE_BRACKETS
   88                | /* empty */

   89 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF SEMICOLON

   90 else_clausule: ELSE statement_list
   91              | /* empty */

   92 switch_statement: SWITCH OPEN_PARENTHESIS IDENTIFIER CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH SEMICOLON

   93 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON case_clasule
   94             | /* empty */

   95 other_clasule: OTHER COLON statement_list
   96              | /* empty */

   97 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list END_WHILE SEMICOLON

   98 for_statement: FOR IDENTIFIER IN IDENTIFIER COLON statement_list END_FOR SEMICOLON

   99 subprogram_call: IDENTIFIER OPEN_PARENTHESIS argument_list CLOSE_PARENTHESIS

  100 argument_list: argument_list_aux
  101              | /* empty */

  102 argument_list_aux: expression argument_list_tail

  103 argument_list_tail: COMMA argument_list_aux
  104                   | /* empty */

  105 @7: /* empty */

  106 expression: term_or @7 term_or_tail

  107 term_or_tail: OR_OP term_or term_or_tail
  108             | /* empty */

  109 @8: /* empty */

  110 term_or: @8 term_and term_and_tail

  111 term_and_tail: AND_OP term_and term_and_tail
  112              | /* empty */

  113 @9: /* empty */

  114 term_and: @9 term_bool_comparison term_bool_comparison_tail

  115 term_bool_comparison_tail: EQ_OP term_bool_comparison term_bool_comparison_tail
  116                          | NEQ_OP term_bool_comparison term_bool_comparison_tail
  117                          | /* empty */

  118 @10: /* empty */

  119 term_bool_comparison: @10 term_arit_comparison term_arit_comparison_tail

  120 term_arit_comparison_tail: LEQ_OP term_arit_comparison term_arit_comparison_tail
  121                          | BEQ_OP term_arit_comparison term_arit_comparison_tail
  122                          | LT_OP term_arit_comparison term_arit_comparison_tail
  123                          | BT_OP term_arit_comparison term_arit_comparison_tail
  124                          | /* empty */

  125 @11: /* empty */

  126 term_arit_comparison: @11 term term_tail

  127 term_tail: ADD_OP term term_tail
  128          | SUB_OP term term_tail
  129          | /* empty */

  130 @12: /* empty */

  131 term: @12 factor factor_tail

  132 factor_tail: MULT_OP factor factor_tail
  133            | DIV_OP factor factor_tail
  134            | MOD_OP factor factor_tail
  135            | /* empty */

  136 @13: /* empty */

  137 factor: @13 expo expo_tail

  138 expo_tail: EXPO_OP expo expo_tail
  139          | /* empty */

  140 @14: /* empty */

  141 expo: @14 negation negation_tail

  142 negation_tail: NEG_OP negation negation_tail
  143              | /* empty */

  144 negation: function_call
  145         | IDENTIFIER
  146         | NUMBER
  147         | OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

  148 function_call: IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS


Terminals, with rules where they appear

$end (0) 0
error (256)
NAME (258)
IDENTIFIER (259) 21 22 23 33 34 35 36 50 61 63 86 92 98 99 145 148
STRING (260) 4 32
NUMBER (261) 53 54 146
COMPLEX_NUMBER (262)
REAL_NUMBER (263)
INT_NUMBER (264)
IMPORT (265) 4
VARIABLES_SECTION (266) 7
SUBPROGRAMS_SECTION (267) 15
PROCEDURE (268) 61
FUNCTION (269) 63
END_PROCEDURE (270) 61
END_FUNCTION (271) 63
RETURN (272) 78
INT (273) 27
REAL (274) 28 29
COMPLEX (275) 30
STRING_TYPE (276)
DOUBLE (277) 28
BOOLEAN (278) 31
ENUM (279) 35
STRUCT (280) 36
SET_OF (281) 34
MATRIX_OF (282) 33
END_STRUCT (283) 36
END_ENUM (284) 35
CONST (285) 22
REF (286) 23
IF (287) 89
ELSE (288) 90
FOR (289) 98
IN (290) 98
WHILE (291) 97
SWITCH (292) 92
CASE (293) 93
BREAK (294) 93
OTHER (295) 95
END_IF (296) 89
END_FOR (297) 98
END_WHILE (298) 97
END_SWITCH (299) 92
SEMICOLON (300) 9 61 63 78 79 89 92 93 97 98
COMMA (301) 43 48 50 56 66 103
COLON (302) 7 15 35 36 61 63 89 92 93 95 97 98
OPEN_PARENTHESIS (303) 61 63 89 92 93 97 99 147 148
CLOSE_PARENTHESIS (304) 61 63 89 92 93 97 99 147 148
OPEN_BRACKETS (305) 33 87
CLOSE_BRACKETS (306) 33 87
OPEN_BRACES (307) 40 46
CLOSE_BRACES (308) 40 46
RANGE (309) 54
ASSIGN_OP (310) 22 25 39 46 80
ADD_ASSIGN_OP (311) 81
SUB_ASSIGN_OP (312) 82
MULT_ASSIGN_OP (313) 83
DIV_ASSIGN_OP (314) 84
MOD_ASSIGN_OP (315) 85
INCREMENT_OP (316)
DECREMENT_OP (317)
NEG_OP (318) 142
AND_OP (319) 111
OR_OP (320) 107
LEQ_OP (321) 120
BEQ_OP (322) 121
EQ_OP (323) 115
NEQ_OP (324) 116
SUB_OP (325) 128
ADD_OP (326) 127
MULT_OP (327) 132
DIV_OP (328) 133
MOD_OP (329) 134
LT_OP (330) 122
BT_OP (331) 123
EXPO_OP (332) 138
DOT_OP (333)
COMMENT (334)


Nonterminals, with rules where they appear

$accept (80)
    on left: 0
program (81)
    on left: 1, on right: 0
program_header (82)
    on left: 2 3, on right: 1 2
import (83)
    on left: 4, on right: 2
program_body (84)
    on left: 5, on right: 1
variable_section (85)
    on left: 7 8, on right: 5
@1 (86)
    on left: 6, on right: 7
variable_declarations (87)
    on left: 9, on right: 7 12 36
variable_declaration (88)
    on left: 10 11, on right: 9 64 66 77
variable_declarations_tail (89)
    on left: 12 13, on right: 9
subprogram_section (90)
    on left: 15 16, on right: 5
@2 (91)
    on left: 14, on right: 15
subprogram_declarations (92)
    on left: 17, on right: 15 18
subprogram_declarations_tail (93)
    on left: 18 19, on right: 17
simple_variable_declaration (94)
    on left: 21 22 23, on right: 10
@3 (95)
    on left: 20, on right: 21
simple_variable_declaration_value (96)
    on left: 25 26, on right: 21 23
@4 (97)
    on left: 24, on right: 25
type (98)
    on left: 27 28 29 30 31 32, on right: 21 22 23 33 34 63
compost_variable_declaration (99)
    on left: 33 34 35 36, on right: 11
matrix_assignment (100)
    on left: 37 38, on right: 33
matrix_assignment_aux (101)
    on left: 39, on right: 37
matrix_assignment_aux_aux (102)
    on left: 40, on right: 39 43
values_group_list (103)
    on left: 41 42, on right: 40
values_group_list_aux (104)
    on left: 43, on right: 41
set_assignment (105)
    on left: 44 45, on right: 34
set_assignment_aux (106)
    on left: 46, on right: 44
set_assignment_aux_aux (107)
    on left: 47, on right: 46 48
values_list (108)
    on left: 48 49, on right: 47
identifier_list (109)
    on left: 50 51, on right: 35 50
dimensions (110)
    on left: 52, on right: 33 87
range (111)
    on left: 53, on right: 52 56
range_tail (112)
    on left: 54 55, on right: 53
dimensions_tail (113)
    on left: 56 57, on right: 52 56
subprogram_declaration (114)
    on left: 58 59, on right: 17
procedure_declaration (115)
    on left: 61, on right: 58
@5 (116)
    on left: 60, on right: 61
function_declaration (117)
    on left: 63, on right: 59
@6 (118)
    on left: 62, on right: 63
parameter_list (119)
    on left: 64 65, on right: 61 63 148
parameter_list_tail (120)
    on left: 66 67, on right: 64 66
statement_list (121)
    on left: 68 69, on right: 61 63 68 89 90 93 95 97 98
statement (122)
    on left: 70 71 72 73 74 75 76 77, on right: 68
return_statement (123)
    on left: 78, on right: 76
assignment_statement (124)
    on left: 79, on right: 70
assignment_statement_tail (125)
    on left: 80 81 82 83 84 85, on right: 79
destination (126)
    on left: 86, on right: 79
identifier_tail (127)
    on left: 87 88, on right: 86
if_statement (128)
    on left: 89, on right: 71
else_clausule (129)
    on left: 90 91, on right: 89
switch_statement (130)
    on left: 92, on right: 72
case_clasule (131)
    on left: 93 94, on right: 92 93
other_clasule (132)
    on left: 95 96, on right: 92
while_statement (133)
    on left: 97, on right: 73
for_statement (134)
    on left: 98, on right: 74
subprogram_call (135)
    on left: 99, on right: 75
argument_list (136)
    on left: 100 101, on right: 99
argument_list_aux (137)
    on left: 102, on right: 100 103
argument_list_tail (138)
    on left: 103 104, on right: 102
expression (139)
    on left: 106, on right: 22 25 40 47 78 80 81 82 83 84 85 89 93
    97 102 147
@7 (140)
    on left: 105, on right: 106
term_or_tail (141)
    on left: 107 108, on right: 106 107
term_or (142)
    on left: 110, on right: 106 107
@8 (143)
    on left: 109, on right: 110
term_and_tail (144)
    on left: 111 112, on right: 110 111
term_and (145)
    on left: 114, on right: 110 111
@9 (146)
    on left: 113, on right: 114
term_bool_comparison_tail (147)
    on left: 115 116 117, on right: 114 115 116
term_bool_comparison (148)
    on left: 119, on right: 114 115 116
@10 (149)
    on left: 118, on right: 119
term_arit_comparison_tail (150)
    on left: 120 121 122 123 124, on right: 119 120 121 122 123
term_arit_comparison (151)
    on left: 126, on right: 119 120 121 122 123
@11 (152)
    on left: 125, on right: 126
term_tail (153)
    on left: 127 128 129, on right: 126 127 128
term (154)
    on left: 131, on right: 126 127 128
@12 (155)
    on left: 130, on right: 131
factor_tail (156)
    on left: 132 133 134 135, on right: 131 132 133 134
factor (157)
    on left: 137, on right: 131 132 133 134
@13 (158)
    on left: 136, on right: 137
expo_tail (159)
    on left: 138 139, on right: 137 138
expo (160)
    on left: 141, on right: 137 138
@14 (161)
    on left: 140, on right: 141
negation_tail (162)
    on left: 142 143, on right: 141 142
negation (163)
    on left: 144 145 146 147, on right: 141 142
function_call (164)
    on left: 148, on right: 144


state 0

    0 $accept: . program $end

    IMPORT  shift, and go to state 1

    $default  reduce using rule 3 (program_header)

    program         go to state 2
    program_header  go to state 3
    import          go to state 4


state 1

    4 import: IMPORT . STRING

    STRING  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: program_header . program_body

    VARIABLES_SECTION  shift, and go to state 7

    $default  reduce using rule 8 (variable_section)

    program_body      go to state 8
    variable_section  go to state 9


state 4

    2 program_header: import . program_header

    IMPORT  shift, and go to state 1

    $default  reduce using rule 3 (program_header)

    program_header  go to state 10
    import          go to state 4


state 5

    4 import: IMPORT STRING .

    $default  reduce using rule 4 (import)


state 6

    0 $accept: program $end .

    $default  accept


state 7

    7 variable_section: VARIABLES_SECTION . COLON @1 variable_declarations

    COLON  shift, and go to state 11


state 8

    1 program: program_header program_body .

    $default  reduce using rule 1 (program)


state 9

    5 program_body: variable_section . subprogram_section

    SUBPROGRAMS_SECTION  shift, and go to state 12

    $default  reduce using rule 16 (subprogram_section)

    subprogram_section  go to state 13


state 10

    2 program_header: import program_header .

    $default  reduce using rule 2 (program_header)


state 11

    7 variable_section: VARIABLES_SECTION COLON . @1 variable_declarations

    $default  reduce using rule 6 (@1)

    @1  go to state 14


state 12

   15 subprogram_section: SUBPROGRAMS_SECTION . @2 COLON subprogram_declarations

    $default  reduce using rule 14 (@2)

    @2  go to state 15


state 13

    5 program_body: variable_section subprogram_section .

    $default  reduce using rule 5 (program_body)


state 14

    7 variable_section: VARIABLES_SECTION COLON @1 . variable_declarations

    STRING     shift, and go to state 16
    INT        shift, and go to state 17
    REAL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOLEAN    shift, and go to state 21
    ENUM       shift, and go to state 22
    STRUCT     shift, and go to state 23
    SET_OF     shift, and go to state 24
    MATRIX_OF  shift, and go to state 25
    CONST      shift, and go to state 26
    REF        shift, and go to state 27

    variable_declarations         go to state 28
    variable_declaration          go to state 29
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32


state 15

   15 subprogram_section: SUBPROGRAMS_SECTION @2 . COLON subprogram_declarations

    COLON  shift, and go to state 33


state 16

   32 type: STRING .

    $default  reduce using rule 32 (type)


state 17

   27 type: INT .

    $default  reduce using rule 27 (type)


state 18

   29 type: REAL .

    $default  reduce using rule 29 (type)


state 19

   30 type: COMPLEX .

    $default  reduce using rule 30 (type)


state 20

   28 type: DOUBLE . REAL

    REAL  shift, and go to state 34


state 21

   31 type: BOOLEAN .

    $default  reduce using rule 31 (type)


state 22

   35 compost_variable_declaration: ENUM . IDENTIFIER COLON IDENTIFIER identifier_list END_ENUM

    IDENTIFIER  shift, and go to state 35


state 23

   36 compost_variable_declaration: STRUCT . IDENTIFIER COLON variable_declarations END_STRUCT

    IDENTIFIER  shift, and go to state 36


state 24

   34 compost_variable_declaration: SET_OF . type IDENTIFIER set_assignment

    STRING   shift, and go to state 16
    INT      shift, and go to state 17
    REAL     shift, and go to state 18
    COMPLEX  shift, and go to state 19
    DOUBLE   shift, and go to state 20
    BOOLEAN  shift, and go to state 21

    type  go to state 37


state 25

   33 compost_variable_declaration: MATRIX_OF . type OPEN_BRACKETS dimensions CLOSE_BRACKETS IDENTIFIER matrix_assignment

    STRING   shift, and go to state 16
    INT      shift, and go to state 17
    REAL     shift, and go to state 18
    COMPLEX  shift, and go to state 19
    DOUBLE   shift, and go to state 20
    BOOLEAN  shift, and go to state 21

    type  go to state 38


state 26

   22 simple_variable_declaration: CONST . type IDENTIFIER ASSIGN_OP expression

    STRING   shift, and go to state 16
    INT      shift, and go to state 17
    REAL     shift, and go to state 18
    COMPLEX  shift, and go to state 19
    DOUBLE   shift, and go to state 20
    BOOLEAN  shift, and go to state 21

    type  go to state 39


state 27

   23 simple_variable_declaration: REF . type IDENTIFIER simple_variable_declaration_value

    STRING   shift, and go to state 16
    INT      shift, and go to state 17
    REAL     shift, and go to state 18
    COMPLEX  shift, and go to state 19
    DOUBLE   shift, and go to state 20
    BOOLEAN  shift, and go to state 21

    type  go to state 40


state 28

    7 variable_section: VARIABLES_SECTION COLON @1 variable_declarations .

    $default  reduce using rule 7 (variable_section)


state 29

    9 variable_declarations: variable_declaration . SEMICOLON variable_declarations_tail

    SEMICOLON  shift, and go to state 41


state 30

   10 variable_declaration: simple_variable_declaration .

    $default  reduce using rule 10 (variable_declaration)


state 31

   21 simple_variable_declaration: type . IDENTIFIER @3 simple_variable_declaration_value

    IDENTIFIER  shift, and go to state 42


state 32

   11 variable_declaration: compost_variable_declaration .

    $default  reduce using rule 11 (variable_declaration)


state 33

   15 subprogram_section: SUBPROGRAMS_SECTION @2 COLON . subprogram_declarations

    PROCEDURE  shift, and go to state 43
    FUNCTION   shift, and go to state 44

    subprogram_declarations  go to state 45
    subprogram_declaration   go to state 46
    procedure_declaration    go to state 47
    function_declaration     go to state 48


state 34

   28 type: DOUBLE REAL .

    $default  reduce using rule 28 (type)


state 35

   35 compost_variable_declaration: ENUM IDENTIFIER . COLON IDENTIFIER identifier_list END_ENUM

    COLON  shift, and go to state 49


state 36

   36 compost_variable_declaration: STRUCT IDENTIFIER . COLON variable_declarations END_STRUCT

    COLON  shift, and go to state 50


state 37

   34 compost_variable_declaration: SET_OF type . IDENTIFIER set_assignment

    IDENTIFIER  shift, and go to state 51


state 38

   33 compost_variable_declaration: MATRIX_OF type . OPEN_BRACKETS dimensions CLOSE_BRACKETS IDENTIFIER matrix_assignment

    OPEN_BRACKETS  shift, and go to state 52


state 39

   22 simple_variable_declaration: CONST type . IDENTIFIER ASSIGN_OP expression

    IDENTIFIER  shift, and go to state 53


state 40

   23 simple_variable_declaration: REF type . IDENTIFIER simple_variable_declaration_value

    IDENTIFIER  shift, and go to state 54


state 41

    9 variable_declarations: variable_declaration SEMICOLON . variable_declarations_tail

    STRING     shift, and go to state 16
    INT        shift, and go to state 17
    REAL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOLEAN    shift, and go to state 21
    ENUM       shift, and go to state 22
    STRUCT     shift, and go to state 23
    SET_OF     shift, and go to state 24
    MATRIX_OF  shift, and go to state 25
    CONST      shift, and go to state 26
    REF        shift, and go to state 27

    $default  reduce using rule 13 (variable_declarations_tail)

    variable_declarations         go to state 55
    variable_declaration          go to state 29
    variable_declarations_tail    go to state 56
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32


state 42

   21 simple_variable_declaration: type IDENTIFIER . @3 simple_variable_declaration_value

    $default  reduce using rule 20 (@3)

    @3  go to state 57


state 43

   61 procedure_declaration: PROCEDURE . IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON @5 statement_list END_PROCEDURE SEMICOLON

    IDENTIFIER  shift, and go to state 58


state 44

   63 function_declaration: FUNCTION . type IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON @6 statement_list END_FUNCTION SEMICOLON

    STRING   shift, and go to state 16
    INT      shift, and go to state 17
    REAL     shift, and go to state 18
    COMPLEX  shift, and go to state 19
    DOUBLE   shift, and go to state 20
    BOOLEAN  shift, and go to state 21

    type  go to state 59


state 45

   15 subprogram_section: SUBPROGRAMS_SECTION @2 COLON subprogram_declarations .

    $default  reduce using rule 15 (subprogram_section)


state 46

   17 subprogram_declarations: subprogram_declaration . subprogram_declarations_tail

    PROCEDURE  shift, and go to state 43
    FUNCTION   shift, and go to state 44

    $default  reduce using rule 19 (subprogram_declarations_tail)

    subprogram_declarations       go to state 60
    subprogram_declarations_tail  go to state 61
    subprogram_declaration        go to state 46
    procedure_declaration         go to state 47
    function_declaration          go to state 48


state 47

   58 subprogram_declaration: procedure_declaration .

    $default  reduce using rule 58 (subprogram_declaration)


state 48

   59 subprogram_declaration: function_declaration .

    $default  reduce using rule 59 (subprogram_declaration)


state 49

   35 compost_variable_declaration: ENUM IDENTIFIER COLON . IDENTIFIER identifier_list END_ENUM

    IDENTIFIER  shift, and go to state 62


state 50

   36 compost_variable_declaration: STRUCT IDENTIFIER COLON . variable_declarations END_STRUCT

    STRING     shift, and go to state 16
    INT        shift, and go to state 17
    REAL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOLEAN    shift, and go to state 21
    ENUM       shift, and go to state 22
    STRUCT     shift, and go to state 23
    SET_OF     shift, and go to state 24
    MATRIX_OF  shift, and go to state 25
    CONST      shift, and go to state 26
    REF        shift, and go to state 27

    variable_declarations         go to state 63
    variable_declaration          go to state 29
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32


state 51

   34 compost_variable_declaration: SET_OF type IDENTIFIER . set_assignment

    ASSIGN_OP  shift, and go to state 64

    $default  reduce using rule 45 (set_assignment)

    set_assignment      go to state 65
    set_assignment_aux  go to state 66


state 52

   33 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS . dimensions CLOSE_BRACKETS IDENTIFIER matrix_assignment

    NUMBER  shift, and go to state 67

    dimensions  go to state 68
    range       go to state 69


state 53

   22 simple_variable_declaration: CONST type IDENTIFIER . ASSIGN_OP expression

    ASSIGN_OP  shift, and go to state 70


state 54

   23 simple_variable_declaration: REF type IDENTIFIER . simple_variable_declaration_value

    ASSIGN_OP  shift, and go to state 71

    $default  reduce using rule 26 (simple_variable_declaration_value)

    simple_variable_declaration_value  go to state 72


state 55

   12 variable_declarations_tail: variable_declarations .

    $default  reduce using rule 12 (variable_declarations_tail)


state 56

    9 variable_declarations: variable_declaration SEMICOLON variable_declarations_tail .

    $default  reduce using rule 9 (variable_declarations)


state 57

   21 simple_variable_declaration: type IDENTIFIER @3 . simple_variable_declaration_value

    ASSIGN_OP  shift, and go to state 71

    $default  reduce using rule 26 (simple_variable_declaration_value)

    simple_variable_declaration_value  go to state 73


state 58

   61 procedure_declaration: PROCEDURE IDENTIFIER . OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON @5 statement_list END_PROCEDURE SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 74


state 59

   63 function_declaration: FUNCTION type . IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON @6 statement_list END_FUNCTION SEMICOLON

    IDENTIFIER  shift, and go to state 75


state 60

   18 subprogram_declarations_tail: subprogram_declarations .

    $default  reduce using rule 18 (subprogram_declarations_tail)


state 61

   17 subprogram_declarations: subprogram_declaration subprogram_declarations_tail .

    $default  reduce using rule 17 (subprogram_declarations)


state 62

   35 compost_variable_declaration: ENUM IDENTIFIER COLON IDENTIFIER . identifier_list END_ENUM

    COMMA  shift, and go to state 76

    $default  reduce using rule 51 (identifier_list)

    identifier_list  go to state 77


state 63

   36 compost_variable_declaration: STRUCT IDENTIFIER COLON variable_declarations . END_STRUCT

    END_STRUCT  shift, and go to state 78


state 64

   46 set_assignment_aux: ASSIGN_OP . OPEN_BRACES set_assignment_aux_aux CLOSE_BRACES

    OPEN_BRACES  shift, and go to state 79


state 65

   34 compost_variable_declaration: SET_OF type IDENTIFIER set_assignment .

    $default  reduce using rule 34 (compost_variable_declaration)


state 66

   44 set_assignment: set_assignment_aux .

    $default  reduce using rule 44 (set_assignment)


state 67

   53 range: NUMBER . range_tail

    RANGE  shift, and go to state 80

    $default  reduce using rule 55 (range_tail)

    range_tail  go to state 81


state 68

   33 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS dimensions . CLOSE_BRACKETS IDENTIFIER matrix_assignment

    CLOSE_BRACKETS  shift, and go to state 82


state 69

   52 dimensions: range . dimensions_tail

    COMMA  shift, and go to state 83

    $default  reduce using rule 57 (dimensions_tail)

    dimensions_tail  go to state 84


state 70

   22 simple_variable_declaration: CONST type IDENTIFIER ASSIGN_OP . expression

    $default  reduce using rule 109 (@8)

    expression  go to state 85
    term_or     go to state 86
    @8          go to state 87


state 71

   25 simple_variable_declaration_value: ASSIGN_OP . @4 expression

    $default  reduce using rule 24 (@4)

    @4  go to state 88


state 72

   23 simple_variable_declaration: REF type IDENTIFIER simple_variable_declaration_value .

    $default  reduce using rule 23 (simple_variable_declaration)


state 73

   21 simple_variable_declaration: type IDENTIFIER @3 simple_variable_declaration_value .

    $default  reduce using rule 21 (simple_variable_declaration)


state 74

   61 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS . parameter_list CLOSE_PARENTHESIS COLON @5 statement_list END_PROCEDURE SEMICOLON

    STRING     shift, and go to state 16
    INT        shift, and go to state 17
    REAL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOLEAN    shift, and go to state 21
    ENUM       shift, and go to state 22
    STRUCT     shift, and go to state 23
    SET_OF     shift, and go to state 24
    MATRIX_OF  shift, and go to state 25
    CONST      shift, and go to state 26
    REF        shift, and go to state 27

    $default  reduce using rule 65 (parameter_list)

    variable_declaration          go to state 89
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    parameter_list                go to state 90


state 75

   63 function_declaration: FUNCTION type IDENTIFIER . OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON @6 statement_list END_FUNCTION SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 91


state 76

   50 identifier_list: COMMA . IDENTIFIER identifier_list

    IDENTIFIER  shift, and go to state 92


state 77

   35 compost_variable_declaration: ENUM IDENTIFIER COLON IDENTIFIER identifier_list . END_ENUM

    END_ENUM  shift, and go to state 93


state 78

   36 compost_variable_declaration: STRUCT IDENTIFIER COLON variable_declarations END_STRUCT .

    $default  reduce using rule 36 (compost_variable_declaration)


state 79

   46 set_assignment_aux: ASSIGN_OP OPEN_BRACES . set_assignment_aux_aux CLOSE_BRACES

    $default  reduce using rule 109 (@8)

    set_assignment_aux_aux  go to state 94
    expression              go to state 95
    term_or                 go to state 86
    @8                      go to state 87


state 80

   54 range_tail: RANGE . NUMBER

    NUMBER  shift, and go to state 96


state 81

   53 range: NUMBER range_tail .

    $default  reduce using rule 53 (range)


state 82

   33 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS dimensions CLOSE_BRACKETS . IDENTIFIER matrix_assignment

    IDENTIFIER  shift, and go to state 97


state 83

   56 dimensions_tail: COMMA . range dimensions_tail

    NUMBER  shift, and go to state 67

    range  go to state 98


state 84

   52 dimensions: range dimensions_tail .

    $default  reduce using rule 52 (dimensions)


state 85

   22 simple_variable_declaration: CONST type IDENTIFIER ASSIGN_OP expression .

    $default  reduce using rule 22 (simple_variable_declaration)


state 86

  106 expression: term_or . @7 term_or_tail

    $default  reduce using rule 105 (@7)

    @7  go to state 99


state 87

  110 term_or: @8 . term_and term_and_tail

    $default  reduce using rule 113 (@9)

    term_and  go to state 100
    @9        go to state 101


state 88

   25 simple_variable_declaration_value: ASSIGN_OP @4 . expression

    $default  reduce using rule 109 (@8)

    expression  go to state 102
    term_or     go to state 86
    @8          go to state 87


state 89

   64 parameter_list: variable_declaration . parameter_list_tail

    COMMA  shift, and go to state 103

    $default  reduce using rule 67 (parameter_list_tail)

    parameter_list_tail  go to state 104


state 90

   61 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS parameter_list . CLOSE_PARENTHESIS COLON @5 statement_list END_PROCEDURE SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 105


state 91

   63 function_declaration: FUNCTION type IDENTIFIER OPEN_PARENTHESIS . parameter_list CLOSE_PARENTHESIS COLON @6 statement_list END_FUNCTION SEMICOLON

    STRING     shift, and go to state 16
    INT        shift, and go to state 17
    REAL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOLEAN    shift, and go to state 21
    ENUM       shift, and go to state 22
    STRUCT     shift, and go to state 23
    SET_OF     shift, and go to state 24
    MATRIX_OF  shift, and go to state 25
    CONST      shift, and go to state 26
    REF        shift, and go to state 27

    $default  reduce using rule 65 (parameter_list)

    variable_declaration          go to state 89
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    parameter_list                go to state 106


state 92

   50 identifier_list: COMMA IDENTIFIER . identifier_list

    COMMA  shift, and go to state 76

    $default  reduce using rule 51 (identifier_list)

    identifier_list  go to state 107


state 93

   35 compost_variable_declaration: ENUM IDENTIFIER COLON IDENTIFIER identifier_list END_ENUM .

    $default  reduce using rule 35 (compost_variable_declaration)


state 94

   46 set_assignment_aux: ASSIGN_OP OPEN_BRACES set_assignment_aux_aux . CLOSE_BRACES

    CLOSE_BRACES  shift, and go to state 108


state 95

   47 set_assignment_aux_aux: expression . values_list

    COMMA  shift, and go to state 109

    $default  reduce using rule 49 (values_list)

    values_list  go to state 110


state 96

   54 range_tail: RANGE NUMBER .

    $default  reduce using rule 54 (range_tail)


state 97

   33 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS dimensions CLOSE_BRACKETS IDENTIFIER . matrix_assignment

    ASSIGN_OP  shift, and go to state 111

    $default  reduce using rule 38 (matrix_assignment)

    matrix_assignment      go to state 112
    matrix_assignment_aux  go to state 113


state 98

   56 dimensions_tail: COMMA range . dimensions_tail

    COMMA  shift, and go to state 83

    $default  reduce using rule 57 (dimensions_tail)

    dimensions_tail  go to state 114


state 99

  106 expression: term_or @7 . term_or_tail

    OR_OP  shift, and go to state 115

    $default  reduce using rule 108 (term_or_tail)

    term_or_tail  go to state 116


state 100

  110 term_or: @8 term_and . term_and_tail

    AND_OP  shift, and go to state 117

    $default  reduce using rule 112 (term_and_tail)

    term_and_tail  go to state 118


state 101

  114 term_and: @9 . term_bool_comparison term_bool_comparison_tail

    $default  reduce using rule 118 (@10)

    term_bool_comparison  go to state 119
    @10                   go to state 120


state 102

   25 simple_variable_declaration_value: ASSIGN_OP @4 expression .

    $default  reduce using rule 25 (simple_variable_declaration_value)


state 103

   66 parameter_list_tail: COMMA . variable_declaration parameter_list_tail

    STRING     shift, and go to state 16
    INT        shift, and go to state 17
    REAL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOLEAN    shift, and go to state 21
    ENUM       shift, and go to state 22
    STRUCT     shift, and go to state 23
    SET_OF     shift, and go to state 24
    MATRIX_OF  shift, and go to state 25
    CONST      shift, and go to state 26
    REF        shift, and go to state 27

    variable_declaration          go to state 121
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32


state 104

   64 parameter_list: variable_declaration parameter_list_tail .

    $default  reduce using rule 64 (parameter_list)


state 105

   61 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS . COLON @5 statement_list END_PROCEDURE SEMICOLON

    COLON  shift, and go to state 122


state 106

   63 function_declaration: FUNCTION type IDENTIFIER OPEN_PARENTHESIS parameter_list . CLOSE_PARENTHESIS COLON @6 statement_list END_FUNCTION SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 123


state 107

   50 identifier_list: COMMA IDENTIFIER identifier_list .

    $default  reduce using rule 50 (identifier_list)


state 108

   46 set_assignment_aux: ASSIGN_OP OPEN_BRACES set_assignment_aux_aux CLOSE_BRACES .

    $default  reduce using rule 46 (set_assignment_aux)


state 109

   48 values_list: COMMA . set_assignment_aux_aux

    $default  reduce using rule 109 (@8)

    set_assignment_aux_aux  go to state 124
    expression              go to state 95
    term_or                 go to state 86
    @8                      go to state 87


state 110

   47 set_assignment_aux_aux: expression values_list .

    $default  reduce using rule 47 (set_assignment_aux_aux)


state 111

   39 matrix_assignment_aux: ASSIGN_OP . matrix_assignment_aux_aux

    OPEN_BRACES  shift, and go to state 125

    matrix_assignment_aux_aux  go to state 126


state 112

   33 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS dimensions CLOSE_BRACKETS IDENTIFIER matrix_assignment .

    $default  reduce using rule 33 (compost_variable_declaration)


state 113

   37 matrix_assignment: matrix_assignment_aux .

    $default  reduce using rule 37 (matrix_assignment)


state 114

   56 dimensions_tail: COMMA range dimensions_tail .

    $default  reduce using rule 56 (dimensions_tail)


state 115

  107 term_or_tail: OR_OP . term_or term_or_tail

    $default  reduce using rule 109 (@8)

    term_or  go to state 127
    @8       go to state 87


state 116

  106 expression: term_or @7 term_or_tail .

    $default  reduce using rule 106 (expression)


state 117

  111 term_and_tail: AND_OP . term_and term_and_tail

    $default  reduce using rule 113 (@9)

    term_and  go to state 128
    @9        go to state 101


state 118

  110 term_or: @8 term_and term_and_tail .

    $default  reduce using rule 110 (term_or)


state 119

  114 term_and: @9 term_bool_comparison . term_bool_comparison_tail

    EQ_OP   shift, and go to state 129
    NEQ_OP  shift, and go to state 130

    $default  reduce using rule 117 (term_bool_comparison_tail)

    term_bool_comparison_tail  go to state 131


state 120

  119 term_bool_comparison: @10 . term_arit_comparison term_arit_comparison_tail

    $default  reduce using rule 125 (@11)

    term_arit_comparison  go to state 132
    @11                   go to state 133


state 121

   66 parameter_list_tail: COMMA variable_declaration . parameter_list_tail

    COMMA  shift, and go to state 103

    $default  reduce using rule 67 (parameter_list_tail)

    parameter_list_tail  go to state 134


state 122

   61 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON . @5 statement_list END_PROCEDURE SEMICOLON

    $default  reduce using rule 60 (@5)

    @5  go to state 135


state 123

   63 function_declaration: FUNCTION type IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS . COLON @6 statement_list END_FUNCTION SEMICOLON

    COLON  shift, and go to state 136


state 124

   48 values_list: COMMA set_assignment_aux_aux .

    $default  reduce using rule 48 (values_list)


state 125

   40 matrix_assignment_aux_aux: OPEN_BRACES . expression CLOSE_BRACES values_group_list

    $default  reduce using rule 109 (@8)

    expression  go to state 137
    term_or     go to state 86
    @8          go to state 87


state 126

   39 matrix_assignment_aux: ASSIGN_OP matrix_assignment_aux_aux .

    $default  reduce using rule 39 (matrix_assignment_aux)


state 127

  107 term_or_tail: OR_OP term_or . term_or_tail

    OR_OP  shift, and go to state 115

    $default  reduce using rule 108 (term_or_tail)

    term_or_tail  go to state 138


state 128

  111 term_and_tail: AND_OP term_and . term_and_tail

    AND_OP  shift, and go to state 117

    $default  reduce using rule 112 (term_and_tail)

    term_and_tail  go to state 139


state 129

  115 term_bool_comparison_tail: EQ_OP . term_bool_comparison term_bool_comparison_tail

    $default  reduce using rule 118 (@10)

    term_bool_comparison  go to state 140
    @10                   go to state 120


state 130

  116 term_bool_comparison_tail: NEQ_OP . term_bool_comparison term_bool_comparison_tail

    $default  reduce using rule 118 (@10)

    term_bool_comparison  go to state 141
    @10                   go to state 120


state 131

  114 term_and: @9 term_bool_comparison term_bool_comparison_tail .

    $default  reduce using rule 114 (term_and)


state 132

  119 term_bool_comparison: @10 term_arit_comparison . term_arit_comparison_tail

    LEQ_OP  shift, and go to state 142
    BEQ_OP  shift, and go to state 143
    LT_OP   shift, and go to state 144
    BT_OP   shift, and go to state 145

    $default  reduce using rule 124 (term_arit_comparison_tail)

    term_arit_comparison_tail  go to state 146


state 133

  126 term_arit_comparison: @11 . term term_tail

    $default  reduce using rule 130 (@12)

    term  go to state 147
    @12   go to state 148


state 134

   66 parameter_list_tail: COMMA variable_declaration parameter_list_tail .

    $default  reduce using rule 66 (parameter_list_tail)


state 135

   61 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON @5 . statement_list END_PROCEDURE SEMICOLON

    IDENTIFIER  shift, and go to state 149
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 150
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 151
    FOR         shift, and go to state 152
    WHILE       shift, and go to state 153
    SWITCH      shift, and go to state 154

    $default  reduce using rule 69 (statement_list)

    variable_declaration          go to state 155
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 156
    statement                     go to state 157
    return_statement              go to state 158
    assignment_statement          go to state 159
    destination                   go to state 160
    if_statement                  go to state 161
    switch_statement              go to state 162
    while_statement               go to state 163
    for_statement                 go to state 164
    subprogram_call               go to state 165


state 136

   63 function_declaration: FUNCTION type IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON . @6 statement_list END_FUNCTION SEMICOLON

    $default  reduce using rule 62 (@6)

    @6  go to state 166


state 137

   40 matrix_assignment_aux_aux: OPEN_BRACES expression . CLOSE_BRACES values_group_list

    CLOSE_BRACES  shift, and go to state 167


state 138

  107 term_or_tail: OR_OP term_or term_or_tail .

    $default  reduce using rule 107 (term_or_tail)


state 139

  111 term_and_tail: AND_OP term_and term_and_tail .

    $default  reduce using rule 111 (term_and_tail)


state 140

  115 term_bool_comparison_tail: EQ_OP term_bool_comparison . term_bool_comparison_tail

    EQ_OP   shift, and go to state 129
    NEQ_OP  shift, and go to state 130

    $default  reduce using rule 117 (term_bool_comparison_tail)

    term_bool_comparison_tail  go to state 168


state 141

  116 term_bool_comparison_tail: NEQ_OP term_bool_comparison . term_bool_comparison_tail

    EQ_OP   shift, and go to state 129
    NEQ_OP  shift, and go to state 130

    $default  reduce using rule 117 (term_bool_comparison_tail)

    term_bool_comparison_tail  go to state 169


state 142

  120 term_arit_comparison_tail: LEQ_OP . term_arit_comparison term_arit_comparison_tail

    $default  reduce using rule 125 (@11)

    term_arit_comparison  go to state 170
    @11                   go to state 133


state 143

  121 term_arit_comparison_tail: BEQ_OP . term_arit_comparison term_arit_comparison_tail

    $default  reduce using rule 125 (@11)

    term_arit_comparison  go to state 171
    @11                   go to state 133


state 144

  122 term_arit_comparison_tail: LT_OP . term_arit_comparison term_arit_comparison_tail

    $default  reduce using rule 125 (@11)

    term_arit_comparison  go to state 172
    @11                   go to state 133


state 145

  123 term_arit_comparison_tail: BT_OP . term_arit_comparison term_arit_comparison_tail

    $default  reduce using rule 125 (@11)

    term_arit_comparison  go to state 173
    @11                   go to state 133


state 146

  119 term_bool_comparison: @10 term_arit_comparison term_arit_comparison_tail .

    $default  reduce using rule 119 (term_bool_comparison)


state 147

  126 term_arit_comparison: @11 term . term_tail

    SUB_OP  shift, and go to state 174
    ADD_OP  shift, and go to state 175

    $default  reduce using rule 129 (term_tail)

    term_tail  go to state 176


state 148

  131 term: @12 . factor factor_tail

    $default  reduce using rule 136 (@13)

    factor  go to state 177
    @13     go to state 178


state 149

   86 destination: IDENTIFIER . identifier_tail
   99 subprogram_call: IDENTIFIER . OPEN_PARENTHESIS argument_list CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 179
    OPEN_BRACKETS     shift, and go to state 180

    $default  reduce using rule 88 (identifier_tail)

    identifier_tail  go to state 181


state 150

   78 return_statement: RETURN . expression SEMICOLON

    $default  reduce using rule 109 (@8)

    expression  go to state 182
    term_or     go to state 86
    @8          go to state 87


state 151

   89 if_statement: IF . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 183


state 152

   98 for_statement: FOR . IDENTIFIER IN IDENTIFIER COLON statement_list END_FOR SEMICOLON

    IDENTIFIER  shift, and go to state 184


state 153

   97 while_statement: WHILE . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list END_WHILE SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 185


state 154

   92 switch_statement: SWITCH . OPEN_PARENTHESIS IDENTIFIER CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 186


state 155

   77 statement: variable_declaration .

    $default  reduce using rule 77 (statement)


state 156

   61 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON @5 statement_list . END_PROCEDURE SEMICOLON

    END_PROCEDURE  shift, and go to state 187


state 157

   68 statement_list: statement . statement_list

    IDENTIFIER  shift, and go to state 149
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 150
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 151
    FOR         shift, and go to state 152
    WHILE       shift, and go to state 153
    SWITCH      shift, and go to state 154

    $default  reduce using rule 69 (statement_list)

    variable_declaration          go to state 155
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 188
    statement                     go to state 157
    return_statement              go to state 158
    assignment_statement          go to state 159
    destination                   go to state 160
    if_statement                  go to state 161
    switch_statement              go to state 162
    while_statement               go to state 163
    for_statement                 go to state 164
    subprogram_call               go to state 165


state 158

   76 statement: return_statement .

    $default  reduce using rule 76 (statement)


state 159

   70 statement: assignment_statement .

    $default  reduce using rule 70 (statement)


state 160

   79 assignment_statement: destination . assignment_statement_tail SEMICOLON

    ASSIGN_OP       shift, and go to state 189
    ADD_ASSIGN_OP   shift, and go to state 190
    SUB_ASSIGN_OP   shift, and go to state 191
    MULT_ASSIGN_OP  shift, and go to state 192
    DIV_ASSIGN_OP   shift, and go to state 193
    MOD_ASSIGN_OP   shift, and go to state 194

    assignment_statement_tail  go to state 195


state 161

   71 statement: if_statement .

    $default  reduce using rule 71 (statement)


state 162

   72 statement: switch_statement .

    $default  reduce using rule 72 (statement)


state 163

   73 statement: while_statement .

    $default  reduce using rule 73 (statement)


state 164

   74 statement: for_statement .

    $default  reduce using rule 74 (statement)


state 165

   75 statement: subprogram_call .

    $default  reduce using rule 75 (statement)


state 166

   63 function_declaration: FUNCTION type IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON @6 . statement_list END_FUNCTION SEMICOLON

    IDENTIFIER  shift, and go to state 149
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 150
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 151
    FOR         shift, and go to state 152
    WHILE       shift, and go to state 153
    SWITCH      shift, and go to state 154

    $default  reduce using rule 69 (statement_list)

    variable_declaration          go to state 155
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 196
    statement                     go to state 157
    return_statement              go to state 158
    assignment_statement          go to state 159
    destination                   go to state 160
    if_statement                  go to state 161
    switch_statement              go to state 162
    while_statement               go to state 163
    for_statement                 go to state 164
    subprogram_call               go to state 165


state 167

   40 matrix_assignment_aux_aux: OPEN_BRACES expression CLOSE_BRACES . values_group_list

    COMMA  shift, and go to state 197

    COMMA     [reduce using rule 42 (values_group_list)]
    $default  reduce using rule 42 (values_group_list)

    values_group_list      go to state 198
    values_group_list_aux  go to state 199


state 168

  115 term_bool_comparison_tail: EQ_OP term_bool_comparison term_bool_comparison_tail .

    $default  reduce using rule 115 (term_bool_comparison_tail)


state 169

  116 term_bool_comparison_tail: NEQ_OP term_bool_comparison term_bool_comparison_tail .

    $default  reduce using rule 116 (term_bool_comparison_tail)


state 170

  120 term_arit_comparison_tail: LEQ_OP term_arit_comparison . term_arit_comparison_tail

    LEQ_OP  shift, and go to state 142
    BEQ_OP  shift, and go to state 143
    LT_OP   shift, and go to state 144
    BT_OP   shift, and go to state 145

    $default  reduce using rule 124 (term_arit_comparison_tail)

    term_arit_comparison_tail  go to state 200


state 171

  121 term_arit_comparison_tail: BEQ_OP term_arit_comparison . term_arit_comparison_tail

    LEQ_OP  shift, and go to state 142
    BEQ_OP  shift, and go to state 143
    LT_OP   shift, and go to state 144
    BT_OP   shift, and go to state 145

    $default  reduce using rule 124 (term_arit_comparison_tail)

    term_arit_comparison_tail  go to state 201


state 172

  122 term_arit_comparison_tail: LT_OP term_arit_comparison . term_arit_comparison_tail

    LEQ_OP  shift, and go to state 142
    BEQ_OP  shift, and go to state 143
    LT_OP   shift, and go to state 144
    BT_OP   shift, and go to state 145

    $default  reduce using rule 124 (term_arit_comparison_tail)

    term_arit_comparison_tail  go to state 202


state 173

  123 term_arit_comparison_tail: BT_OP term_arit_comparison . term_arit_comparison_tail

    LEQ_OP  shift, and go to state 142
    BEQ_OP  shift, and go to state 143
    LT_OP   shift, and go to state 144
    BT_OP   shift, and go to state 145

    $default  reduce using rule 124 (term_arit_comparison_tail)

    term_arit_comparison_tail  go to state 203


state 174

  128 term_tail: SUB_OP . term term_tail

    $default  reduce using rule 130 (@12)

    term  go to state 204
    @12   go to state 148


state 175

  127 term_tail: ADD_OP . term term_tail

    $default  reduce using rule 130 (@12)

    term  go to state 205
    @12   go to state 148


state 176

  126 term_arit_comparison: @11 term term_tail .

    $default  reduce using rule 126 (term_arit_comparison)


state 177

  131 term: @12 factor . factor_tail

    MULT_OP  shift, and go to state 206
    DIV_OP   shift, and go to state 207
    MOD_OP   shift, and go to state 208

    $default  reduce using rule 135 (factor_tail)

    factor_tail  go to state 209


state 178

  137 factor: @13 . expo expo_tail

    $default  reduce using rule 140 (@14)

    expo  go to state 210
    @14   go to state 211


state 179

   99 subprogram_call: IDENTIFIER OPEN_PARENTHESIS . argument_list CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  reduce using rule 101 (argument_list)
    $default           reduce using rule 109 (@8)

    argument_list      go to state 212
    argument_list_aux  go to state 213
    expression         go to state 214
    term_or            go to state 86
    @8                 go to state 87


state 180

   87 identifier_tail: OPEN_BRACKETS . dimensions CLOSE_BRACKETS

    NUMBER  shift, and go to state 67

    dimensions  go to state 215
    range       go to state 69


state 181

   86 destination: IDENTIFIER identifier_tail .

    $default  reduce using rule 86 (destination)


state 182

   78 return_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 216


state 183

   89 if_statement: IF OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF SEMICOLON

    $default  reduce using rule 109 (@8)

    expression  go to state 217
    term_or     go to state 86
    @8          go to state 87


state 184

   98 for_statement: FOR IDENTIFIER . IN IDENTIFIER COLON statement_list END_FOR SEMICOLON

    IN  shift, and go to state 218


state 185

   97 while_statement: WHILE OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS COLON statement_list END_WHILE SEMICOLON

    $default  reduce using rule 109 (@8)

    expression  go to state 219
    term_or     go to state 86
    @8          go to state 87


state 186

   92 switch_statement: SWITCH OPEN_PARENTHESIS . IDENTIFIER CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH SEMICOLON

    IDENTIFIER  shift, and go to state 220


state 187

   61 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON @5 statement_list END_PROCEDURE . SEMICOLON

    SEMICOLON  shift, and go to state 221


state 188

   68 statement_list: statement statement_list .

    $default  reduce using rule 68 (statement_list)


state 189

   80 assignment_statement_tail: ASSIGN_OP . expression

    $default  reduce using rule 109 (@8)

    expression  go to state 222
    term_or     go to state 86
    @8          go to state 87


state 190

   81 assignment_statement_tail: ADD_ASSIGN_OP . expression

    $default  reduce using rule 109 (@8)

    expression  go to state 223
    term_or     go to state 86
    @8          go to state 87


state 191

   82 assignment_statement_tail: SUB_ASSIGN_OP . expression

    $default  reduce using rule 109 (@8)

    expression  go to state 224
    term_or     go to state 86
    @8          go to state 87


state 192

   83 assignment_statement_tail: MULT_ASSIGN_OP . expression

    $default  reduce using rule 109 (@8)

    expression  go to state 225
    term_or     go to state 86
    @8          go to state 87


state 193

   84 assignment_statement_tail: DIV_ASSIGN_OP . expression

    $default  reduce using rule 109 (@8)

    expression  go to state 226
    term_or     go to state 86
    @8          go to state 87


state 194

   85 assignment_statement_tail: MOD_ASSIGN_OP . expression

    $default  reduce using rule 109 (@8)

    expression  go to state 227
    term_or     go to state 86
    @8          go to state 87


state 195

   79 assignment_statement: destination assignment_statement_tail . SEMICOLON

    SEMICOLON  shift, and go to state 228


state 196

   63 function_declaration: FUNCTION type IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON @6 statement_list . END_FUNCTION SEMICOLON

    END_FUNCTION  shift, and go to state 229


state 197

   43 values_group_list_aux: COMMA . matrix_assignment_aux_aux

    OPEN_BRACES  shift, and go to state 125

    matrix_assignment_aux_aux  go to state 230


state 198

   40 matrix_assignment_aux_aux: OPEN_BRACES expression CLOSE_BRACES values_group_list .

    $default  reduce using rule 40 (matrix_assignment_aux_aux)


state 199

   41 values_group_list: values_group_list_aux .

    $default  reduce using rule 41 (values_group_list)


state 200

  120 term_arit_comparison_tail: LEQ_OP term_arit_comparison term_arit_comparison_tail .

    $default  reduce using rule 120 (term_arit_comparison_tail)


state 201

  121 term_arit_comparison_tail: BEQ_OP term_arit_comparison term_arit_comparison_tail .

    $default  reduce using rule 121 (term_arit_comparison_tail)


state 202

  122 term_arit_comparison_tail: LT_OP term_arit_comparison term_arit_comparison_tail .

    $default  reduce using rule 122 (term_arit_comparison_tail)


state 203

  123 term_arit_comparison_tail: BT_OP term_arit_comparison term_arit_comparison_tail .

    $default  reduce using rule 123 (term_arit_comparison_tail)


state 204

  128 term_tail: SUB_OP term . term_tail

    SUB_OP  shift, and go to state 174
    ADD_OP  shift, and go to state 175

    $default  reduce using rule 129 (term_tail)

    term_tail  go to state 231


state 205

  127 term_tail: ADD_OP term . term_tail

    SUB_OP  shift, and go to state 174
    ADD_OP  shift, and go to state 175

    $default  reduce using rule 129 (term_tail)

    term_tail  go to state 232


state 206

  132 factor_tail: MULT_OP . factor factor_tail

    $default  reduce using rule 136 (@13)

    factor  go to state 233
    @13     go to state 178


state 207

  133 factor_tail: DIV_OP . factor factor_tail

    $default  reduce using rule 136 (@13)

    factor  go to state 234
    @13     go to state 178


state 208

  134 factor_tail: MOD_OP . factor factor_tail

    $default  reduce using rule 136 (@13)

    factor  go to state 235
    @13     go to state 178


state 209

  131 term: @12 factor factor_tail .

    $default  reduce using rule 131 (term)


state 210

  137 factor: @13 expo . expo_tail

    EXPO_OP  shift, and go to state 236

    $default  reduce using rule 139 (expo_tail)

    expo_tail  go to state 237


state 211

  141 expo: @14 . negation negation_tail

    IDENTIFIER        shift, and go to state 238
    NUMBER            shift, and go to state 239
    OPEN_PARENTHESIS  shift, and go to state 240

    negation       go to state 241
    function_call  go to state 242


state 212

   99 subprogram_call: IDENTIFIER OPEN_PARENTHESIS argument_list . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 243


state 213

  100 argument_list: argument_list_aux .

    $default  reduce using rule 100 (argument_list)


state 214

  102 argument_list_aux: expression . argument_list_tail

    COMMA  shift, and go to state 244

    $default  reduce using rule 104 (argument_list_tail)

    argument_list_tail  go to state 245


state 215

   87 identifier_tail: OPEN_BRACKETS dimensions . CLOSE_BRACKETS

    CLOSE_BRACKETS  shift, and go to state 246


state 216

   78 return_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 78 (return_statement)


state 217

   89 if_statement: IF OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 247


state 218

   98 for_statement: FOR IDENTIFIER IN . IDENTIFIER COLON statement_list END_FOR SEMICOLON

    IDENTIFIER  shift, and go to state 248


state 219

   97 while_statement: WHILE OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS COLON statement_list END_WHILE SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 249


state 220

   92 switch_statement: SWITCH OPEN_PARENTHESIS IDENTIFIER . CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 250


state 221

   61 procedure_declaration: PROCEDURE IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON @5 statement_list END_PROCEDURE SEMICOLON .

    $default  reduce using rule 61 (procedure_declaration)


state 222

   80 assignment_statement_tail: ASSIGN_OP expression .

    $default  reduce using rule 80 (assignment_statement_tail)


state 223

   81 assignment_statement_tail: ADD_ASSIGN_OP expression .

    $default  reduce using rule 81 (assignment_statement_tail)


state 224

   82 assignment_statement_tail: SUB_ASSIGN_OP expression .

    $default  reduce using rule 82 (assignment_statement_tail)


state 225

   83 assignment_statement_tail: MULT_ASSIGN_OP expression .

    $default  reduce using rule 83 (assignment_statement_tail)


state 226

   84 assignment_statement_tail: DIV_ASSIGN_OP expression .

    $default  reduce using rule 84 (assignment_statement_tail)


state 227

   85 assignment_statement_tail: MOD_ASSIGN_OP expression .

    $default  reduce using rule 85 (assignment_statement_tail)


state 228

   79 assignment_statement: destination assignment_statement_tail SEMICOLON .

    $default  reduce using rule 79 (assignment_statement)


state 229

   63 function_declaration: FUNCTION type IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON @6 statement_list END_FUNCTION . SEMICOLON

    SEMICOLON  shift, and go to state 251


state 230

   43 values_group_list_aux: COMMA matrix_assignment_aux_aux .

    $default  reduce using rule 43 (values_group_list_aux)


state 231

  128 term_tail: SUB_OP term term_tail .

    $default  reduce using rule 128 (term_tail)


state 232

  127 term_tail: ADD_OP term term_tail .

    $default  reduce using rule 127 (term_tail)


state 233

  132 factor_tail: MULT_OP factor . factor_tail

    MULT_OP  shift, and go to state 206
    DIV_OP   shift, and go to state 207
    MOD_OP   shift, and go to state 208

    $default  reduce using rule 135 (factor_tail)

    factor_tail  go to state 252


state 234

  133 factor_tail: DIV_OP factor . factor_tail

    MULT_OP  shift, and go to state 206
    DIV_OP   shift, and go to state 207
    MOD_OP   shift, and go to state 208

    $default  reduce using rule 135 (factor_tail)

    factor_tail  go to state 253


state 235

  134 factor_tail: MOD_OP factor . factor_tail

    MULT_OP  shift, and go to state 206
    DIV_OP   shift, and go to state 207
    MOD_OP   shift, and go to state 208

    $default  reduce using rule 135 (factor_tail)

    factor_tail  go to state 254


state 236

  138 expo_tail: EXPO_OP . expo expo_tail

    $default  reduce using rule 140 (@14)

    expo  go to state 255
    @14   go to state 211


state 237

  137 factor: @13 expo expo_tail .

    $default  reduce using rule 137 (factor)


state 238

  145 negation: IDENTIFIER .
  148 function_call: IDENTIFIER . OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 256

    $default  reduce using rule 145 (negation)


state 239

  146 negation: NUMBER .

    $default  reduce using rule 146 (negation)


state 240

  147 negation: OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS

    $default  reduce using rule 109 (@8)

    expression  go to state 257
    term_or     go to state 86
    @8          go to state 87


state 241

  141 expo: @14 negation . negation_tail

    NEG_OP  shift, and go to state 258

    $default  reduce using rule 143 (negation_tail)

    negation_tail  go to state 259


state 242

  144 negation: function_call .

    $default  reduce using rule 144 (negation)


state 243

   99 subprogram_call: IDENTIFIER OPEN_PARENTHESIS argument_list CLOSE_PARENTHESIS .

    $default  reduce using rule 99 (subprogram_call)


state 244

  103 argument_list_tail: COMMA . argument_list_aux

    $default  reduce using rule 109 (@8)

    argument_list_aux  go to state 260
    expression         go to state 214
    term_or            go to state 86
    @8                 go to state 87


state 245

  102 argument_list_aux: expression argument_list_tail .

    $default  reduce using rule 102 (argument_list_aux)


state 246

   87 identifier_tail: OPEN_BRACKETS dimensions CLOSE_BRACKETS .

    $default  reduce using rule 87 (identifier_tail)


state 247

   89 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . COLON statement_list else_clausule END_IF SEMICOLON

    COLON  shift, and go to state 261


state 248

   98 for_statement: FOR IDENTIFIER IN IDENTIFIER . COLON statement_list END_FOR SEMICOLON

    COLON  shift, and go to state 262


state 249

   97 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . COLON statement_list END_WHILE SEMICOLON

    COLON  shift, and go to state 263


state 250

   92 switch_statement: SWITCH OPEN_PARENTHESIS IDENTIFIER CLOSE_PARENTHESIS . COLON case_clasule other_clasule END_SWITCH SEMICOLON

    COLON  shift, and go to state 264


state 251

   63 function_declaration: FUNCTION type IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON @6 statement_list END_FUNCTION SEMICOLON .

    $default  reduce using rule 63 (function_declaration)


state 252

  132 factor_tail: MULT_OP factor factor_tail .

    $default  reduce using rule 132 (factor_tail)


state 253

  133 factor_tail: DIV_OP factor factor_tail .

    $default  reduce using rule 133 (factor_tail)


state 254

  134 factor_tail: MOD_OP factor factor_tail .

    $default  reduce using rule 134 (factor_tail)


state 255

  138 expo_tail: EXPO_OP expo . expo_tail

    EXPO_OP  shift, and go to state 236

    $default  reduce using rule 139 (expo_tail)

    expo_tail  go to state 265


state 256

  148 function_call: IDENTIFIER OPEN_PARENTHESIS . parameter_list CLOSE_PARENTHESIS

    STRING     shift, and go to state 16
    INT        shift, and go to state 17
    REAL       shift, and go to state 18
    COMPLEX    shift, and go to state 19
    DOUBLE     shift, and go to state 20
    BOOLEAN    shift, and go to state 21
    ENUM       shift, and go to state 22
    STRUCT     shift, and go to state 23
    SET_OF     shift, and go to state 24
    MATRIX_OF  shift, and go to state 25
    CONST      shift, and go to state 26
    REF        shift, and go to state 27

    $default  reduce using rule 65 (parameter_list)

    variable_declaration          go to state 89
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    parameter_list                go to state 266


state 257

  147 negation: OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 267


state 258

  142 negation_tail: NEG_OP . negation negation_tail

    IDENTIFIER        shift, and go to state 238
    NUMBER            shift, and go to state 239
    OPEN_PARENTHESIS  shift, and go to state 240

    negation       go to state 268
    function_call  go to state 242


state 259

  141 expo: @14 negation negation_tail .

    $default  reduce using rule 141 (expo)


state 260

  103 argument_list_tail: COMMA argument_list_aux .

    $default  reduce using rule 103 (argument_list_tail)


state 261

   89 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON . statement_list else_clausule END_IF SEMICOLON

    IDENTIFIER  shift, and go to state 149
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 150
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 151
    FOR         shift, and go to state 152
    WHILE       shift, and go to state 153
    SWITCH      shift, and go to state 154

    $default  reduce using rule 69 (statement_list)

    variable_declaration          go to state 155
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 269
    statement                     go to state 157
    return_statement              go to state 158
    assignment_statement          go to state 159
    destination                   go to state 160
    if_statement                  go to state 161
    switch_statement              go to state 162
    while_statement               go to state 163
    for_statement                 go to state 164
    subprogram_call               go to state 165


state 262

   98 for_statement: FOR IDENTIFIER IN IDENTIFIER COLON . statement_list END_FOR SEMICOLON

    IDENTIFIER  shift, and go to state 149
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 150
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 151
    FOR         shift, and go to state 152
    WHILE       shift, and go to state 153
    SWITCH      shift, and go to state 154

    $default  reduce using rule 69 (statement_list)

    variable_declaration          go to state 155
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 270
    statement                     go to state 157
    return_statement              go to state 158
    assignment_statement          go to state 159
    destination                   go to state 160
    if_statement                  go to state 161
    switch_statement              go to state 162
    while_statement               go to state 163
    for_statement                 go to state 164
    subprogram_call               go to state 165


state 263

   97 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON . statement_list END_WHILE SEMICOLON

    IDENTIFIER  shift, and go to state 149
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 150
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 151
    FOR         shift, and go to state 152
    WHILE       shift, and go to state 153
    SWITCH      shift, and go to state 154

    $default  reduce using rule 69 (statement_list)

    variable_declaration          go to state 155
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 271
    statement                     go to state 157
    return_statement              go to state 158
    assignment_statement          go to state 159
    destination                   go to state 160
    if_statement                  go to state 161
    switch_statement              go to state 162
    while_statement               go to state 163
    for_statement                 go to state 164
    subprogram_call               go to state 165


state 264

   92 switch_statement: SWITCH OPEN_PARENTHESIS IDENTIFIER CLOSE_PARENTHESIS COLON . case_clasule other_clasule END_SWITCH SEMICOLON

    CASE  shift, and go to state 272

    $default  reduce using rule 94 (case_clasule)

    case_clasule  go to state 273


state 265

  138 expo_tail: EXPO_OP expo expo_tail .

    $default  reduce using rule 138 (expo_tail)


state 266

  148 function_call: IDENTIFIER OPEN_PARENTHESIS parameter_list . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 274


state 267

  147 negation: OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    $default  reduce using rule 147 (negation)


state 268

  142 negation_tail: NEG_OP negation . negation_tail

    NEG_OP  shift, and go to state 258

    $default  reduce using rule 143 (negation_tail)

    negation_tail  go to state 275


state 269

   89 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list . else_clausule END_IF SEMICOLON

    ELSE  shift, and go to state 276

    $default  reduce using rule 91 (else_clausule)

    else_clausule  go to state 277


state 270

   98 for_statement: FOR IDENTIFIER IN IDENTIFIER COLON statement_list . END_FOR SEMICOLON

    END_FOR  shift, and go to state 278


state 271

   97 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list . END_WHILE SEMICOLON

    END_WHILE  shift, and go to state 279


state 272

   93 case_clasule: CASE . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON case_clasule

    OPEN_PARENTHESIS  shift, and go to state 280


state 273

   92 switch_statement: SWITCH OPEN_PARENTHESIS IDENTIFIER CLOSE_PARENTHESIS COLON case_clasule . other_clasule END_SWITCH SEMICOLON

    OTHER  shift, and go to state 281

    $default  reduce using rule 96 (other_clasule)

    other_clasule  go to state 282


state 274

  148 function_call: IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS .

    $default  reduce using rule 148 (function_call)


state 275

  142 negation_tail: NEG_OP negation negation_tail .

    $default  reduce using rule 142 (negation_tail)


state 276

   90 else_clausule: ELSE . statement_list

    IDENTIFIER  shift, and go to state 149
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 150
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 151
    FOR         shift, and go to state 152
    WHILE       shift, and go to state 153
    SWITCH      shift, and go to state 154

    $default  reduce using rule 69 (statement_list)

    variable_declaration          go to state 155
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 283
    statement                     go to state 157
    return_statement              go to state 158
    assignment_statement          go to state 159
    destination                   go to state 160
    if_statement                  go to state 161
    switch_statement              go to state 162
    while_statement               go to state 163
    for_statement                 go to state 164
    subprogram_call               go to state 165


state 277

   89 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list else_clausule . END_IF SEMICOLON

    END_IF  shift, and go to state 284


state 278

   98 for_statement: FOR IDENTIFIER IN IDENTIFIER COLON statement_list END_FOR . SEMICOLON

    SEMICOLON  shift, and go to state 285


state 279

   97 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list END_WHILE . SEMICOLON

    SEMICOLON  shift, and go to state 286


state 280

   93 case_clasule: CASE OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON case_clasule

    $default  reduce using rule 109 (@8)

    expression  go to state 287
    term_or     go to state 86
    @8          go to state 87


state 281

   95 other_clasule: OTHER . COLON statement_list

    COLON  shift, and go to state 288


state 282

   92 switch_statement: SWITCH OPEN_PARENTHESIS IDENTIFIER CLOSE_PARENTHESIS COLON case_clasule other_clasule . END_SWITCH SEMICOLON

    END_SWITCH  shift, and go to state 289


state 283

   90 else_clausule: ELSE statement_list .

    $default  reduce using rule 90 (else_clausule)


state 284

   89 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF . SEMICOLON

    SEMICOLON  shift, and go to state 290


state 285

   98 for_statement: FOR IDENTIFIER IN IDENTIFIER COLON statement_list END_FOR SEMICOLON .

    $default  reduce using rule 98 (for_statement)


state 286

   97 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list END_WHILE SEMICOLON .

    $default  reduce using rule 97 (while_statement)


state 287

   93 case_clasule: CASE OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON case_clasule

    CLOSE_PARENTHESIS  shift, and go to state 291


state 288

   95 other_clasule: OTHER COLON . statement_list

    IDENTIFIER  shift, and go to state 149
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 150
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 151
    FOR         shift, and go to state 152
    WHILE       shift, and go to state 153
    SWITCH      shift, and go to state 154

    $default  reduce using rule 69 (statement_list)

    variable_declaration          go to state 155
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 292
    statement                     go to state 157
    return_statement              go to state 158
    assignment_statement          go to state 159
    destination                   go to state 160
    if_statement                  go to state 161
    switch_statement              go to state 162
    while_statement               go to state 163
    for_statement                 go to state 164
    subprogram_call               go to state 165


state 289

   92 switch_statement: SWITCH OPEN_PARENTHESIS IDENTIFIER CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH . SEMICOLON

    SEMICOLON  shift, and go to state 293


state 290

   89 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF SEMICOLON .

    $default  reduce using rule 89 (if_statement)


state 291

   93 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . COLON statement_list BREAK SEMICOLON case_clasule

    COLON  shift, and go to state 294


state 292

   95 other_clasule: OTHER COLON statement_list .

    $default  reduce using rule 95 (other_clasule)


state 293

   92 switch_statement: SWITCH OPEN_PARENTHESIS IDENTIFIER CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH SEMICOLON .

    $default  reduce using rule 92 (switch_statement)


state 294

   93 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON . statement_list BREAK SEMICOLON case_clasule

    IDENTIFIER  shift, and go to state 149
    STRING      shift, and go to state 16
    RETURN      shift, and go to state 150
    INT         shift, and go to state 17
    REAL        shift, and go to state 18
    COMPLEX     shift, and go to state 19
    DOUBLE      shift, and go to state 20
    BOOLEAN     shift, and go to state 21
    ENUM        shift, and go to state 22
    STRUCT      shift, and go to state 23
    SET_OF      shift, and go to state 24
    MATRIX_OF   shift, and go to state 25
    CONST       shift, and go to state 26
    REF         shift, and go to state 27
    IF          shift, and go to state 151
    FOR         shift, and go to state 152
    WHILE       shift, and go to state 153
    SWITCH      shift, and go to state 154

    $default  reduce using rule 69 (statement_list)

    variable_declaration          go to state 155
    simple_variable_declaration   go to state 30
    type                          go to state 31
    compost_variable_declaration  go to state 32
    statement_list                go to state 295
    statement                     go to state 157
    return_statement              go to state 158
    assignment_statement          go to state 159
    destination                   go to state 160
    if_statement                  go to state 161
    switch_statement              go to state 162
    while_statement               go to state 163
    for_statement                 go to state 164
    subprogram_call               go to state 165


state 295

   93 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list . BREAK SEMICOLON case_clasule

    BREAK  shift, and go to state 296


state 296

   93 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list BREAK . SEMICOLON case_clasule

    SEMICOLON  shift, and go to state 297


state 297

   93 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON . case_clasule

    CASE  shift, and go to state 272

    $default  reduce using rule 94 (case_clasule)

    case_clasule  go to state 298


state 298

   93 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON case_clasule .

    $default  reduce using rule 93 (case_clasule)
