Terminals which are not used

   ID
   COMPLEX_NUMBER
   REAL_NUMBER
   INT_NUMBER
   DOT_OP
   COMMENT


State 128 conflicts: 1 shift/reduce
State 224 conflicts: 1 reduce/reduce
State 228 conflicts: 1 shift/reduce
State 270 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_header program_body

    2 program_header: import program_header
    3               | /* empty */

    4 import: IMPORT NAME

    5 program_body: variable_section subprogram_section

    6 variable_section: VARIABLES_SECTION COLON variable_declarations
    7                 | /* empty */

    8 variable_declarations: variable_declaration SEMICOLON variable_declarations_tail

    9 variable_declarations_tail: variable_declarations
   10                           | /* empty */

   11 subprogram_section: SUBPROGRAMS_SECTION COLON subprogram_declarations
   12                   | /* empty */

   13 subprogram_declarations: subprogram_declaration subprogram_declarations_tail

   14 subprogram_declarations_tail: subprogram_declarations
   15                             | /* empty */

   16 variable_declaration: simple_variable_declaration
   17                     | compost_variable_declaration

   18 simple_variable_declaration: type identifier simple_variable_declaration_value
   19                            | CONST type identifier ASSIGN_OP expression
   20                            | REF type identifier simple_variable_declaration_value

   21 simple_variable_declaration_value: ASSIGN_OP expression
   22                                  | /* empty */

   23 type: INT
   24     | DOUBLE REAL
   25     | REAL
   26     | COMPLEX
   27     | BOOLEAN
   28     | STRING

   29 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS dimensions CLOSE_BRACKETS identifier matrix_assignment
   30                             | SET_OF type identifier set_assignment
   31                             | ENUM identifier COLON identifier identifier_list END_ENUM
   32                             | STRUCT identifier COLON variable_declarations END_STRUCT

   33 matrix_assignment: matrix_assignment_aux
   34                  | /* empty */

   35 matrix_assignment_aux: ASSIGN_OP OPEN_BRACES values CLOSE_BRACES values_group_list

   36 set_assignment: ASSIGN_OP OPEN_BRACES values values_list CLOSE_BRACES
   37               | /* empty */

   38 values: expression values_list

   39 values_list: COMMA values
   40            | /* empty */

   41 values_group_list: COMMA OPEN_BRACES values CLOSE_BRACES values_group_list
   42                  | /* empty */

   43 identifier_list: COMMA identifier identifier_list
   44                | /* empty */

   45 dimensions: range dimensions_tail

   46 range: NUMBER range_tail

   47 range_tail: RANGE NUMBER
   48           | /* empty */

   49 dimensions_tail: COMMA range dimensions_tail
   50                | /* empty */

   51 subprogram_declaration: procedure_declaration
   52                       | function_declaration

   53 procedure_declaration: PROCEDURE identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_PROCEDURE SEMICOLON

   54 function_declaration: FUNCTION type identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_FUNCTION SEMICOLON

   55 parameter_list: variable_declaration parameter_list_tail
   56               | /* empty */

   57 parameter_list_tail: COMMA variable_declaration parameter_list_tail
   58                    | /* empty */

   59 statement_list: statement statement_list
   60               | /* empty */

   61 statement: assignment_statement
   62          | if_statement
   63          | switch_statement
   64          | while_statement
   65          | for_statement
   66          | subprogram_call
   67          | return_statement
   68          | variable_declaration

   69 return_statement: RETURN expression SEMICOLON

   70 assignment_statement: destination assignment_statement_tail SEMICOLON

   71 assignment_statement_tail: ASSIGN_OP expression
   72                          | ADD_ASSIGN_OP expression
   73                          | SUB_ASSIGN_OP expression
   74                          | MULT_ASSIGN_OP expression
   75                          | DIV_ASSIGN_OP expression
   76                          | MOD_ASSIGN_OP expression

   77 destination: identifier identifier_tail

   78 identifier_tail: OPEN_BRACKETS dimensions CLOSE_BRACKETS
   79                | /* empty */

   80 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF SEMICOLON

   81 else_clausule: ELSE statement_list
   82              | /* empty */

   83 switch_statement: SWITCH OPEN_PARENTHESIS identifier CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH SEMICOLON

   84 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON case_clasule
   85             | /* empty */

   86 other_clasule: OTHER COLON statement_list
   87              | /* empty */

   88 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list END_WHILE SEMICOLON

   89 for_statement: FOR identifier IN identifier COLON statement_list END_FOR SEMICOLON

   90 subprogram_call: identifier OPEN_PARENTHESIS argument_list CLOSE_PARENTHESIS

   91 argument_list: argument_list_aux
   92              | /* empty */

   93 argument_list_aux: expression argument_list_tail

   94 argument_list_tail: COMMA argument_list_aux
   95                   | /* empty */

   96 expression: term_or term_or_tail

   97 term_or_tail: OR_OP term_or term_or_tail
   98             | /* empty */

   99 term_or: term_and term_and_tail

  100 term_and_tail: AND_OP term_and term_and_tail
  101              | /* empty */

  102 term_and: term_bool_comparison term_bool_comparison_tail

  103 term_bool_comparison_tail: EQ_OP term_comparison term_comparison_tail
  104                          | NEQ_OP term_comparison term_comparison_tail
  105                          | /* empty */

  106 term_bool_comparison: term_arit_comparison term_arit_comparison_tail

  107 term_arit_comparison_tail: LEQ_OP term_comparison term_comparison_tail
  108                          | BEQ_OP term_comparison term_comparison_tail
  109                          | LT_OP term_comparison term_comparison_tail
  110                          | BT_OP term_comparison term_comparison_tail
  111                          | /* empty */

  112 term_arit_comparison: term term_tail

  113 term_tail: ADD_OP term term_tail
  114          | SUB_OP term term_tail
  115          | /* empty */

  116 term: factor factor_tail

  117 factor_tail: MULT_OP factor factor_tail
  118            | DIV_OP factor factor_tail
  119            | MOD_OP factor factor_tail
  120            | /* empty */

  121 factor: expo expo_tail

  122 expo_tail: EXPO_OP incr_decr incr_decr_tail
  123          | /* empty */

  124 expo: INCREMENT_OP incr_decr
  125     | DECREMENT_OP incr_decr
  126     | NEG_OP incr_decr
  127     | /* empty */

  128 incr_decr: identifier
  129          | NUMBER
  130          | function_call
  131          | OPEN_PARENTHESIS expression CLOSE_PARENTHESIS

  132 function_call: identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS

  133 incr_decr_tail: STRING NUMBER

  134 term_comparison: NUMBER STRING

  135 term_comparison_tail: COMMA STRING

  136 identifier: STRING


Terminals, with rules where they appear

$end (0) 0
error (256)
NAME (258) 4
ID (259)
NUMBER (260) 46 47 129 133 134
COMPLEX_NUMBER (261)
REAL_NUMBER (262)
INT_NUMBER (263)
IMPORT (264) 4
VARIABLES_SECTION (265) 6
SUBPROGRAMS_SECTION (266) 11
PROCEDURE (267) 53
FUNCTION (268) 54
END_PROCEDURE (269) 53
END_FUNCTION (270) 54
RETURN (271) 69
INT (272) 23
REAL (273) 24 25
COMPLEX (274) 26
STRING (275) 28 133 134 135 136
DOUBLE (276) 24
BOOLEAN (277) 27
ENUM (278) 31
STRUCT (279) 32
SET_OF (280) 30
MATRIX_OF (281) 29
END_STRUCT (282) 32
END_ENUM (283) 31
CONST (284) 19
REF (285) 20
IF (286) 80
ELSE (287) 81
FOR (288) 89
IN (289) 89
WHILE (290) 88
SWITCH (291) 83
CASE (292) 84
BREAK (293) 84
OTHER (294) 86
END_IF (295) 80
END_FOR (296) 89
END_WHILE (297) 88
END_SWITCH (298) 83
SEMICOLON (299) 8 53 54 69 70 80 83 84 88 89
COMMA (300) 39 41 43 49 57 94 135
COLON (301) 6 11 31 32 53 54 80 83 84 86 88 89
OPEN_PARENTHESIS (302) 53 54 80 83 84 88 90 131 132
CLOSE_PARENTHESIS (303) 53 54 80 83 84 88 90 131 132
OPEN_BRACKETS (304) 29 78
CLOSE_BRACKETS (305) 29 78
OPEN_BRACES (306) 35 36 41
CLOSE_BRACES (307) 35 36 41
RANGE (308) 47
ASSIGN_OP (309) 19 21 35 36 71
ADD_ASSIGN_OP (310) 72
SUB_ASSIGN_OP (311) 73
MULT_ASSIGN_OP (312) 74
DIV_ASSIGN_OP (313) 75
MOD_ASSIGN_OP (314) 76
INCREMENT_OP (315) 124
DECREMENT_OP (316) 125
NEG_OP (317) 126
AND_OP (318) 100
OR_OP (319) 97
LEQ_OP (320) 107
BEQ_OP (321) 108
EQ_OP (322) 103
NEQ_OP (323) 104
SUB_OP (324) 114
ADD_OP (325) 113
MULT_OP (326) 117
DIV_OP (327) 118
MOD_OP (328) 119
LT_OP (329) 109
BT_OP (330) 110
EXPO_OP (331) 122
DOT_OP (332)
COMMENT (333)


Nonterminals, with rules where they appear

$accept (79)
    on left: 0
program (80)
    on left: 1, on right: 0
program_header (81)
    on left: 2 3, on right: 1 2
import (82)
    on left: 4, on right: 2
program_body (83)
    on left: 5, on right: 1
variable_section (84)
    on left: 6 7, on right: 5
variable_declarations (85)
    on left: 8, on right: 6 9 32
variable_declarations_tail (86)
    on left: 9 10, on right: 8
subprogram_section (87)
    on left: 11 12, on right: 5
subprogram_declarations (88)
    on left: 13, on right: 11 14
subprogram_declarations_tail (89)
    on left: 14 15, on right: 13
variable_declaration (90)
    on left: 16 17, on right: 8 55 57 68
simple_variable_declaration (91)
    on left: 18 19 20, on right: 16
simple_variable_declaration_value (92)
    on left: 21 22, on right: 18 20
type (93)
    on left: 23 24 25 26 27 28, on right: 18 19 20 29 30 54
compost_variable_declaration (94)
    on left: 29 30 31 32, on right: 17
matrix_assignment (95)
    on left: 33 34, on right: 29
matrix_assignment_aux (96)
    on left: 35, on right: 33
set_assignment (97)
    on left: 36 37, on right: 30
values (98)
    on left: 38, on right: 35 36 39 41
values_list (99)
    on left: 39 40, on right: 36 38
values_group_list (100)
    on left: 41 42, on right: 35 41
identifier_list (101)
    on left: 43 44, on right: 31 43
dimensions (102)
    on left: 45, on right: 29 78
range (103)
    on left: 46, on right: 45 49
range_tail (104)
    on left: 47 48, on right: 46
dimensions_tail (105)
    on left: 49 50, on right: 45 49
subprogram_declaration (106)
    on left: 51 52, on right: 13
procedure_declaration (107)
    on left: 53, on right: 51
function_declaration (108)
    on left: 54, on right: 52
parameter_list (109)
    on left: 55 56, on right: 53 54 132
parameter_list_tail (110)
    on left: 57 58, on right: 55 57
statement_list (111)
    on left: 59 60, on right: 53 54 59 80 81 84 86 88 89
statement (112)
    on left: 61 62 63 64 65 66 67 68, on right: 59
return_statement (113)
    on left: 69, on right: 67
assignment_statement (114)
    on left: 70, on right: 61
assignment_statement_tail (115)
    on left: 71 72 73 74 75 76, on right: 70
destination (116)
    on left: 77, on right: 70
identifier_tail (117)
    on left: 78 79, on right: 77
if_statement (118)
    on left: 80, on right: 62
else_clausule (119)
    on left: 81 82, on right: 80
switch_statement (120)
    on left: 83, on right: 63
case_clasule (121)
    on left: 84 85, on right: 83 84
other_clasule (122)
    on left: 86 87, on right: 83
while_statement (123)
    on left: 88, on right: 64
for_statement (124)
    on left: 89, on right: 65
subprogram_call (125)
    on left: 90, on right: 66
argument_list (126)
    on left: 91 92, on right: 90
argument_list_aux (127)
    on left: 93, on right: 91 94
argument_list_tail (128)
    on left: 94 95, on right: 93
expression (129)
    on left: 96, on right: 19 21 38 69 71 72 73 74 75 76 80 84 88 93
    131
term_or_tail (130)
    on left: 97 98, on right: 96 97
term_or (131)
    on left: 99, on right: 96 97
term_and_tail (132)
    on left: 100 101, on right: 99 100
term_and (133)
    on left: 102, on right: 99 100
term_bool_comparison_tail (134)
    on left: 103 104 105, on right: 102
term_bool_comparison (135)
    on left: 106, on right: 102
term_arit_comparison_tail (136)
    on left: 107 108 109 110 111, on right: 106
term_arit_comparison (137)
    on left: 112, on right: 106
term_tail (138)
    on left: 113 114 115, on right: 112 113 114
term (139)
    on left: 116, on right: 112 113 114
factor_tail (140)
    on left: 117 118 119 120, on right: 116 117 118 119
factor (141)
    on left: 121, on right: 116 117 118 119
expo_tail (142)
    on left: 122 123, on right: 121
expo (143)
    on left: 124 125 126 127, on right: 121
incr_decr (144)
    on left: 128 129 130 131, on right: 122 124 125 126
function_call (145)
    on left: 132, on right: 130
incr_decr_tail (146)
    on left: 133, on right: 122
term_comparison (147)
    on left: 134, on right: 103 104 107 108 109 110
term_comparison_tail (148)
    on left: 135, on right: 103 104 107 108 109 110
identifier (149)
    on left: 136, on right: 18 19 20 29 30 31 32 43 53 54 77 83 89
    90 128 132


state 0

    0 $accept: . program $end

    IMPORT  shift, and go to state 1

    $default  reduce using rule 3 (program_header)

    program         go to state 2
    program_header  go to state 3
    import          go to state 4


state 1

    4 import: IMPORT . NAME

    NAME  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: program_header . program_body

    VARIABLES_SECTION  shift, and go to state 7

    $default  reduce using rule 7 (variable_section)

    program_body      go to state 8
    variable_section  go to state 9


state 4

    2 program_header: import . program_header

    IMPORT  shift, and go to state 1

    $default  reduce using rule 3 (program_header)

    program_header  go to state 10
    import          go to state 4


state 5

    4 import: IMPORT NAME .

    $default  reduce using rule 4 (import)


state 6

    0 $accept: program $end .

    $default  accept


state 7

    6 variable_section: VARIABLES_SECTION . COLON variable_declarations

    COLON  shift, and go to state 11


state 8

    1 program: program_header program_body .

    $default  reduce using rule 1 (program)


state 9

    5 program_body: variable_section . subprogram_section

    SUBPROGRAMS_SECTION  shift, and go to state 12

    $default  reduce using rule 12 (subprogram_section)

    subprogram_section  go to state 13


state 10

    2 program_header: import program_header .

    $default  reduce using rule 2 (program_header)


state 11

    6 variable_section: VARIABLES_SECTION COLON . variable_declarations

    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 17
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25

    variable_declarations         go to state 26
    variable_declaration          go to state 27
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30


state 12

   11 subprogram_section: SUBPROGRAMS_SECTION . COLON subprogram_declarations

    COLON  shift, and go to state 31


state 13

    5 program_body: variable_section subprogram_section .

    $default  reduce using rule 5 (program_body)


state 14

   23 type: INT .

    $default  reduce using rule 23 (type)


state 15

   25 type: REAL .

    $default  reduce using rule 25 (type)


state 16

   26 type: COMPLEX .

    $default  reduce using rule 26 (type)


state 17

   28 type: STRING .

    $default  reduce using rule 28 (type)


state 18

   24 type: DOUBLE . REAL

    REAL  shift, and go to state 32


state 19

   27 type: BOOLEAN .

    $default  reduce using rule 27 (type)


state 20

   31 compost_variable_declaration: ENUM . identifier COLON identifier identifier_list END_ENUM

    STRING  shift, and go to state 33

    identifier  go to state 34


state 21

   32 compost_variable_declaration: STRUCT . identifier COLON variable_declarations END_STRUCT

    STRING  shift, and go to state 33

    identifier  go to state 35


state 22

   30 compost_variable_declaration: SET_OF . type identifier set_assignment

    INT      shift, and go to state 14
    REAL     shift, and go to state 15
    COMPLEX  shift, and go to state 16
    STRING   shift, and go to state 17
    DOUBLE   shift, and go to state 18
    BOOLEAN  shift, and go to state 19

    type  go to state 36


state 23

   29 compost_variable_declaration: MATRIX_OF . type OPEN_BRACKETS dimensions CLOSE_BRACKETS identifier matrix_assignment

    INT      shift, and go to state 14
    REAL     shift, and go to state 15
    COMPLEX  shift, and go to state 16
    STRING   shift, and go to state 17
    DOUBLE   shift, and go to state 18
    BOOLEAN  shift, and go to state 19

    type  go to state 37


state 24

   19 simple_variable_declaration: CONST . type identifier ASSIGN_OP expression

    INT      shift, and go to state 14
    REAL     shift, and go to state 15
    COMPLEX  shift, and go to state 16
    STRING   shift, and go to state 17
    DOUBLE   shift, and go to state 18
    BOOLEAN  shift, and go to state 19

    type  go to state 38


state 25

   20 simple_variable_declaration: REF . type identifier simple_variable_declaration_value

    INT      shift, and go to state 14
    REAL     shift, and go to state 15
    COMPLEX  shift, and go to state 16
    STRING   shift, and go to state 17
    DOUBLE   shift, and go to state 18
    BOOLEAN  shift, and go to state 19

    type  go to state 39


state 26

    6 variable_section: VARIABLES_SECTION COLON variable_declarations .

    $default  reduce using rule 6 (variable_section)


state 27

    8 variable_declarations: variable_declaration . SEMICOLON variable_declarations_tail

    SEMICOLON  shift, and go to state 40


state 28

   16 variable_declaration: simple_variable_declaration .

    $default  reduce using rule 16 (variable_declaration)


state 29

   18 simple_variable_declaration: type . identifier simple_variable_declaration_value

    STRING  shift, and go to state 33

    identifier  go to state 41


state 30

   17 variable_declaration: compost_variable_declaration .

    $default  reduce using rule 17 (variable_declaration)


state 31

   11 subprogram_section: SUBPROGRAMS_SECTION COLON . subprogram_declarations

    PROCEDURE  shift, and go to state 42
    FUNCTION   shift, and go to state 43

    subprogram_declarations  go to state 44
    subprogram_declaration   go to state 45
    procedure_declaration    go to state 46
    function_declaration     go to state 47


state 32

   24 type: DOUBLE REAL .

    $default  reduce using rule 24 (type)


state 33

  136 identifier: STRING .

    $default  reduce using rule 136 (identifier)


state 34

   31 compost_variable_declaration: ENUM identifier . COLON identifier identifier_list END_ENUM

    COLON  shift, and go to state 48


state 35

   32 compost_variable_declaration: STRUCT identifier . COLON variable_declarations END_STRUCT

    COLON  shift, and go to state 49


state 36

   30 compost_variable_declaration: SET_OF type . identifier set_assignment

    STRING  shift, and go to state 33

    identifier  go to state 50


state 37

   29 compost_variable_declaration: MATRIX_OF type . OPEN_BRACKETS dimensions CLOSE_BRACKETS identifier matrix_assignment

    OPEN_BRACKETS  shift, and go to state 51


state 38

   19 simple_variable_declaration: CONST type . identifier ASSIGN_OP expression

    STRING  shift, and go to state 33

    identifier  go to state 52


state 39

   20 simple_variable_declaration: REF type . identifier simple_variable_declaration_value

    STRING  shift, and go to state 33

    identifier  go to state 53


state 40

    8 variable_declarations: variable_declaration SEMICOLON . variable_declarations_tail

    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 17
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25

    $default  reduce using rule 10 (variable_declarations_tail)

    variable_declarations         go to state 54
    variable_declarations_tail    go to state 55
    variable_declaration          go to state 27
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30


state 41

   18 simple_variable_declaration: type identifier . simple_variable_declaration_value

    ASSIGN_OP  shift, and go to state 56

    $default  reduce using rule 22 (simple_variable_declaration_value)

    simple_variable_declaration_value  go to state 57


state 42

   53 procedure_declaration: PROCEDURE . identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_PROCEDURE SEMICOLON

    STRING  shift, and go to state 33

    identifier  go to state 58


state 43

   54 function_declaration: FUNCTION . type identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_FUNCTION SEMICOLON

    INT      shift, and go to state 14
    REAL     shift, and go to state 15
    COMPLEX  shift, and go to state 16
    STRING   shift, and go to state 17
    DOUBLE   shift, and go to state 18
    BOOLEAN  shift, and go to state 19

    type  go to state 59


state 44

   11 subprogram_section: SUBPROGRAMS_SECTION COLON subprogram_declarations .

    $default  reduce using rule 11 (subprogram_section)


state 45

   13 subprogram_declarations: subprogram_declaration . subprogram_declarations_tail

    PROCEDURE  shift, and go to state 42
    FUNCTION   shift, and go to state 43

    $default  reduce using rule 15 (subprogram_declarations_tail)

    subprogram_declarations       go to state 60
    subprogram_declarations_tail  go to state 61
    subprogram_declaration        go to state 45
    procedure_declaration         go to state 46
    function_declaration          go to state 47


state 46

   51 subprogram_declaration: procedure_declaration .

    $default  reduce using rule 51 (subprogram_declaration)


state 47

   52 subprogram_declaration: function_declaration .

    $default  reduce using rule 52 (subprogram_declaration)


state 48

   31 compost_variable_declaration: ENUM identifier COLON . identifier identifier_list END_ENUM

    STRING  shift, and go to state 33

    identifier  go to state 62


state 49

   32 compost_variable_declaration: STRUCT identifier COLON . variable_declarations END_STRUCT

    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 17
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25

    variable_declarations         go to state 63
    variable_declaration          go to state 27
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30


state 50

   30 compost_variable_declaration: SET_OF type identifier . set_assignment

    ASSIGN_OP  shift, and go to state 64

    $default  reduce using rule 37 (set_assignment)

    set_assignment  go to state 65


state 51

   29 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS . dimensions CLOSE_BRACKETS identifier matrix_assignment

    NUMBER  shift, and go to state 66

    dimensions  go to state 67
    range       go to state 68


state 52

   19 simple_variable_declaration: CONST type identifier . ASSIGN_OP expression

    ASSIGN_OP  shift, and go to state 69


state 53

   20 simple_variable_declaration: REF type identifier . simple_variable_declaration_value

    ASSIGN_OP  shift, and go to state 56

    $default  reduce using rule 22 (simple_variable_declaration_value)

    simple_variable_declaration_value  go to state 70


state 54

    9 variable_declarations_tail: variable_declarations .

    $default  reduce using rule 9 (variable_declarations_tail)


state 55

    8 variable_declarations: variable_declaration SEMICOLON variable_declarations_tail .

    $default  reduce using rule 8 (variable_declarations)


state 56

   21 simple_variable_declaration_value: ASSIGN_OP . expression

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    expression            go to state 74
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 57

   18 simple_variable_declaration: type identifier simple_variable_declaration_value .

    $default  reduce using rule 18 (simple_variable_declaration)


state 58

   53 procedure_declaration: PROCEDURE identifier . OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_PROCEDURE SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 82


state 59

   54 function_declaration: FUNCTION type . identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_FUNCTION SEMICOLON

    STRING  shift, and go to state 33

    identifier  go to state 83


state 60

   14 subprogram_declarations_tail: subprogram_declarations .

    $default  reduce using rule 14 (subprogram_declarations_tail)


state 61

   13 subprogram_declarations: subprogram_declaration subprogram_declarations_tail .

    $default  reduce using rule 13 (subprogram_declarations)


state 62

   31 compost_variable_declaration: ENUM identifier COLON identifier . identifier_list END_ENUM

    COMMA  shift, and go to state 84

    $default  reduce using rule 44 (identifier_list)

    identifier_list  go to state 85


state 63

   32 compost_variable_declaration: STRUCT identifier COLON variable_declarations . END_STRUCT

    END_STRUCT  shift, and go to state 86


state 64

   36 set_assignment: ASSIGN_OP . OPEN_BRACES values values_list CLOSE_BRACES

    OPEN_BRACES  shift, and go to state 87


state 65

   30 compost_variable_declaration: SET_OF type identifier set_assignment .

    $default  reduce using rule 30 (compost_variable_declaration)


state 66

   46 range: NUMBER . range_tail

    RANGE  shift, and go to state 88

    $default  reduce using rule 48 (range_tail)

    range_tail  go to state 89


state 67

   29 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS dimensions . CLOSE_BRACKETS identifier matrix_assignment

    CLOSE_BRACKETS  shift, and go to state 90


state 68

   45 dimensions: range . dimensions_tail

    COMMA  shift, and go to state 91

    $default  reduce using rule 50 (dimensions_tail)

    dimensions_tail  go to state 92


state 69

   19 simple_variable_declaration: CONST type identifier ASSIGN_OP . expression

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    expression            go to state 93
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 70

   20 simple_variable_declaration: REF type identifier simple_variable_declaration_value .

    $default  reduce using rule 20 (simple_variable_declaration)


state 71

  124 expo: INCREMENT_OP . incr_decr

    NUMBER            shift, and go to state 94
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 95

    incr_decr      go to state 96
    function_call  go to state 97
    identifier     go to state 98


state 72

  125 expo: DECREMENT_OP . incr_decr

    NUMBER            shift, and go to state 94
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 95

    incr_decr      go to state 99
    function_call  go to state 97
    identifier     go to state 98


state 73

  126 expo: NEG_OP . incr_decr

    NUMBER            shift, and go to state 94
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 95

    incr_decr      go to state 100
    function_call  go to state 97
    identifier     go to state 98


state 74

   21 simple_variable_declaration_value: ASSIGN_OP expression .

    $default  reduce using rule 21 (simple_variable_declaration_value)


state 75

   96 expression: term_or . term_or_tail

    OR_OP  shift, and go to state 101

    $default  reduce using rule 98 (term_or_tail)

    term_or_tail  go to state 102


state 76

   99 term_or: term_and . term_and_tail

    AND_OP  shift, and go to state 103

    $default  reduce using rule 101 (term_and_tail)

    term_and_tail  go to state 104


state 77

  102 term_and: term_bool_comparison . term_bool_comparison_tail

    EQ_OP   shift, and go to state 105
    NEQ_OP  shift, and go to state 106

    $default  reduce using rule 105 (term_bool_comparison_tail)

    term_bool_comparison_tail  go to state 107


state 78

  106 term_bool_comparison: term_arit_comparison . term_arit_comparison_tail

    LEQ_OP  shift, and go to state 108
    BEQ_OP  shift, and go to state 109
    LT_OP   shift, and go to state 110
    BT_OP   shift, and go to state 111

    $default  reduce using rule 111 (term_arit_comparison_tail)

    term_arit_comparison_tail  go to state 112


state 79

  112 term_arit_comparison: term . term_tail

    SUB_OP  shift, and go to state 113
    ADD_OP  shift, and go to state 114

    $default  reduce using rule 115 (term_tail)

    term_tail  go to state 115


state 80

  116 term: factor . factor_tail

    MULT_OP  shift, and go to state 116
    DIV_OP   shift, and go to state 117
    MOD_OP   shift, and go to state 118

    $default  reduce using rule 120 (factor_tail)

    factor_tail  go to state 119


state 81

  121 factor: expo . expo_tail

    EXPO_OP  shift, and go to state 120

    $default  reduce using rule 123 (expo_tail)

    expo_tail  go to state 121


state 82

   53 procedure_declaration: PROCEDURE identifier OPEN_PARENTHESIS . parameter_list CLOSE_PARENTHESIS COLON statement_list END_PROCEDURE SEMICOLON

    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 17
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25

    $default  reduce using rule 56 (parameter_list)

    variable_declaration          go to state 122
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    parameter_list                go to state 123


state 83

   54 function_declaration: FUNCTION type identifier . OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_FUNCTION SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 124


state 84

   43 identifier_list: COMMA . identifier identifier_list

    STRING  shift, and go to state 33

    identifier  go to state 125


state 85

   31 compost_variable_declaration: ENUM identifier COLON identifier identifier_list . END_ENUM

    END_ENUM  shift, and go to state 126


state 86

   32 compost_variable_declaration: STRUCT identifier COLON variable_declarations END_STRUCT .

    $default  reduce using rule 32 (compost_variable_declaration)


state 87

   36 set_assignment: ASSIGN_OP OPEN_BRACES . values values_list CLOSE_BRACES

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    values                go to state 127
    expression            go to state 128
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 88

   47 range_tail: RANGE . NUMBER

    NUMBER  shift, and go to state 129


state 89

   46 range: NUMBER range_tail .

    $default  reduce using rule 46 (range)


state 90

   29 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS dimensions CLOSE_BRACKETS . identifier matrix_assignment

    STRING  shift, and go to state 33

    identifier  go to state 130


state 91

   49 dimensions_tail: COMMA . range dimensions_tail

    NUMBER  shift, and go to state 66

    range  go to state 131


state 92

   45 dimensions: range dimensions_tail .

    $default  reduce using rule 45 (dimensions)


state 93

   19 simple_variable_declaration: CONST type identifier ASSIGN_OP expression .

    $default  reduce using rule 19 (simple_variable_declaration)


state 94

  129 incr_decr: NUMBER .

    $default  reduce using rule 129 (incr_decr)


state 95

  131 incr_decr: OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    expression            go to state 132
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 96

  124 expo: INCREMENT_OP incr_decr .

    $default  reduce using rule 124 (expo)


state 97

  130 incr_decr: function_call .

    $default  reduce using rule 130 (incr_decr)


state 98

  128 incr_decr: identifier .
  132 function_call: identifier . OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 133

    $default  reduce using rule 128 (incr_decr)


state 99

  125 expo: DECREMENT_OP incr_decr .

    $default  reduce using rule 125 (expo)


state 100

  126 expo: NEG_OP incr_decr .

    $default  reduce using rule 126 (expo)


state 101

   97 term_or_tail: OR_OP . term_or term_or_tail

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    term_or               go to state 134
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 102

   96 expression: term_or term_or_tail .

    $default  reduce using rule 96 (expression)


state 103

  100 term_and_tail: AND_OP . term_and term_and_tail

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    term_and              go to state 135
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 104

   99 term_or: term_and term_and_tail .

    $default  reduce using rule 99 (term_or)


state 105

  103 term_bool_comparison_tail: EQ_OP . term_comparison term_comparison_tail

    NUMBER  shift, and go to state 136

    term_comparison  go to state 137


state 106

  104 term_bool_comparison_tail: NEQ_OP . term_comparison term_comparison_tail

    NUMBER  shift, and go to state 136

    term_comparison  go to state 138


state 107

  102 term_and: term_bool_comparison term_bool_comparison_tail .

    $default  reduce using rule 102 (term_and)


state 108

  107 term_arit_comparison_tail: LEQ_OP . term_comparison term_comparison_tail

    NUMBER  shift, and go to state 136

    term_comparison  go to state 139


state 109

  108 term_arit_comparison_tail: BEQ_OP . term_comparison term_comparison_tail

    NUMBER  shift, and go to state 136

    term_comparison  go to state 140


state 110

  109 term_arit_comparison_tail: LT_OP . term_comparison term_comparison_tail

    NUMBER  shift, and go to state 136

    term_comparison  go to state 141


state 111

  110 term_arit_comparison_tail: BT_OP . term_comparison term_comparison_tail

    NUMBER  shift, and go to state 136

    term_comparison  go to state 142


state 112

  106 term_bool_comparison: term_arit_comparison term_arit_comparison_tail .

    $default  reduce using rule 106 (term_bool_comparison)


state 113

  114 term_tail: SUB_OP . term term_tail

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    term    go to state 143
    factor  go to state 80
    expo    go to state 81


state 114

  113 term_tail: ADD_OP . term term_tail

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    term    go to state 144
    factor  go to state 80
    expo    go to state 81


state 115

  112 term_arit_comparison: term term_tail .

    $default  reduce using rule 112 (term_arit_comparison)


state 116

  117 factor_tail: MULT_OP . factor factor_tail

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    factor  go to state 145
    expo    go to state 81


state 117

  118 factor_tail: DIV_OP . factor factor_tail

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    factor  go to state 146
    expo    go to state 81


state 118

  119 factor_tail: MOD_OP . factor factor_tail

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    factor  go to state 147
    expo    go to state 81


state 119

  116 term: factor factor_tail .

    $default  reduce using rule 116 (term)


state 120

  122 expo_tail: EXPO_OP . incr_decr incr_decr_tail

    NUMBER            shift, and go to state 94
    STRING            shift, and go to state 33
    OPEN_PARENTHESIS  shift, and go to state 95

    incr_decr      go to state 148
    function_call  go to state 97
    identifier     go to state 98


state 121

  121 factor: expo expo_tail .

    $default  reduce using rule 121 (factor)


state 122

   55 parameter_list: variable_declaration . parameter_list_tail

    COMMA  shift, and go to state 149

    $default  reduce using rule 58 (parameter_list_tail)

    parameter_list_tail  go to state 150


state 123

   53 procedure_declaration: PROCEDURE identifier OPEN_PARENTHESIS parameter_list . CLOSE_PARENTHESIS COLON statement_list END_PROCEDURE SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 151


state 124

   54 function_declaration: FUNCTION type identifier OPEN_PARENTHESIS . parameter_list CLOSE_PARENTHESIS COLON statement_list END_FUNCTION SEMICOLON

    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 17
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25

    $default  reduce using rule 56 (parameter_list)

    variable_declaration          go to state 122
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    parameter_list                go to state 152


state 125

   43 identifier_list: COMMA identifier . identifier_list

    COMMA  shift, and go to state 84

    $default  reduce using rule 44 (identifier_list)

    identifier_list  go to state 153


state 126

   31 compost_variable_declaration: ENUM identifier COLON identifier identifier_list END_ENUM .

    $default  reduce using rule 31 (compost_variable_declaration)


state 127

   36 set_assignment: ASSIGN_OP OPEN_BRACES values . values_list CLOSE_BRACES

    COMMA  shift, and go to state 154

    $default  reduce using rule 40 (values_list)

    values_list  go to state 155


state 128

   38 values: expression . values_list

    COMMA  shift, and go to state 154

    COMMA     [reduce using rule 40 (values_list)]
    $default  reduce using rule 40 (values_list)

    values_list  go to state 156


state 129

   47 range_tail: RANGE NUMBER .

    $default  reduce using rule 47 (range_tail)


state 130

   29 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS dimensions CLOSE_BRACKETS identifier . matrix_assignment

    ASSIGN_OP  shift, and go to state 157

    $default  reduce using rule 34 (matrix_assignment)

    matrix_assignment      go to state 158
    matrix_assignment_aux  go to state 159


state 131

   49 dimensions_tail: COMMA range . dimensions_tail

    COMMA  shift, and go to state 91

    $default  reduce using rule 50 (dimensions_tail)

    dimensions_tail  go to state 160


state 132

  131 incr_decr: OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 161


state 133

  132 function_call: identifier OPEN_PARENTHESIS . parameter_list CLOSE_PARENTHESIS

    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 17
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25

    $default  reduce using rule 56 (parameter_list)

    variable_declaration          go to state 122
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    parameter_list                go to state 162


state 134

   97 term_or_tail: OR_OP term_or . term_or_tail

    OR_OP  shift, and go to state 101

    $default  reduce using rule 98 (term_or_tail)

    term_or_tail  go to state 163


state 135

  100 term_and_tail: AND_OP term_and . term_and_tail

    AND_OP  shift, and go to state 103

    $default  reduce using rule 101 (term_and_tail)

    term_and_tail  go to state 164


state 136

  134 term_comparison: NUMBER . STRING

    STRING  shift, and go to state 165


state 137

  103 term_bool_comparison_tail: EQ_OP term_comparison . term_comparison_tail

    COMMA  shift, and go to state 166

    term_comparison_tail  go to state 167


state 138

  104 term_bool_comparison_tail: NEQ_OP term_comparison . term_comparison_tail

    COMMA  shift, and go to state 166

    term_comparison_tail  go to state 168


state 139

  107 term_arit_comparison_tail: LEQ_OP term_comparison . term_comparison_tail

    COMMA  shift, and go to state 166

    term_comparison_tail  go to state 169


state 140

  108 term_arit_comparison_tail: BEQ_OP term_comparison . term_comparison_tail

    COMMA  shift, and go to state 166

    term_comparison_tail  go to state 170


state 141

  109 term_arit_comparison_tail: LT_OP term_comparison . term_comparison_tail

    COMMA  shift, and go to state 166

    term_comparison_tail  go to state 171


state 142

  110 term_arit_comparison_tail: BT_OP term_comparison . term_comparison_tail

    COMMA  shift, and go to state 166

    term_comparison_tail  go to state 172


state 143

  114 term_tail: SUB_OP term . term_tail

    SUB_OP  shift, and go to state 113
    ADD_OP  shift, and go to state 114

    $default  reduce using rule 115 (term_tail)

    term_tail  go to state 173


state 144

  113 term_tail: ADD_OP term . term_tail

    SUB_OP  shift, and go to state 113
    ADD_OP  shift, and go to state 114

    $default  reduce using rule 115 (term_tail)

    term_tail  go to state 174


state 145

  117 factor_tail: MULT_OP factor . factor_tail

    MULT_OP  shift, and go to state 116
    DIV_OP   shift, and go to state 117
    MOD_OP   shift, and go to state 118

    $default  reduce using rule 120 (factor_tail)

    factor_tail  go to state 175


state 146

  118 factor_tail: DIV_OP factor . factor_tail

    MULT_OP  shift, and go to state 116
    DIV_OP   shift, and go to state 117
    MOD_OP   shift, and go to state 118

    $default  reduce using rule 120 (factor_tail)

    factor_tail  go to state 176


state 147

  119 factor_tail: MOD_OP factor . factor_tail

    MULT_OP  shift, and go to state 116
    DIV_OP   shift, and go to state 117
    MOD_OP   shift, and go to state 118

    $default  reduce using rule 120 (factor_tail)

    factor_tail  go to state 177


state 148

  122 expo_tail: EXPO_OP incr_decr . incr_decr_tail

    STRING  shift, and go to state 178

    incr_decr_tail  go to state 179


state 149

   57 parameter_list_tail: COMMA . variable_declaration parameter_list_tail

    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 17
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25

    variable_declaration          go to state 180
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30


state 150

   55 parameter_list: variable_declaration parameter_list_tail .

    $default  reduce using rule 55 (parameter_list)


state 151

   53 procedure_declaration: PROCEDURE identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS . COLON statement_list END_PROCEDURE SEMICOLON

    COLON  shift, and go to state 181


state 152

   54 function_declaration: FUNCTION type identifier OPEN_PARENTHESIS parameter_list . CLOSE_PARENTHESIS COLON statement_list END_FUNCTION SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 182


state 153

   43 identifier_list: COMMA identifier identifier_list .

    $default  reduce using rule 43 (identifier_list)


state 154

   39 values_list: COMMA . values

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    values                go to state 183
    expression            go to state 128
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 155

   36 set_assignment: ASSIGN_OP OPEN_BRACES values values_list . CLOSE_BRACES

    CLOSE_BRACES  shift, and go to state 184


state 156

   38 values: expression values_list .

    $default  reduce using rule 38 (values)


state 157

   35 matrix_assignment_aux: ASSIGN_OP . OPEN_BRACES values CLOSE_BRACES values_group_list

    OPEN_BRACES  shift, and go to state 185


state 158

   29 compost_variable_declaration: MATRIX_OF type OPEN_BRACKETS dimensions CLOSE_BRACKETS identifier matrix_assignment .

    $default  reduce using rule 29 (compost_variable_declaration)


state 159

   33 matrix_assignment: matrix_assignment_aux .

    $default  reduce using rule 33 (matrix_assignment)


state 160

   49 dimensions_tail: COMMA range dimensions_tail .

    $default  reduce using rule 49 (dimensions_tail)


state 161

  131 incr_decr: OPEN_PARENTHESIS expression CLOSE_PARENTHESIS .

    $default  reduce using rule 131 (incr_decr)


state 162

  132 function_call: identifier OPEN_PARENTHESIS parameter_list . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 186


state 163

   97 term_or_tail: OR_OP term_or term_or_tail .

    $default  reduce using rule 97 (term_or_tail)


state 164

  100 term_and_tail: AND_OP term_and term_and_tail .

    $default  reduce using rule 100 (term_and_tail)


state 165

  134 term_comparison: NUMBER STRING .

    $default  reduce using rule 134 (term_comparison)


state 166

  135 term_comparison_tail: COMMA . STRING

    STRING  shift, and go to state 187


state 167

  103 term_bool_comparison_tail: EQ_OP term_comparison term_comparison_tail .

    $default  reduce using rule 103 (term_bool_comparison_tail)


state 168

  104 term_bool_comparison_tail: NEQ_OP term_comparison term_comparison_tail .

    $default  reduce using rule 104 (term_bool_comparison_tail)


state 169

  107 term_arit_comparison_tail: LEQ_OP term_comparison term_comparison_tail .

    $default  reduce using rule 107 (term_arit_comparison_tail)


state 170

  108 term_arit_comparison_tail: BEQ_OP term_comparison term_comparison_tail .

    $default  reduce using rule 108 (term_arit_comparison_tail)


state 171

  109 term_arit_comparison_tail: LT_OP term_comparison term_comparison_tail .

    $default  reduce using rule 109 (term_arit_comparison_tail)


state 172

  110 term_arit_comparison_tail: BT_OP term_comparison term_comparison_tail .

    $default  reduce using rule 110 (term_arit_comparison_tail)


state 173

  114 term_tail: SUB_OP term term_tail .

    $default  reduce using rule 114 (term_tail)


state 174

  113 term_tail: ADD_OP term term_tail .

    $default  reduce using rule 113 (term_tail)


state 175

  117 factor_tail: MULT_OP factor factor_tail .

    $default  reduce using rule 117 (factor_tail)


state 176

  118 factor_tail: DIV_OP factor factor_tail .

    $default  reduce using rule 118 (factor_tail)


state 177

  119 factor_tail: MOD_OP factor factor_tail .

    $default  reduce using rule 119 (factor_tail)


state 178

  133 incr_decr_tail: STRING . NUMBER

    NUMBER  shift, and go to state 188


state 179

  122 expo_tail: EXPO_OP incr_decr incr_decr_tail .

    $default  reduce using rule 122 (expo_tail)


state 180

   57 parameter_list_tail: COMMA variable_declaration . parameter_list_tail

    COMMA  shift, and go to state 149

    $default  reduce using rule 58 (parameter_list_tail)

    parameter_list_tail  go to state 189


state 181

   53 procedure_declaration: PROCEDURE identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON . statement_list END_PROCEDURE SEMICOLON

    RETURN     shift, and go to state 190
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 191
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 192
    FOR        shift, and go to state 193
    WHILE      shift, and go to state 194
    SWITCH     shift, and go to state 195

    $default  reduce using rule 60 (statement_list)

    variable_declaration          go to state 196
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 197
    statement                     go to state 198
    return_statement              go to state 199
    assignment_statement          go to state 200
    destination                   go to state 201
    if_statement                  go to state 202
    switch_statement              go to state 203
    while_statement               go to state 204
    for_statement                 go to state 205
    subprogram_call               go to state 206
    identifier                    go to state 207


state 182

   54 function_declaration: FUNCTION type identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS . COLON statement_list END_FUNCTION SEMICOLON

    COLON  shift, and go to state 208


state 183

   39 values_list: COMMA values .

    $default  reduce using rule 39 (values_list)


state 184

   36 set_assignment: ASSIGN_OP OPEN_BRACES values values_list CLOSE_BRACES .

    $default  reduce using rule 36 (set_assignment)


state 185

   35 matrix_assignment_aux: ASSIGN_OP OPEN_BRACES . values CLOSE_BRACES values_group_list

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    values                go to state 209
    expression            go to state 128
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 186

  132 function_call: identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS .

    $default  reduce using rule 132 (function_call)


state 187

  135 term_comparison_tail: COMMA STRING .

    $default  reduce using rule 135 (term_comparison_tail)


state 188

  133 incr_decr_tail: STRING NUMBER .

    $default  reduce using rule 133 (incr_decr_tail)


state 189

   57 parameter_list_tail: COMMA variable_declaration parameter_list_tail .

    $default  reduce using rule 57 (parameter_list_tail)


state 190

   69 return_statement: RETURN . expression SEMICOLON

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    expression            go to state 210
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 191

   28 type: STRING .
  136 identifier: STRING .

    STRING    reduce using rule 28 (type)
    $default  reduce using rule 136 (identifier)


state 192

   80 if_statement: IF . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 211


state 193

   89 for_statement: FOR . identifier IN identifier COLON statement_list END_FOR SEMICOLON

    STRING  shift, and go to state 33

    identifier  go to state 212


state 194

   88 while_statement: WHILE . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list END_WHILE SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 213


state 195

   83 switch_statement: SWITCH . OPEN_PARENTHESIS identifier CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH SEMICOLON

    OPEN_PARENTHESIS  shift, and go to state 214


state 196

   68 statement: variable_declaration .

    $default  reduce using rule 68 (statement)


state 197

   53 procedure_declaration: PROCEDURE identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list . END_PROCEDURE SEMICOLON

    END_PROCEDURE  shift, and go to state 215


state 198

   59 statement_list: statement . statement_list

    RETURN     shift, and go to state 190
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 191
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 192
    FOR        shift, and go to state 193
    WHILE      shift, and go to state 194
    SWITCH     shift, and go to state 195

    $default  reduce using rule 60 (statement_list)

    variable_declaration          go to state 196
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 216
    statement                     go to state 198
    return_statement              go to state 199
    assignment_statement          go to state 200
    destination                   go to state 201
    if_statement                  go to state 202
    switch_statement              go to state 203
    while_statement               go to state 204
    for_statement                 go to state 205
    subprogram_call               go to state 206
    identifier                    go to state 207


state 199

   67 statement: return_statement .

    $default  reduce using rule 67 (statement)


state 200

   61 statement: assignment_statement .

    $default  reduce using rule 61 (statement)


state 201

   70 assignment_statement: destination . assignment_statement_tail SEMICOLON

    ASSIGN_OP       shift, and go to state 217
    ADD_ASSIGN_OP   shift, and go to state 218
    SUB_ASSIGN_OP   shift, and go to state 219
    MULT_ASSIGN_OP  shift, and go to state 220
    DIV_ASSIGN_OP   shift, and go to state 221
    MOD_ASSIGN_OP   shift, and go to state 222

    assignment_statement_tail  go to state 223


state 202

   62 statement: if_statement .

    $default  reduce using rule 62 (statement)


state 203

   63 statement: switch_statement .

    $default  reduce using rule 63 (statement)


state 204

   64 statement: while_statement .

    $default  reduce using rule 64 (statement)


state 205

   65 statement: for_statement .

    $default  reduce using rule 65 (statement)


state 206

   66 statement: subprogram_call .

    $default  reduce using rule 66 (statement)


state 207

   77 destination: identifier . identifier_tail
   90 subprogram_call: identifier . OPEN_PARENTHESIS argument_list CLOSE_PARENTHESIS

    OPEN_PARENTHESIS  shift, and go to state 224
    OPEN_BRACKETS     shift, and go to state 225

    $default  reduce using rule 79 (identifier_tail)

    identifier_tail  go to state 226


state 208

   54 function_declaration: FUNCTION type identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON . statement_list END_FUNCTION SEMICOLON

    RETURN     shift, and go to state 190
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 191
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 192
    FOR        shift, and go to state 193
    WHILE      shift, and go to state 194
    SWITCH     shift, and go to state 195

    $default  reduce using rule 60 (statement_list)

    variable_declaration          go to state 196
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 227
    statement                     go to state 198
    return_statement              go to state 199
    assignment_statement          go to state 200
    destination                   go to state 201
    if_statement                  go to state 202
    switch_statement              go to state 203
    while_statement               go to state 204
    for_statement                 go to state 205
    subprogram_call               go to state 206
    identifier                    go to state 207


state 209

   35 matrix_assignment_aux: ASSIGN_OP OPEN_BRACES values . CLOSE_BRACES values_group_list

    CLOSE_BRACES  shift, and go to state 228


state 210

   69 return_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 229


state 211

   80 if_statement: IF OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF SEMICOLON

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    expression            go to state 230
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 212

   89 for_statement: FOR identifier . IN identifier COLON statement_list END_FOR SEMICOLON

    IN  shift, and go to state 231


state 213

   88 while_statement: WHILE OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS COLON statement_list END_WHILE SEMICOLON

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    expression            go to state 232
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 214

   83 switch_statement: SWITCH OPEN_PARENTHESIS . identifier CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH SEMICOLON

    STRING  shift, and go to state 33

    identifier  go to state 233


state 215

   53 procedure_declaration: PROCEDURE identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_PROCEDURE . SEMICOLON

    SEMICOLON  shift, and go to state 234


state 216

   59 statement_list: statement statement_list .

    $default  reduce using rule 59 (statement_list)


state 217

   71 assignment_statement_tail: ASSIGN_OP . expression

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    expression            go to state 235
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 218

   72 assignment_statement_tail: ADD_ASSIGN_OP . expression

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    expression            go to state 236
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 219

   73 assignment_statement_tail: SUB_ASSIGN_OP . expression

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    expression            go to state 237
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 220

   74 assignment_statement_tail: MULT_ASSIGN_OP . expression

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    expression            go to state 238
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 221

   75 assignment_statement_tail: DIV_ASSIGN_OP . expression

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    expression            go to state 239
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 222

   76 assignment_statement_tail: MOD_ASSIGN_OP . expression

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    expression            go to state 240
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 223

   70 assignment_statement: destination assignment_statement_tail . SEMICOLON

    SEMICOLON  shift, and go to state 241


state 224

   90 subprogram_call: identifier OPEN_PARENTHESIS . argument_list CLOSE_PARENTHESIS

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    CLOSE_PARENTHESIS  reduce using rule 92 (argument_list)
    CLOSE_PARENTHESIS  [reduce using rule 127 (expo)]
    $default           reduce using rule 127 (expo)

    argument_list         go to state 242
    argument_list_aux     go to state 243
    expression            go to state 244
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 225

   78 identifier_tail: OPEN_BRACKETS . dimensions CLOSE_BRACKETS

    NUMBER  shift, and go to state 66

    dimensions  go to state 245
    range       go to state 68


state 226

   77 destination: identifier identifier_tail .

    $default  reduce using rule 77 (destination)


state 227

   54 function_declaration: FUNCTION type identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list . END_FUNCTION SEMICOLON

    END_FUNCTION  shift, and go to state 246


state 228

   35 matrix_assignment_aux: ASSIGN_OP OPEN_BRACES values CLOSE_BRACES . values_group_list

    COMMA  shift, and go to state 247

    COMMA     [reduce using rule 42 (values_group_list)]
    $default  reduce using rule 42 (values_group_list)

    values_group_list  go to state 248


state 229

   69 return_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 69 (return_statement)


state 230

   80 if_statement: IF OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 249


state 231

   89 for_statement: FOR identifier IN . identifier COLON statement_list END_FOR SEMICOLON

    STRING  shift, and go to state 33

    identifier  go to state 250


state 232

   88 while_statement: WHILE OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS COLON statement_list END_WHILE SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 251


state 233

   83 switch_statement: SWITCH OPEN_PARENTHESIS identifier . CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH SEMICOLON

    CLOSE_PARENTHESIS  shift, and go to state 252


state 234

   53 procedure_declaration: PROCEDURE identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_PROCEDURE SEMICOLON .

    $default  reduce using rule 53 (procedure_declaration)


state 235

   71 assignment_statement_tail: ASSIGN_OP expression .

    $default  reduce using rule 71 (assignment_statement_tail)


state 236

   72 assignment_statement_tail: ADD_ASSIGN_OP expression .

    $default  reduce using rule 72 (assignment_statement_tail)


state 237

   73 assignment_statement_tail: SUB_ASSIGN_OP expression .

    $default  reduce using rule 73 (assignment_statement_tail)


state 238

   74 assignment_statement_tail: MULT_ASSIGN_OP expression .

    $default  reduce using rule 74 (assignment_statement_tail)


state 239

   75 assignment_statement_tail: DIV_ASSIGN_OP expression .

    $default  reduce using rule 75 (assignment_statement_tail)


state 240

   76 assignment_statement_tail: MOD_ASSIGN_OP expression .

    $default  reduce using rule 76 (assignment_statement_tail)


state 241

   70 assignment_statement: destination assignment_statement_tail SEMICOLON .

    $default  reduce using rule 70 (assignment_statement)


state 242

   90 subprogram_call: identifier OPEN_PARENTHESIS argument_list . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS  shift, and go to state 253


state 243

   91 argument_list: argument_list_aux .

    $default  reduce using rule 91 (argument_list)


state 244

   93 argument_list_aux: expression . argument_list_tail

    COMMA  shift, and go to state 254

    $default  reduce using rule 95 (argument_list_tail)

    argument_list_tail  go to state 255


state 245

   78 identifier_tail: OPEN_BRACKETS dimensions . CLOSE_BRACKETS

    CLOSE_BRACKETS  shift, and go to state 256


state 246

   54 function_declaration: FUNCTION type identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_FUNCTION . SEMICOLON

    SEMICOLON  shift, and go to state 257


state 247

   41 values_group_list: COMMA . OPEN_BRACES values CLOSE_BRACES values_group_list

    OPEN_BRACES  shift, and go to state 258


state 248

   35 matrix_assignment_aux: ASSIGN_OP OPEN_BRACES values CLOSE_BRACES values_group_list .

    $default  reduce using rule 35 (matrix_assignment_aux)


state 249

   80 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . COLON statement_list else_clausule END_IF SEMICOLON

    COLON  shift, and go to state 259


state 250

   89 for_statement: FOR identifier IN identifier . COLON statement_list END_FOR SEMICOLON

    COLON  shift, and go to state 260


state 251

   88 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . COLON statement_list END_WHILE SEMICOLON

    COLON  shift, and go to state 261


state 252

   83 switch_statement: SWITCH OPEN_PARENTHESIS identifier CLOSE_PARENTHESIS . COLON case_clasule other_clasule END_SWITCH SEMICOLON

    COLON  shift, and go to state 262


state 253

   90 subprogram_call: identifier OPEN_PARENTHESIS argument_list CLOSE_PARENTHESIS .

    $default  reduce using rule 90 (subprogram_call)


state 254

   94 argument_list_tail: COMMA . argument_list_aux

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    argument_list_aux     go to state 263
    expression            go to state 244
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 255

   93 argument_list_aux: expression argument_list_tail .

    $default  reduce using rule 93 (argument_list_aux)


state 256

   78 identifier_tail: OPEN_BRACKETS dimensions CLOSE_BRACKETS .

    $default  reduce using rule 78 (identifier_tail)


state 257

   54 function_declaration: FUNCTION type identifier OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS COLON statement_list END_FUNCTION SEMICOLON .

    $default  reduce using rule 54 (function_declaration)


state 258

   41 values_group_list: COMMA OPEN_BRACES . values CLOSE_BRACES values_group_list

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    values                go to state 264
    expression            go to state 128
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 259

   80 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON . statement_list else_clausule END_IF SEMICOLON

    RETURN     shift, and go to state 190
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 191
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 192
    FOR        shift, and go to state 193
    WHILE      shift, and go to state 194
    SWITCH     shift, and go to state 195

    $default  reduce using rule 60 (statement_list)

    variable_declaration          go to state 196
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 265
    statement                     go to state 198
    return_statement              go to state 199
    assignment_statement          go to state 200
    destination                   go to state 201
    if_statement                  go to state 202
    switch_statement              go to state 203
    while_statement               go to state 204
    for_statement                 go to state 205
    subprogram_call               go to state 206
    identifier                    go to state 207


state 260

   89 for_statement: FOR identifier IN identifier COLON . statement_list END_FOR SEMICOLON

    RETURN     shift, and go to state 190
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 191
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 192
    FOR        shift, and go to state 193
    WHILE      shift, and go to state 194
    SWITCH     shift, and go to state 195

    $default  reduce using rule 60 (statement_list)

    variable_declaration          go to state 196
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 266
    statement                     go to state 198
    return_statement              go to state 199
    assignment_statement          go to state 200
    destination                   go to state 201
    if_statement                  go to state 202
    switch_statement              go to state 203
    while_statement               go to state 204
    for_statement                 go to state 205
    subprogram_call               go to state 206
    identifier                    go to state 207


state 261

   88 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON . statement_list END_WHILE SEMICOLON

    RETURN     shift, and go to state 190
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 191
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 192
    FOR        shift, and go to state 193
    WHILE      shift, and go to state 194
    SWITCH     shift, and go to state 195

    $default  reduce using rule 60 (statement_list)

    variable_declaration          go to state 196
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 267
    statement                     go to state 198
    return_statement              go to state 199
    assignment_statement          go to state 200
    destination                   go to state 201
    if_statement                  go to state 202
    switch_statement              go to state 203
    while_statement               go to state 204
    for_statement                 go to state 205
    subprogram_call               go to state 206
    identifier                    go to state 207


state 262

   83 switch_statement: SWITCH OPEN_PARENTHESIS identifier CLOSE_PARENTHESIS COLON . case_clasule other_clasule END_SWITCH SEMICOLON

    CASE  shift, and go to state 268

    $default  reduce using rule 85 (case_clasule)

    case_clasule  go to state 269


state 263

   94 argument_list_tail: COMMA argument_list_aux .

    $default  reduce using rule 94 (argument_list_tail)


state 264

   41 values_group_list: COMMA OPEN_BRACES values . CLOSE_BRACES values_group_list

    CLOSE_BRACES  shift, and go to state 270


state 265

   80 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list . else_clausule END_IF SEMICOLON

    ELSE  shift, and go to state 271

    $default  reduce using rule 82 (else_clausule)

    else_clausule  go to state 272


state 266

   89 for_statement: FOR identifier IN identifier COLON statement_list . END_FOR SEMICOLON

    END_FOR  shift, and go to state 273


state 267

   88 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list . END_WHILE SEMICOLON

    END_WHILE  shift, and go to state 274


state 268

   84 case_clasule: CASE . OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON case_clasule

    OPEN_PARENTHESIS  shift, and go to state 275


state 269

   83 switch_statement: SWITCH OPEN_PARENTHESIS identifier CLOSE_PARENTHESIS COLON case_clasule . other_clasule END_SWITCH SEMICOLON

    OTHER  shift, and go to state 276

    $default  reduce using rule 87 (other_clasule)

    other_clasule  go to state 277


state 270

   41 values_group_list: COMMA OPEN_BRACES values CLOSE_BRACES . values_group_list

    COMMA  shift, and go to state 247

    COMMA     [reduce using rule 42 (values_group_list)]
    $default  reduce using rule 42 (values_group_list)

    values_group_list  go to state 278


state 271

   81 else_clausule: ELSE . statement_list

    RETURN     shift, and go to state 190
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 191
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 192
    FOR        shift, and go to state 193
    WHILE      shift, and go to state 194
    SWITCH     shift, and go to state 195

    $default  reduce using rule 60 (statement_list)

    variable_declaration          go to state 196
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 279
    statement                     go to state 198
    return_statement              go to state 199
    assignment_statement          go to state 200
    destination                   go to state 201
    if_statement                  go to state 202
    switch_statement              go to state 203
    while_statement               go to state 204
    for_statement                 go to state 205
    subprogram_call               go to state 206
    identifier                    go to state 207


state 272

   80 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list else_clausule . END_IF SEMICOLON

    END_IF  shift, and go to state 280


state 273

   89 for_statement: FOR identifier IN identifier COLON statement_list END_FOR . SEMICOLON

    SEMICOLON  shift, and go to state 281


state 274

   88 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list END_WHILE . SEMICOLON

    SEMICOLON  shift, and go to state 282


state 275

   84 case_clasule: CASE OPEN_PARENTHESIS . expression CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON case_clasule

    INCREMENT_OP  shift, and go to state 71
    DECREMENT_OP  shift, and go to state 72
    NEG_OP        shift, and go to state 73

    $default  reduce using rule 127 (expo)

    expression            go to state 283
    term_or               go to state 75
    term_and              go to state 76
    term_bool_comparison  go to state 77
    term_arit_comparison  go to state 78
    term                  go to state 79
    factor                go to state 80
    expo                  go to state 81


state 276

   86 other_clasule: OTHER . COLON statement_list

    COLON  shift, and go to state 284


state 277

   83 switch_statement: SWITCH OPEN_PARENTHESIS identifier CLOSE_PARENTHESIS COLON case_clasule other_clasule . END_SWITCH SEMICOLON

    END_SWITCH  shift, and go to state 285


state 278

   41 values_group_list: COMMA OPEN_BRACES values CLOSE_BRACES values_group_list .

    $default  reduce using rule 41 (values_group_list)


state 279

   81 else_clausule: ELSE statement_list .

    $default  reduce using rule 81 (else_clausule)


state 280

   80 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF . SEMICOLON

    SEMICOLON  shift, and go to state 286


state 281

   89 for_statement: FOR identifier IN identifier COLON statement_list END_FOR SEMICOLON .

    $default  reduce using rule 89 (for_statement)


state 282

   88 while_statement: WHILE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list END_WHILE SEMICOLON .

    $default  reduce using rule 88 (while_statement)


state 283

   84 case_clasule: CASE OPEN_PARENTHESIS expression . CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON case_clasule

    CLOSE_PARENTHESIS  shift, and go to state 287


state 284

   86 other_clasule: OTHER COLON . statement_list

    RETURN     shift, and go to state 190
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 191
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 192
    FOR        shift, and go to state 193
    WHILE      shift, and go to state 194
    SWITCH     shift, and go to state 195

    $default  reduce using rule 60 (statement_list)

    variable_declaration          go to state 196
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 288
    statement                     go to state 198
    return_statement              go to state 199
    assignment_statement          go to state 200
    destination                   go to state 201
    if_statement                  go to state 202
    switch_statement              go to state 203
    while_statement               go to state 204
    for_statement                 go to state 205
    subprogram_call               go to state 206
    identifier                    go to state 207


state 285

   83 switch_statement: SWITCH OPEN_PARENTHESIS identifier CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH . SEMICOLON

    SEMICOLON  shift, and go to state 289


state 286

   80 if_statement: IF OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list else_clausule END_IF SEMICOLON .

    $default  reduce using rule 80 (if_statement)


state 287

   84 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS . COLON statement_list BREAK SEMICOLON case_clasule

    COLON  shift, and go to state 290


state 288

   86 other_clasule: OTHER COLON statement_list .

    $default  reduce using rule 86 (other_clasule)


state 289

   83 switch_statement: SWITCH OPEN_PARENTHESIS identifier CLOSE_PARENTHESIS COLON case_clasule other_clasule END_SWITCH SEMICOLON .

    $default  reduce using rule 83 (switch_statement)


state 290

   84 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON . statement_list BREAK SEMICOLON case_clasule

    RETURN     shift, and go to state 190
    INT        shift, and go to state 14
    REAL       shift, and go to state 15
    COMPLEX    shift, and go to state 16
    STRING     shift, and go to state 191
    DOUBLE     shift, and go to state 18
    BOOLEAN    shift, and go to state 19
    ENUM       shift, and go to state 20
    STRUCT     shift, and go to state 21
    SET_OF     shift, and go to state 22
    MATRIX_OF  shift, and go to state 23
    CONST      shift, and go to state 24
    REF        shift, and go to state 25
    IF         shift, and go to state 192
    FOR        shift, and go to state 193
    WHILE      shift, and go to state 194
    SWITCH     shift, and go to state 195

    $default  reduce using rule 60 (statement_list)

    variable_declaration          go to state 196
    simple_variable_declaration   go to state 28
    type                          go to state 29
    compost_variable_declaration  go to state 30
    statement_list                go to state 291
    statement                     go to state 198
    return_statement              go to state 199
    assignment_statement          go to state 200
    destination                   go to state 201
    if_statement                  go to state 202
    switch_statement              go to state 203
    while_statement               go to state 204
    for_statement                 go to state 205
    subprogram_call               go to state 206
    identifier                    go to state 207


state 291

   84 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list . BREAK SEMICOLON case_clasule

    BREAK  shift, and go to state 292


state 292

   84 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list BREAK . SEMICOLON case_clasule

    SEMICOLON  shift, and go to state 293


state 293

   84 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON . case_clasule

    CASE  shift, and go to state 268

    $default  reduce using rule 85 (case_clasule)

    case_clasule  go to state 294


state 294

   84 case_clasule: CASE OPEN_PARENTHESIS expression CLOSE_PARENTHESIS COLON statement_list BREAK SEMICOLON case_clasule .

    $default  reduce using rule 84 (case_clasule)
